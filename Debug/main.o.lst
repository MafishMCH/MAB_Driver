   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB164:
  26              	 .file 1 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE164:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB165:
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE165:
 114 0022 00BF     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_ToggleOutput:
 120              	.LFB166:
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 309 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 139              	 .loc 1 312 0
 140 000c FB78     	 ldrb r3,[r7,#3]
 141 000e 4FF00112 	 mov r2,#65537
 142 0012 9A40     	 lsls r2,r2,r3
 143 0014 7B68     	 ldr r3,[r7,#4]
 144 0016 5A60     	 str r2,[r3,#4]
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 313 0
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE166:
 161 0022 00BF     	 .section .text.XMC_USIC_CH_ConfigureShiftClockOutput,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_USIC_CH_ConfigureShiftClockOutput:
 167              	.LFB231:
 168              	 .file 2 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-02-10
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Msk /**< Shift MSB first. The 
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   };
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   };
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
 977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
 997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
 999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
1135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
1182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** */
1726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
1928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
1933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
1934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
1935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
1936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
1942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
1946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
1947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
1948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
1954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
1960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
1963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
1968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
1982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
1983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
1986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
1987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
1988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
1989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
1990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
1991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
1992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
1993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
1997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
1999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
2001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
2004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
2006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
2008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** 
2009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
2010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
2016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
2019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
2021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
2022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
2024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** /**
2025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  *
2037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****  */
2046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
2048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
2049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** {
 169              	 .loc 2 2049 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173              	 
 174 0000 80B4     	 push {r7}
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 4
 177              	 .cfi_offset 7,-4
 178 0002 85B0     	 sub sp,sp,#20
 179              	.LCFI19:
 180              	 .cfi_def_cfa_offset 24
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI20:
 183              	 .cfi_def_cfa_register 7
 184 0006 F860     	 str r0,[r7,#12]
 185 0008 B960     	 str r1,[r7,#8]
 186 000a 7A60     	 str r2,[r7,#4]
2050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
 187              	 .loc 2 2050 0
 188 000c FB68     	 ldr r3,[r7,#12]
 189 000e 5B69     	 ldr r3,[r3,#20]
 190 0010 23F05042 	 bic r2,r3,#-805306368
2051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
2052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
 191              	 .loc 2 2052 0
 192 0014 BB68     	 ldr r3,[r7,#8]
2051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
 193              	 .loc 2 2051 0
 194 0016 1A43     	 orrs r2,r2,r3
 195              	 .loc 2 2052 0
 196 0018 7B68     	 ldr r3,[r7,#4]
 197 001a 1A43     	 orrs r2,r2,r3
2050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
 198              	 .loc 2 2050 0
 199 001c FB68     	 ldr r3,[r7,#12]
 200 001e 5A61     	 str r2,[r3,#20]
2053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_usic.h **** }
 201              	 .loc 2 2054 0
 202 0020 1437     	 adds r7,r7,#20
 203              	.LCFI21:
 204              	 .cfi_def_cfa_offset 4
 205 0022 BD46     	 mov sp,r7
 206              	.LCFI22:
 207              	 .cfi_def_cfa_register 13
 208              	 
 209 0024 5DF8047B 	 ldr r7,[sp],#4
 210              	.LCFI23:
 211              	 .cfi_restore 7
 212              	 .cfi_def_cfa_offset 0
 213 0028 7047     	 bx lr
 214              	 .cfi_endproc
 215              	.LFE231:
 217 002a 00BF     	 .section .text.XMC_SPI_CH_ConfigureShiftClockOutput,"ax",%progbits
 218              	 .align 2
 219              	 .thumb
 220              	 .thumb_func
 222              	XMC_SPI_CH_ConfigureShiftClockOutput:
 223              	.LFB248:
 224              	 .file 3 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2016-05-20
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *   
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and 
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond 
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module. 
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */ 
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */ 
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 4UL, /**< SPI standard half duplex mode */ 
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL= 6UL,                 /**< SPI half duplex mode with dual data lines */ 
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD= 7UL                  /**< SPI half duplex mode with quad data lines */
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** */
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							  /**< Module baud rate for communication */
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config);
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                   (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.      
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init(). 
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent(). 
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication. 
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Clears the events specified, by setting PSCR register.\n\n
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetStatusFlag()
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PSCR |= flag;
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the generation of Master clock by setting PCR.MCLK bit.\n\n
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be used as a clock reference for external devices. This is not enabled during ini
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(). Invoke XMC_SPI_CH_EnableMasterClock() to enable as needed in the program, or 
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock().
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock()
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableMasterClock(XMC_USIC_CH_t *const channel)
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_MCLK_Msk;
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the generation of Master clock by clearing PCR.MCLK bit.\n\n
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be enabled by invoking XMC_SPI_CH_EnableMasterClock() as needed in the program.
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableMasterClock()
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableMasterClock(XMC_USIC_CH_t *const channel)
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_MCLK_Msk;
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef USIC_CH_PCR_SSCMode_SLPHSEL_Msk
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Data bits are shifted out with the leading edge of the shift clock signal and latched in with th
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInLeadingEdge()
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInTrailingEdge(XMC_USIC_CH_t *const channel)
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The first data bit is shifted out when the data shift unit receives a low to high transition fro
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * stage. Subsequent bits are shifted out with the trailing edge of the shift clock signal. Data bi
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * always latched in with the leading edge.
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInTrailingEdge()
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInLeadingEdge(XMC_USIC_CH_t *const channel)
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the delay after each word, by setting PCR.TIWEN bit.\n\n
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay starts at the end of last SCLK cycle of data word. During this time no cloc
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * generated and MSLS signal stays active. If inter word delay is not enabled, last data bit of a d
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * followed by the first data bit of the next data word. This is not enabled in XMC_SPI_CH_Init(). 
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay() has to be invoked as needed in the program. And can be disable
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay().
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay()
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableInterwordDelay(XMC_USIC_CH_t *const channel)
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_TIWEN_Msk;
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the delay after after each word, by clearing PCR.TIWEN bit.\n\n
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * So the last data bit of a data word is directly followed by the first data bit of the next data 
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * be enabled by invoking XMC_SPI_CH_EnableInterwordDelay().
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay()
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableInterwordDelay(XMC_USIC_CH_t *const channel)
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_TIWEN_Msk;
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param tinterword_delay_ns delay in terms of nano seconds.
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.PCTQ1, PCR.DCTQ1 bit fields.\n\n
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay is dependent on the peripheral clock. The maximum possible value is calcula
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * below formula\n
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *            Maximum inter word delay = ((1 + PCTQ1_max)(1 + DCTQ1_max)) / peripheral clock\n
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                                       where PCTQ1_max = 3 and DCTQ1_max = 31\n
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_SetInterwordDelaySCLK()
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_SetInterwordDelay(XMC_USIC_CH_t *const channel,uint32_t tinterword_delay_ns);
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period  in terms of clk cycles.
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.DCTQ1 bit fields.\n\n
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * is 32 clock cycles.
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_EnableInterwordDelay()
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetInterwordDelaySCLK(XMC_USIC_CH_t *const channel,uint32_t sclk_pe
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode = (uint32_t)((channel->PCR_SSCMode) & (~(USIC_CH_PCR_SSCMode_DCTQ1_Msk |
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                 USIC_CH_PCR_SSCMode_PCTQ1_Msk |
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                                 USIC_CH_PCR_SSCMode_CTQSEL1_Msk))) 
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                          (((sclk_period - 1U) <<  USIC_CH_PCR_SSCMode_DCTQ1_Pos) |
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                          (0x02U <<  USIC_CH_PCR_SSCMode_CTQSEL1_Pos));
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period delay in terms of sclk clock cycles.
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the leading/trailing delay by setting BRG.DCTQ bit field.\n\n
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * is 30 clock cycles.
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetSlaveSelectDelay(XMC_USIC_CH_t *const channel,uint32_t sclk_peri
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 								   USIC_CH_BRG_PCTQ_Msk)) |
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                  (((sclk_period - 1U) << USIC_CH_BRG_DCTQ_Pos) | (0x01U << USIC_CH_BRG_PCTQ_Pos));
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to keep MSLS(Slave select signal) active even after finishing the current data frame,
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically used during the transmission of multi-data word frames, where there is possibi
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * delivering the data. Frame end mode is enabled in XMC_SPI_CH_Init() during initialization. To di
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM() can be invoked as needed in the program.
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM()
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableFEM(XMC_USIC_CH_t *const channel)
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_FEM_Msk;
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to disable the MSLS(Slave select signal) if the current data frame is considered as fi
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * When the last bit of a data word has been sent out and the transmit buffer TBUF does not contain
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as frame is ended and MSLS(Slave select signal) is disabled.
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableFEM()
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableFEM(XMC_USIC_CH_t *const channel)
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_FEM_Msk;
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** 
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** /**
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param passive_level polarity and delay of the selected shift clock.\n
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                      Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t for valid inputs.
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @param clock_output shift clock source.\n
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *                     Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t for valid inputs.
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  *
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the shift clock source with the selected polarity and delay by setting BRG.SCLKOSEL a
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * In Master mode operation, shift clock is generated by the internal baud rate generator. This SCL
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * for external slave devices by SCLKOUT signal.\n
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * In Slave mode, the signal is received from the external master. So the DX1(input) stage has to b
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * The shift clock output(SCLKOUT) signal polarity can be set relative to SCLK, with the delay of h
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  * period. These settings are applicable only in master mode.
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****  */
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                           const XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                                           const XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** {
 225              	 .loc 3 868 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI24:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 84B0     	 sub sp,sp,#16
 235              	.LCFI25:
 236              	 .cfi_def_cfa_offset 24
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI26:
 239              	 .cfi_def_cfa_register 7
 240 0006 F860     	 str r0,[r7,#12]
 241 0008 B960     	 str r1,[r7,#8]
 242 000a 7A60     	 str r2,[r7,#4]
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_ConfigureShiftClockOutput(channel, (XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t)passi
 243              	 .loc 3 869 0
 244 000c F868     	 ldr r0,[r7,#12]
 245 000e B968     	 ldr r1,[r7,#8]
 246 0010 7A68     	 ldr r2,[r7,#4]
 247 0012 FFF7FEFF 	 bl XMC_USIC_CH_ConfigureShiftClockOutput
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h ****                                        (XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t)clock_output);
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_spi.h **** }
 248              	 .loc 3 871 0
 249 0016 1037     	 adds r7,r7,#16
 250              	.LCFI27:
 251              	 .cfi_def_cfa_offset 8
 252 0018 BD46     	 mov sp,r7
 253              	.LCFI28:
 254              	 .cfi_def_cfa_register 13
 255              	 
 256 001a 80BD     	 pop {r7,pc}
 257              	 .cfi_endproc
 258              	.LFE248:
 260              	 .section .text.SPI_MASTER_IsRxBusy,"ax",%progbits
 261              	 .align 2
 262              	 .thumb
 263              	 .thumb_func
 265              	SPI_MASTER_IsRxBusy:
 266              	.LFB272:
 267              	 .file 4 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER/spi_master.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-04-07
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.20 - Configures the properties of USIC channel to support SPI mode of communicat
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_gpio.h>
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_scu.h>
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_spi.h>
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include <DAVE_Common.h>
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #include "./GLOBAL_DMA/global_dma.h"
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****        (XMC_LIB_MINOR_VERSION >= 1U) && \
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****        (XMC_LIB_PATCH_VERSION >= 6U)))
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** */
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
 958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
 994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
 995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
 996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
1076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
1078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
1079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Clears the status of the specified interrupt flags.
1082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag_mask Interrupt for which status has to be cleared
1085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * During communication the events occurred has to be cleared to get the successive events.\n
1089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
1090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * to be cleared after transmission of each data word. Otherwise next event is not considered as va
1091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not, and clears the flag.
1100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIF
1111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_ClearFlag(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_ClearFlag(const SPI_MASTER_t* handle, const uint32_t flag_mask)
1125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
1126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_ClearFlag:handle NULL" , (handle != NULL));
1127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, flag_mask);
1128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
1129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the txbusy flag state
1132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of txbusy flag
1134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any transmit process is going or not. If no process is going then 
1138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortTransmit() can be used to stop the current process 
1139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
1149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
1161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0))
1163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
1177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsTxBusy(const SPI_MASTER_t* const handle)
1180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
1181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->tx_busy);
1183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
1184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the rxbusy flag state
1187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of rxbusy flag
1189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any receive process is going or not. If no process is going then o
1193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortReceive() can be used to stop the current process a
1194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
1204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
1209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
1214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsRxBusy(&SPI_MASTER_0))
1216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsRxBusy(const SPI_MASTER_t* const handle)
1232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 268              	 .loc 4 1232 0
 269              	 .cfi_startproc
 270              	 
 271              	 
 272              	 
 273 0000 80B4     	 push {r7}
 274              	.LCFI29:
 275              	 .cfi_def_cfa_offset 4
 276              	 .cfi_offset 7,-4
 277 0002 83B0     	 sub sp,sp,#12
 278              	.LCFI30:
 279              	 .cfi_def_cfa_offset 16
 280 0004 00AF     	 add r7,sp,#0
 281              	.LCFI31:
 282              	 .cfi_def_cfa_register 7
 283 0006 7860     	 str r0,[r7,#4]
1233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->rx_busy);
 284              	 .loc 4 1234 0
 285 0008 7B68     	 ldr r3,[r7,#4]
 286 000a 9B68     	 ldr r3,[r3,#8]
 287 000c DB7F     	 ldrb r3,[r3,#31]
 288 000e DBB2     	 uxtb r3,r3
1235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
 289              	 .loc 4 1235 0
 290 0010 1846     	 mov r0,r3
 291 0012 0C37     	 adds r7,r7,#12
 292              	.LCFI32:
 293              	 .cfi_def_cfa_offset 4
 294 0014 BD46     	 mov sp,r7
 295              	.LCFI33:
 296              	 .cfi_def_cfa_register 13
 297              	 
 298 0016 5DF8047B 	 ldr r7,[sp],#4
 299              	.LCFI34:
 300              	 .cfi_restore 7
 301              	 .cfi_def_cfa_offset 0
 302 001a 7047     	 bx lr
 303              	 .cfi_endproc
 304              	.LFE272:
 306              	 .section .text.SPI_MASTER_EnableSlaveSelectSignal,"ax",%progbits
 307              	 .align 2
 308              	 .thumb
 309              	 .thumb_func
 311              	SPI_MASTER_EnableSlaveSelectSignal:
 312              	.LFB273:
1236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enables the specified slave select line
1240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param slave which slave signal has to be enabled
1243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Each slave is connected with one slave select signal. At a time only one slave can be communicat
1246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * required slave to start the communication.
1247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Generate code for multiple slave by configuring in "Advanced settings tab". Transmit the data to
1251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_EnableSlaveSelectSignal(const SPI_MASTER_t* handle, const SPI_MASTE
1286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 313              	 .loc 4 1286 0
 314              	 .cfi_startproc
 315              	 
 316              	 
 317 0000 80B5     	 push {r7,lr}
 318              	.LCFI35:
 319              	 .cfi_def_cfa_offset 8
 320              	 .cfi_offset 7,-8
 321              	 .cfi_offset 14,-4
 322 0002 82B0     	 sub sp,sp,#8
 323              	.LCFI36:
 324              	 .cfi_def_cfa_offset 16
 325 0004 00AF     	 add r7,sp,#0
 326              	.LCFI37:
 327              	 .cfi_def_cfa_register 7
 328 0006 7860     	 str r0,[r7,#4]
 329 0008 0B46     	 mov r3,r1
 330 000a FB70     	 strb r3,[r7,#3]
1287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:handle NULL" , (handle != NULL));
1288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:Invalid Slave selection" , ((slave == SPI_MASTER
1289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                               );
1297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_EnableSlaveSelect(handle->channel, handle->config->slave_select_pin_config[slave]->s
 331              	 .loc 4 1297 0
 332 000c 7B68     	 ldr r3,[r7,#4]
 333 000e 1968     	 ldr r1,[r3]
 334 0010 7B68     	 ldr r3,[r7,#4]
 335 0012 5B68     	 ldr r3,[r3,#4]
 336 0014 FA78     	 ldrb r2,[r7,#3]
 337 0016 1432     	 adds r2,r2,#20
 338 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 339 001c 1B69     	 ldr r3,[r3,#16]
 340 001e 0846     	 mov r0,r1
 341 0020 1946     	 mov r1,r3
 342 0022 FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
1298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
 343              	 .loc 4 1298 0
 344 0026 0837     	 adds r7,r7,#8
 345              	.LCFI38:
 346              	 .cfi_def_cfa_offset 8
 347 0028 BD46     	 mov sp,r7
 348              	.LCFI39:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 002a 80BD     	 pop {r7,pc}
 352              	 .cfi_endproc
 353              	.LFE273:
 355              	 .section .text.SPI_MASTER_DisableSlaveSelectSignal,"ax",%progbits
 356              	 .align 2
 357              	 .thumb
 358              	 .thumb_func
 360              	SPI_MASTER_DisableSlaveSelectSignal:
 361              	.LFB274:
1299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** 
1300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Disables the all the slave select lines
1302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Disable all the slave signals by clearing PCR.SELO bits.
1307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_DisableSlaveSelectSignal(const SPI_MASTER_t* handle)
1345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** {
 362              	 .loc 4 1345 0
 363              	 .cfi_startproc
 364              	 
 365              	 
 366 0000 80B5     	 push {r7,lr}
 367              	.LCFI40:
 368              	 .cfi_def_cfa_offset 8
 369              	 .cfi_offset 7,-8
 370              	 .cfi_offset 14,-4
 371 0002 82B0     	 sub sp,sp,#8
 372              	.LCFI41:
 373              	 .cfi_def_cfa_offset 16
 374 0004 00AF     	 add r7,sp,#0
 375              	.LCFI42:
 376              	 .cfi_def_cfa_register 7
 377 0006 7860     	 str r0,[r7,#4]
1346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_Transmit:handle NULL" , (handle != NULL));
1347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_DisableSlaveSelect(handle->channel);
 378              	 .loc 4 1347 0
 379 0008 7B68     	 ldr r3,[r7,#4]
 380 000a 1B68     	 ldr r3,[r3]
 381 000c 1846     	 mov r0,r3
 382 000e FFF7FEFF 	 bl XMC_SPI_CH_DisableSlaveSelect
1348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER\spi_master.h **** }
 383              	 .loc 4 1348 0
 384 0012 0837     	 adds r7,r7,#8
 385              	.LCFI43:
 386              	 .cfi_def_cfa_offset 8
 387 0014 BD46     	 mov sp,r7
 388              	.LCFI44:
 389              	 .cfi_def_cfa_register 13
 390              	 
 391 0016 80BD     	 pop {r7,pc}
 392              	 .cfi_endproc
 393              	.LFE274:
 395              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 396              	 .align 2
 397              	 .thumb
 398              	 .thumb_func
 400              	DIGITAL_IO_SetOutputHigh:
 401              	.LFB291:
 402              	 .file 5 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 403              	 .loc 5 269 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407 0000 80B5     	 push {r7,lr}
 408              	.LCFI45:
 409              	 .cfi_def_cfa_offset 8
 410              	 .cfi_offset 7,-8
 411              	 .cfi_offset 14,-4
 412 0002 82B0     	 sub sp,sp,#8
 413              	.LCFI46:
 414              	 .cfi_def_cfa_offset 16
 415 0004 00AF     	 add r7,sp,#0
 416              	.LCFI47:
 417              	 .cfi_def_cfa_register 7
 418 0006 7860     	 str r0,[r7,#4]
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 419              	 .loc 5 271 0
 420 0008 7B68     	 ldr r3,[r7,#4]
 421 000a 1A68     	 ldr r2,[r3]
 422 000c 7B68     	 ldr r3,[r7,#4]
 423 000e 1B7C     	 ldrb r3,[r3,#16]
 424 0010 1046     	 mov r0,r2
 425 0012 1946     	 mov r1,r3
 426 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 427              	 .loc 5 272 0
 428 0018 0837     	 adds r7,r7,#8
 429              	.LCFI48:
 430              	 .cfi_def_cfa_offset 8
 431 001a BD46     	 mov sp,r7
 432              	.LCFI49:
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 001c 80BD     	 pop {r7,pc}
 436              	 .cfi_endproc
 437              	.LFE291:
 439 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 440              	 .align 2
 441              	 .thumb
 442              	 .thumb_func
 444              	DIGITAL_IO_SetOutputLow:
 445              	.LFB292:
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 446              	 .loc 5 316 0
 447              	 .cfi_startproc
 448              	 
 449              	 
 450 0000 80B5     	 push {r7,lr}
 451              	.LCFI50:
 452              	 .cfi_def_cfa_offset 8
 453              	 .cfi_offset 7,-8
 454              	 .cfi_offset 14,-4
 455 0002 82B0     	 sub sp,sp,#8
 456              	.LCFI51:
 457              	 .cfi_def_cfa_offset 16
 458 0004 00AF     	 add r7,sp,#0
 459              	.LCFI52:
 460              	 .cfi_def_cfa_register 7
 461 0006 7860     	 str r0,[r7,#4]
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 462              	 .loc 5 318 0
 463 0008 7B68     	 ldr r3,[r7,#4]
 464 000a 1A68     	 ldr r2,[r3]
 465 000c 7B68     	 ldr r3,[r7,#4]
 466 000e 1B7C     	 ldrb r3,[r3,#16]
 467 0010 1046     	 mov r0,r2
 468 0012 1946     	 mov r1,r3
 469 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 470              	 .loc 5 319 0
 471 0018 0837     	 adds r7,r7,#8
 472              	.LCFI53:
 473              	 .cfi_def_cfa_offset 8
 474 001a BD46     	 mov sp,r7
 475              	.LCFI54:
 476              	 .cfi_def_cfa_register 13
 477              	 
 478 001c 80BD     	 pop {r7,pc}
 479              	 .cfi_endproc
 480              	.LFE292:
 482 001e 00BF     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 483              	 .align 2
 484              	 .thumb
 485              	 .thumb_func
 487              	DIGITAL_IO_ToggleOutput:
 488              	.LFB293:
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 489              	 .loc 5 368 0
 490              	 .cfi_startproc
 491              	 
 492              	 
 493 0000 80B5     	 push {r7,lr}
 494              	.LCFI55:
 495              	 .cfi_def_cfa_offset 8
 496              	 .cfi_offset 7,-8
 497              	 .cfi_offset 14,-4
 498 0002 82B0     	 sub sp,sp,#8
 499              	.LCFI56:
 500              	 .cfi_def_cfa_offset 16
 501 0004 00AF     	 add r7,sp,#0
 502              	.LCFI57:
 503              	 .cfi_def_cfa_register 7
 504 0006 7860     	 str r0,[r7,#4]
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 505              	 .loc 5 370 0
 506 0008 7B68     	 ldr r3,[r7,#4]
 507 000a 1A68     	 ldr r2,[r3]
 508 000c 7B68     	 ldr r3,[r7,#4]
 509 000e 1B7C     	 ldrb r3,[r3,#16]
 510 0010 1046     	 mov r0,r2
 511 0012 1946     	 mov r1,r3
 512 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 513              	 .loc 5 371 0
 514 0018 0837     	 adds r7,r7,#8
 515              	.LCFI58:
 516              	 .cfi_def_cfa_offset 8
 517 001a BD46     	 mov sp,r7
 518              	.LCFI59:
 519              	 .cfi_def_cfa_register 13
 520              	 
 521 001c 80BD     	 pop {r7,pc}
 522              	 .cfi_endproc
 523              	.LFE293:
 525 001e 00BF     	 .section .text.XMC_VADC_GROUP_GetResult,"ax",%progbits
 526              	 .align 2
 527              	 .thumb
 528              	 .thumb_func
 530              	XMC_VADC_GROUP_GetResult:
 531              	.LFB415:
 532              	 .file 6 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2017-06-24
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *      
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed. 
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR. 
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-06-17:
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs added are:
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultRegPriority
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetResultRegPriority
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-02-06:
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new functions to remove channels from background request source, XMC_VADC_GLOBAL_Bac
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-06-24:
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new function XMC_VADC_GLOBAL_SHS_SetAnalogReference() for XMC1 family
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond 
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_common.h>
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_scu.h>
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE           (1U) /*  Defines the availability of group resource in a
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE           (1U) /*  Defines the availability of scan request resour
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE           (1U) /*  Defines the availability of queue request resou
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE            (1U) /*  Defines the availability of external multiplexe
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE        (1U) /*  Defines the availability of boundary check supp
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS      (1U) /*  Defines the availability of synchronous request
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS        (2U) /*  Defines the maximum number of groups available 
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT      (1U) /*  Defines the availability of boundary flags in a
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE         (1U) /*  Defines the external multiplexer channel select
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE             (0U) /* Defines the availability of sample and hold modu
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG          (0U) /* Defines the availability of sample and hold modu
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE    (1U) /* Define the availability of a source specific res
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (1U) /* Defines the availability of sample and hold module
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (1U) /* Define the availability of a priority for result
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION 
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** */
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_AREF
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_EXTERNAL_VDD_UPPER_RANGE = 0, /**< External reference, upper supply rang
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_UPPER_RANGE = 2, /**< Internal reference, upper supply rang
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_LOWER_RANGE = 3, /**< Internal reference, lower supply rang
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_AREF_t;
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the ready signal selection
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SYNCTR_EVAL
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_1 = VADC_G_SYNCTR_EVALR1_Msk, /**<Mask to set the EVAL1 bits of SYNCTR */
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_2 = VADC_G_SYNCTR_EVALR2_Msk, /**<Mask to set the EVAL2 bits of SYNCTR */
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_3 = VADC_G_SYNCTR_EVALR3_Msk  /**<Mask to set the EVAL3 bits of SYNCTR */
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SYNCTR_EVAL_t;
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma push
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma anon_unions
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning 586
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asctrl;
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 2;
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 26;
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asmr;
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 2;
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 4;
 872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 6;
 877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t chctr;
 882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 8;
 888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 12;
 914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bfl;
 916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t                           : 16;
 931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bflc;
 933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 24;
 955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qinr0;
 958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
 961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qctrl0;
 995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 2;
1001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
1002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 29;
1003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qmr0;
1005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
1007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
1011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
1014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
1026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 16;
1034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globiclass;
1037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
1039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
1043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
1045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
1052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 2;
1053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
1054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
1055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 5;
1056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 17;
1057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globcfg;
1059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globbound;
1079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 6;
1095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globrcr;
1098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 2;
1105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 28;
1107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t clc;
1109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_iclass0;
1137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 13;
1154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 5;
1159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 1;
1168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 2;
1170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_bound;
1196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 4;
1202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 1;
1204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 24;
1207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 2;
1229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_rcr;
1235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :6;
1291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :10;
1293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif      
1294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :20;
1296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed result structure
1307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  typedef struct XMC_VADC_DETAILED_RESULT
1309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   :4;   /**< Results reduction counter value*/
1316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_DETAILED_RESULT_t;
1326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
1327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma pop
1331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning restore
1333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  
1563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const uint16_t boundary_value); 
1700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \a event_type.
1812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = event_type;
1824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
1843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = ((uint32_t)(event_type << (uint32_t)16));
1848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
1849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * corresponding \a sr line.
1877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param aref    Analog reference used for conversions. Refer @ref XMC_VADC_GLOBAL_SHS_AREF_t enum
1903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
1908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetAnalogReference(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                             const XMC_VADC_GLOBAL_SHS_AREF_t aref)
1914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  (shs_ptr->SHSCFG & (uint32_t)~SHS_SHSCFG_AREF_Msk) | (uint32_t)aref;  
1919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return None
1927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)((shs_ptr->SHSCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
1966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
1979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
1985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
1986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
1989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
1995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
2001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
2006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
2007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
2012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
2014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
2015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
2021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint8_t sst_value);
2022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
2027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
2028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
2032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
2033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the Sample and hold converter.
2034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
2039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
2041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
2043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
2044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
2046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
2047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_value gain value possible
2052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
2053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
2055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
2059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
2060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t gain_value,
2066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
2067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t ch_num);
2068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
2073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
2074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
2078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
2079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
2080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
2081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
2087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
2089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
2092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
2093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
2103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
2104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
2107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
2110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
2118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
2119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
2125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
2134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
2135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
2136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
2139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            uint8_t ch_num);
2184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes the group specified as part of the \a group_ptr. It initializes group conversion cla
2246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  program.
2249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter must be turned on.
2315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * in these channels.
2373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group waiting for ready signal
2382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_waiting_group  The VADC Group which expects a ready signal to start it's conversion.
2383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_origin_group  The VADC Group from which the eval_waiting_group will expect a ready s
2384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets the ready signal in the eval_waiting_group .<BR>\n
2388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion all the slaves participating need to configure the ready signal.
2389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A slave group will also need to configure the ready signals coming from the other slave groups.
2390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync.slave's EVAL Bits (GxSYNCTR.EVALy).
2391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
2396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_waiting_group,
2397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_origin_group);
2398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *         uint32_t EVAL bits for the group
2404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Get the Eval bits of the group.<BR>\n
2407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would return the Sync EVAL Bits (GxSYNCTR.EVALy) which can be used to set in 
2409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr)
2414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return( group_ptr->SYNCTR & eval_mask);
2424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_mask  mask to configure the eval bits
2429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Use XMC_VADC_SYNCTR_EVAL_t to create the mask.
2430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the Eval bits of the group.<BR>\n
2434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync EVAL Bits (GxSYNCTR.EVALy).
2436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_SetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr, uint32_t 
2441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR &= ~(eval_mask);
2451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR |= mask;
2452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the slaves.
2467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sampling + converting.
2497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
2531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value Select the boundary value.
2532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundary with \a boundary_value for result comparison.\n\n This defines a range aga
2537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
2538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
2539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
2544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
2545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint16_t boundary_value); 
2546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t   emux_config;
2585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
2589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
2590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
2592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
2593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
2594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
2595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
2598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
2600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param node    Service Request node Id
2609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t The complete GxALIAS register
2630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the ALIAS values.\n The ALIAS value that is configured for Channel-0 and channel-1 are r
2633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetAlias(XMC_VADC_GROUP_t *const group_ptr)
2638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetAliasWrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return (group_ptr->ALIAS);
2641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_class  conversion property to be extracted
2646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_CLASS_t The complete GxICLASSy register
2648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the input class configuration values.\n
2651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This returns the sampling time configuration and resolution configured in the appropriate group 
2652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b conv_class. A call to this API would return the register GxICLASSy.
2653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_GROUP_CLASS_t XMC_VADC_GROUP_GetInputClass(XMC_VADC_GROUP_t *const group_p
2658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const XMC_VADC_CHANNEL_CONV_t c
2659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t input_value;
2661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
2662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong conv_class selected", 
2663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              (XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLA
2664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   input_value.g_iclass0 = (uint32_t) 0xFFFFFFFF;
2666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   if ((XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLASS1 == 
2667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   {
2668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     input_value.g_iclass0 = group_ptr->ICLASS[(uint32_t)conv_class];
2669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   }
2670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return (input_value);
2672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
2715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
2736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
2742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the scan request source.<BR>\n
2745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. A call to this API would return the status of the arbitration slot of scan.
2748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
2749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR
2752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr)
2754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GROU
2756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN1_Msk) >> VADC_G_ARBPR_ASEN1_Pos);
2758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
2839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
2967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
2969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
2971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
2972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
2977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
2980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
2983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
2984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
2986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
2987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
2990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
2992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
2993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
2996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
2997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
2998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
2999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
3002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return  <BR>
3003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
3005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
3008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
3012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
3015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
3017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
3026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
3036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
3045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
3050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
3055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
3066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
3067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
3072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
3074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
3075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr    Service Request Id
3080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
3085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
3086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
3087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
3088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
3093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
3101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
3102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
3103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
3104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
3107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
3111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
3113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
3122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
3123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
3124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
3125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
3126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
3129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
3135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param channel_num   channel number to be removed from the scan sequence.
3140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel from the scan sequence.<BR>
3145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the it is possible to remove a single channel from the conversion sequence.
3146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The remaining channels will continue however they are.
3147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxASSEL.
3148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
3153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the scan request source event .<BR>
3161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the scan request source.
3162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableEvent(XMC_VADC_GROUP_t *const group_ptr)
3169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
3171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= ((uint32_t)VADC_G_ASMR_ENSI_Msk);
3173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the scan request source event .<BR>
3182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the scan request source.
3183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableEvent(XMC_VADC_GROUP_t *const group_ptr)
3190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
3192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENSI_Msk);
3194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
3199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
3203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
3204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
3205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
3206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
3207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
3210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
3211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
3213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
3217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  conversion request from background request source
3218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
3224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
3227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
3228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
3231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
3233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
3235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
3236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
3240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     from background request source
3241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
3246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
3249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
3250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
3253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
3255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
3257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
3258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
3265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
3270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
3275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
3280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
3285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
3290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
3292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
3294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
3299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
3303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
3304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
3309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
3311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
3312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
3313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
3316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
3318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
3322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
3327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
3331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
3334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
3336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
3337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
3339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
3340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
3343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure the new gating mode*/
3344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
3345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
3355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
3357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
3358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
3359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
3360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
3361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
3364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * current scan sequence.
3426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel to the background scan sequence.<BR>\n
3502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundRemoveChannelFromSequence(XMC_VADC_GLOBAL_t *const g
3510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t grp_num,
3511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t ch_num)
3512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~((uint32_t)1 << ch_num);
3519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes multiple channels to the scan sequence.<BR>\n
3534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndRemoveMultipleChannels(XMC_VADC_GLOBAL_t *const global_
3542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t grp_num,
3543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t ch_mask)
3544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~ch_mask;
3548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return  <BR>
3583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Module Pointer", (global_ptr ==
3675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Module Pointer", (global_ptr =
3697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the background scan request source event .<BR>
3708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the background scan request sou
3709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptN
3714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableEvent:Wrong Module Pointer", (global_ptr == VADC))
3718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= ((uint32_t)VADC_BRSMR_ENSI_Msk);
3720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr     Pointer to the VADC module
3724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the background scan request source event .<BR>
3729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the background scan request s
3730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNo
3735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableEvent:Wrong Module Pointer", (global_ptr == VADC))
3739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENSI_Msk);
3741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * source.
3759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
3785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
3806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
3813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the queue request source.<BR>\n
3816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the queue request source must have its conversion request considered by the arbiter, it must 
3817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. A call to this API would return the status of the arbitration slot of queue.
3819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
3820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<
3823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr
3825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GRO
3827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN0_Msk) >> VADC_G_ARBPR_ASEN0_Pos);
3829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
3912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <ul>
3932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The H/W generates a trigger needed for the queue request source.
3933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The Conversion is triggered manually by calling this API.
3934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * </ul>
3935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
3944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to determine the queue length.
3958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
3971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
3972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
3974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue sequence.
3975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
3978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
3980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
3981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
3988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
3989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
3991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * all the entries are removed from the queue.
3992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
3995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
3997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
3998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
3999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
4000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
4002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   {
4003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
4004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   }
4005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Clears the next valid channel in the queue buffer.<BR>\n
4015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue entry lined up for conversion can be removed and replaced by its successor. The call to 
4016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * first check if a valid queue entry is present in the queue backup register if present would clea
4017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If no valid queue entries are present in the backup then the first channel
4018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * present in the queue buffer would be cleared.
4019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to clear a
4020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * channel from the queue.
4021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
4024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr);
4026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param entry      Details of the node being added
4031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Inserts a queue entry to the tail of the queue buffer.<BR>\n
4036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will insert a new channel into the queue buffer. The Queue will start conversion of
4037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the channels from the head of the buffer. This Insert will place the entry after the last valid 
4038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If no valid entries are present then this API will place the Queue entry at the head of the buff
4039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Then the successive call to the insert will place the new entry after the last entry.
4040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxQINR0 for a single queue entry.
4041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR>
4044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueInsertChannel(XMC_VADC_GROUP_t *const group_ptr,
4046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        const XMC_VADC_QUEUE_ENTRY_t entry)
4047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInsertChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
4049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Insert the channel physically and get the length of the queue*/
4050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QINR0 = entry.qinr0;
4051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     int32_t Returns -1 if there are no channels for conversion
4057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *             Else would return the next valid channel for conversion.
4058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
4059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the next entry in the queue request source for conversion.<BR>\n
4062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Identifies the channel in the queue lined up for conversion next.
4063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * API will return a valid queue entry from the queue buffer. First checks for the valid channel en
4064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * in the backup register and returns if present. If the valid entry has not been found in the back
4065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * then the queue buffer is searched for a valid entry. A call to this API would access the registe
4066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * GxQBUR0 to determine the next channel.
4067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueInsertChannel()<BR>
4070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr);
4072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *     int32_t Returns -1 if there is no channel that have been interrupted.
4077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *             Else would return the channel that is interrupted.
4078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
4079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Identifies the channel whose conversion was suspended.<BR>\n
4082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When using cancel inject repeat mode the canceled conversion will be placed in the backup regist
4083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will return the valid queue channel number from the backup register. This happens when 
4084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * there is a high priority conversion interrupts the conversion of queue request source. This forc
4085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to goto the backup register. A call to this API would access the register GxQBUR0 to determine t
4086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * interrupted channel.
4087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
4090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr);
4092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
4100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for queue. This will trigger a interrupt if the
4101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
4102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV0.
4103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueClearReqSrcEvent()<BR>
4106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
4108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
4110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG |= 1U;
4111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the conversion complete request source event.<BR>\n
4120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
4121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFCLR.SEV0.
4122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueTriggerReqSrcEvent()<BR>
4125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
4127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
4129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR = (uint32_t)VADC_G_SEFCLR_SEV0_Msk;
4130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
4136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
4137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
4140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the queue request source event. Will return a true
4141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for queue. A call to this API would acces the register bit field  GxSE
4142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
4145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
4147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetReqSrcEventStatus:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
4150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV0_Msk);
4151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
4155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr     The service request line (Common SR lines, Group specific SR lines)
4156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the event to the SR line of VADC.<BR>\n
4161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a queue request source event. Hence to get a
4162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node. A call to this API would configur
4163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GxSEVNP.SEVNP0.
4164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
4167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
4169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for queue request source.<BR>\n
4177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the queue request source. The trigger signal
4178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the QCTRL register. The Selection of a input will be done by
4179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectTrigger(). A call to this API would configure the register bit field G
4180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueDisableExternalTrigger()<BR>
4183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
4185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
4187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_ENTR_Msk;
4189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for queue request source.<BR>
4198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the queue request source.
4199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the queue request source. If any configuration was
4200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxQCTRL0 will be not be effected.  A call to this API would confi
4201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * register bit field GxQMR0.ENTR
4202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
4205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
4207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
4209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= ~((uint32_t)VADC_G_QMR0_ENTR_Msk);
4211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
4213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
4215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
4217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  The channel being initialized
4218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to initialization data
4220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the ADC channel for conversion.<BR>\n
4225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will do the channel related initializations. This includes configuration of the CHCTR s
4226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * and boundary flag settings. This must be called in the application in order to enable the conver
4227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * a channel. After a request source has been initialized this API has to be called for each channe
4228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * has to be converted.  A call to this API would configure the registers GxCHCTR GxBFL GxALIAS GxC
4229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * GxBFLC(depending on device) in order to configure the channel.
4230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
4233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
4235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config);
4236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
4239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param src_ch_num   Channel which will be converted by \b alias_ch_num, when called by the reque
4240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range:[0x0 to 0x7]
4241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param alias_ch_num This is the alias channel (Ch-0 or Ch-1)
4242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range:[0x0, 0x1]
4243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets the Alias channel(\b alias_ch_num) to convert from the source channel(\b src_ch_num).<BR>\n
4248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a alias configuration takes place the request source(queue/scan/background) will not call c
4249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Request sources will call the channel \b alias_ch_num , this would invoke the conversion of
4250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the pin associated with \b src_ch_num. The configuration of the alias channel (\b alias_ch_num) 
4251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * for the conversion.\n
4252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When an alias channel (Ch-0 or Ch-1) receives a trigger, it converts the aliased channel (\b src
4253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The properties of Ch-0 or Ch-1 (as indicated in \b alias_ch_num ) apply when \b src_ch_num is co
4254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  A call to this API would configure the register GxALIAS.
4255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
4257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Alias Channel (\b alias_ch_num) and the source channel (\b src_ch_num) cannot be the same.
4258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * If they are, that alias feature is not used for the conversion. In order to Reset the alias
4259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * feature that was previously selected this method can be used.
4260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
4263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetChannelAlias(XMC_VADC_GROUP_t *const group_ptr,
4265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                     const uint32_t src_ch_num,
4266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                     const uint32_t alias_ch_num);
4267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
4270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose input was converted
4271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool  Returns true if there was violation w.r.t the specified boundaries.
4274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the result of the channel confines with the specified boundaries.<BR>\n
4277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * An application may not necessarily always need to know the exact value of the converted result, 
4278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * an indication if the generated result is within stipulated boundaries. Generation of Channel eve
4279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * to channel event generation criteria (Generate always, Never generate, Generate if result is out
4280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generate if result is within bounds). When interrupts are not enabled, this API can be used to d
4281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * nature of the result.  A call to this API would access the registers GxCHCTR and GxCEFLAG in ord
4282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if a violation has occured.
4283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
4286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
4288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
4291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose input is to be converted
4292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ref     Reference voltage
4294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the reference voltage for conversion.<BR>\n
4299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * An internal voltage reference (VARef) or an external voltage reference fed to Ch-0 can serve as 
4300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * for conversions.  A call to this API would configure the register bit field GxCHCTR.REFSEL.
4301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
4306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_REF_t ref);
4307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose i/p is to be converted
4311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param result_reg_num  Result Register associated with this channel
4313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the target result register.<BR>\n
4318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * There are upto 16 result registers which a channel can choose from to store the results of conve
4319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This selects only the group related result registers. A call to this API would configure the reg
4320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GxCHCTR.RESREG.
4321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
4326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                              const uint32_t ch_num,
4327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                              const uint32_t result_reg_num);
4328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose conversion class is to be configured
4332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conversion_class  conversion property to be associated with this channel
4334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the conversion class registers.<BR>\n
4339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * It configures the channel to have a particular conversion class properties like sampling
4340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * time and resolution.  A call to this API would configure the register
4341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GxCHCTR.ICLSEL.
4342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelGetInputClass().
4345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetIclass(XMC_VADC_GROUP_t *const group_ptr,
4347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                      const uint32_t ch_num,
4348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                      const XMC_VADC_CHANNEL_CONV_t conversion_class); 
4349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose result alignment is to be returned
4353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_RESULT_ALIGN_LEFT if the result are aligned to the left
4356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_RESULT_ALIGN_RIGHT if the result are aligned to the right
4357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the channel result alignment.<BR>\n
4360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The results are aligned either to the left or to the right. A left aligned 10bit resolution has 
4361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * at bit2 where as a left aligned 8bit resolution starts at bit4. A call to this API would return 
4362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * configured alignment value.
4363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxCHCTR.RESPOS.
4364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_ALIGN_t XMC_VADC_GROUP_ChannelGetResultAlignment(XMC_VADC_GROUP_t *
4369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                      const uint32_t ch_num) 
4370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultAlignment:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
4372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultAlignment:Wrong Channel Number",
4373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
4374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_ALIGN_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESPOS_Msk) 
4376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 		  (uint32_t)VADC_G_CHCTR_RESPOS_Pos) );
4377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose result alignment is to be returned
4383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_CHANNEL_CONV_t Returns the configured input class for the \b ch_num
4386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the channel's input class for conversion for the required channel.<BR>\n
4389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The sampling time and resolution can be taken from any of the 4 possible Input class registers.
4390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would return the input class register that is taken up by \b ch_num for conversion.
4391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxCHCTR.RESPOS.
4392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelSetIclass().
4395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_CHANNEL_CONV_t XMC_VADC_GROUP_ChannelGetInputClass(XMC_VADC_GROUP_t *const
4397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                      const uint32_t ch_num) 
4398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
4400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetInputClass:Wrong Channel Number",
4401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
4402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_CHANNEL_CONV_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_ICLSEL_Msk) 
4404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 		  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos) );
4405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose associated result register is to be found
4411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  uint8_t  returns the Group result register to which it is linked to.
4414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *           <BR>Range: [0x0 to 0xF]
4415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Returns the result register associated with this channel.<br>\n
4418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  There are upto 16 result registers which a channel can choose from to store the results of conv
4419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  This returns only the group related result registers.  A call to this API would access the regi
4420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GxCHCTR.RESREG.
4421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
4426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is to be asserted
4430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts a Channel event.<BR>\n
4436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * It is merely the channel event which is asserted. For this asserted event to lead to an interrup
4437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * have been bound to an SR and that SR must have been enabled. It can potentially lead to an inter
4438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * SR line is connected to an NVIC node.  A call to this API would configure the register bit field
4439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelClearEvent().
4442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num);
4444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *      uint32_t returns the asserted channel events
4449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the Channel event flag register.<BR>\n
4452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The return is merely the channel events which are asserted.
4453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit fields of GxCEFLAG.
4454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelClearEvent().
4457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_ChannelGetAssertedEvents(XMC_VADC_GROUP_t *const group_ptr)
4459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetAssertedEvents:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
4461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return(group_ptr->CEFLAG);
4462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is to be acknowledged
4467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges a Channel event.<BR>\n
4473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a channel event is raised after the conversion of that channel, it has to be cleared. This 
4474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the Channel event of a particular channel if it has occurred.  A call to this API would configur
4475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit fields of GxCEFCLR.
4476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelTriggerEvent().
4479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ChannelClearEvent(XMC_VADC_GROUP_t *const group_ptr, const uint
4481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelClearEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
4484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelClearEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHAN
4485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->CEFCLR = (uint32_t)((uint32_t)1 << ch_num);
4486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is to be connected to a service request line
4491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr       The service request line to which the channel event is to be connected
4493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a channel event to a requested Service Request line.<BR>\n
4498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The channel event is connected to a service request line. For an event to result in an interrupt
4499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * request line must be enabled in VADC and the NVIC node which this service request line is connec
4500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * interrupt generation enabled.  A call to this API would configure the register bit fields of GxC
4501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelTriggerEvent()<BR> XMC_VADC_GROUP_ChannelClearEvent()
4504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
4506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  const uint32_t ch_num,
4507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  const XMC_VADC_SR_t sr);
4508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is being configured
4512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param criteria The condition under which the channel may assert its channel event
4514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conditions under which a channel may assert its channel event.<BR>\n
4519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The channel event can be generated under the following conditions - Always, Never, Result Out of
4520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * inside the boundaries.  A call to this API would configure the register bit field GxCHCTR.CHEVMO
4521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelTriggerEvent()<BR> XMC_VADC_GROUP_ChannelClearEvent()<BR>
4524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelSetEventInterruptNode()<BR>
4525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria(XMC_VADC_GROUP_t *const group_ptr,
4527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    const uint32_t ch_num,
4528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    const XMC_VADC_CHANNEL_EVGEN_t criteria);
4529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is being configured
4534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
4535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_sel Select the upper/lower boundary configuration .
4536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_sel.
4537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the boundary selection for the given channel<BR>\n
4542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The channel event can be generated under the following conditions - Always, Never, Result Out of
4543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * inside the boundaries. The boundary values to which results are compared can be selected from se
4544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxCHCTR.BNDSELL or GxCHCTR.BNDSELU  .
4545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
4550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  const uint32_t ch_num,
4551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
4552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  XMC_VADC_CHANNEL_BOUNDARY_t selection);
4553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group
4556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg_num  Result register which is intended to be initialized
4557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0xF]
4558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config       Pointer to initialization data
4559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes a Group Result Register.<BR>
4564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Various options needed for the working of the result result will be configured with this API.
4565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This would determine the result handling of the group registers. This API must be called after
4566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the channel Init (XMC_VADC_GROUP_ChannelInit())to initialize the result register that is selecte
4567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would also determine if the result register that is being configured has to a part of a
4568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * In this API one can also configure the various result handling options line FIR/IIR filters and 
4569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Also configures the Data reduction to accumulate 2/3/4 results need to be done. This API will al
4570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result event generation.  A call to this API would configure the register GxRCR with the \b 
4571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_AddResultToFifo()<BR> XMC_VADC_GROUP_EnableResultEvent()<br> XMC_VADC_GROUP_Disab
4574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ResultInit(XMC_VADC_GROUP_t *const group_ptr,
4576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                const uint32_t res_reg_num,
4577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                const XMC_VADC_RESULT_CONFIG_t *config)
4578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ResultInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
4580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->RCR[res_reg_num] = config->g_rcr;
4581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg  Register which is required to be a part of results FIFO
4588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                 <BR>Range: [0x0 to 0xF]
4589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Adds result register to Result FIFO.<BR>\n
4594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sometimes, the rate of consumption of results by application software may not match the rate at 
4595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * results are produced. A Result FIFO thus helps a slow consumer to read out results without loss 
4596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a result register is added to fifo, it is in fact chained to its higher numbered neighbor. 
4597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Result Register-5 is to be added to FIFO, it gets chained to Result Register-6. Results are writ
4598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * while the same can be read out of Register-5 leisurely by software.
4599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxRCR.FEN.
4600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
4602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The FIFO is always read by the software with the lowest numbered result register.
4603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The hardware will write the results from the highest numbered result register.
4604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
4607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg);
4609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg  Result Register for which event generation is to be enabled
4613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                 <BR>Range: [0x0 to 0xF]
4614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables result event generation.<BR>\n
4619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Once the results of conversion are available, the result event (which is being enabled in this f
4620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if connected to a service request line(Group or Shared service request) can lead to an interrupt
4621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * not only necessary to enable the event, but also to connect it to a service request line. The
4622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * service request generation capability must also be enabled and so should the corresponding NVIC 
4623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxRCR.SRGEN.
4624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetResultInterruptNode().
4627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_EnableResultEvent(XMC_VADC_GROUP_t *const group_ptr, const uint
4629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_EnableResultEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
4632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_EnableResultEvent:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
4633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->RCR[res_reg] |= (uint32_t)VADC_G_RCR_SRGEN_Msk;
4634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg  Result Register for which event generation is to be disabled
4639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                 <BR>Range: [0x0 to 0xF]
4640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable result event generation.<BR>\n
4645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This would just disable the event. It would not alter anything w.r.t the SR line if it was confi
4646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxRCR.SRGEN.
4647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableResultEvent().
4650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_DisableResultEvent(XMC_VADC_GROUP_t *const group_ptr, const uin
4652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_DisableResultEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
4654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_DisableResultEvent:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_R
4655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->RCR[res_reg] &= ~((uint32_t)VADC_G_RCR_SRGEN_Msk);
4656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg  Result Register from which the result of conversion is to be read out
4661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                 <BR>Range: [0x0 to 0xF]
4662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t  returns the complete result register GxRESy.
4664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the result register completely (result of conversion as well as other info).<BR>\n
4667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Result register will have information regarding the channel that is requesting the conversio
4668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the result is valid, if the fast compare bit, Data Reduction Counter, and the request source 
4669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * All these information will be returned back. And if the user is polling for the result he can us
4670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * result if the valid bit is set. A call to this API would return the complete register GxRES.
4671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_GetResult().
4674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetDetailedResult(XMC_VADC_GROUP_t *const group_ptr, const 
4676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
4677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetDetailedResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
4678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetDetailedResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
4679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return(group_ptr->RES[res_reg]);
4680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
4681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param res_reg  Result Register from which the result of conversion is to be read out
4685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                 <BR>Range: [0x0 to 0xF]
4686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_RESULT_SIZE_t Result register values.
4688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *                <BR>Range:[ 0x0 to 0xFFF] (Result of single conversion. Accumulated results not c
4689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the result of the conversion.<BR>\n
4692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will only return the result of the conversion and will strip out the other information 
4693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * in the result register. A call to this API would access the register bit field GxRES.RESULT.
4694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_GetDetailedResult().
4697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GROUP_GetResult(XMC_VADC_GROUP_t *const group_ptr, 
4699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t res_reg)
4700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** {
 533              	 .loc 6 4700 0
 534              	 .cfi_startproc
 535              	 
 536              	 
 537              	 
 538 0000 80B4     	 push {r7}
 539              	.LCFI60:
 540              	 .cfi_def_cfa_offset 4
 541              	 .cfi_offset 7,-4
 542 0002 83B0     	 sub sp,sp,#12
 543              	.LCFI61:
 544              	 .cfi_def_cfa_offset 16
 545 0004 00AF     	 add r7,sp,#0
 546              	.LCFI62:
 547              	 .cfi_def_cfa_register 7
 548 0006 7860     	 str r0,[r7,#4]
 549 0008 3960     	 str r1,[r7]
4701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
4702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESULT_REG
4703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** 
4704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)group_ptr->RES[res_reg]);
 550              	 .loc 6 4704 0
 551 000a 7B68     	 ldr r3,[r7,#4]
 552 000c 3A68     	 ldr r2,[r7]
 553 000e C032     	 adds r2,r2,#192
 554 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 555 0014 9BB2     	 uxth r3,r3
4705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_vadc.h **** }
 556              	 .loc 6 4705 0
 557 0016 1846     	 mov r0,r3
 558 0018 0C37     	 adds r7,r7,#12
 559              	.LCFI63:
 560              	 .cfi_def_cfa_offset 4
 561 001a BD46     	 mov sp,r7
 562              	.LCFI64:
 563              	 .cfi_def_cfa_register 13
 564              	 
 565 001c 5DF8047B 	 ldr r7,[sp],#4
 566              	.LCFI65:
 567              	 .cfi_restore 7
 568              	 .cfi_def_cfa_offset 0
 569 0020 7047     	 bx lr
 570              	 .cfi_endproc
 571              	.LFE415:
 573 0022 00BF     	 .section .text.ADC_MEASUREMENT_ADV_GetResult,"ax",%progbits
 574              	 .align 2
 575              	 .thumb
 576              	 .thumb_func
 578              	ADC_MEASUREMENT_ADV_GetResult:
 579              	.LFB422:
 580              	 .file 7 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @file adc_measure_adv.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @date 2016-08-18
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * NOTE:
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @cond
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * ADC_MEASUREMENT_ADV v4.0.14 - Incorporates advanced features of the Versatile Analog to Digital 
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *                               to measure analog inputs.
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * All rights reserved.
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * following conditions are met:
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   disclaimer.
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Change History
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * --------------
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2015-10-09:
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Initial version for DAVEv4.<BR>
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2015-10-20:
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Documentation updated.<BR>
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2015-12-15:
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Added support for XMC4300 devices.<BR>
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-01-18:
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - 1.Internal consumption of request source.<BR>
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - 2.Support for synchronized conversion reduced from 8 master channels to 4 .<BR>
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - 3.Converted the SetBoundary() API from public API to private API .<BR>
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - 4.Updated all APIs for the Internal consumption of request source.<BR>
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-02-05:
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Documentation updated.<BR>
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-03-18:
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Added consumption of the GLOBAL ICLASS -1 for Sync. Conversions.<BR>
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Added consumption of the result register-0 for subtraction mode.<BR>
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Removed ADC_MEASUREMENT_ADV_SetUniformConversion().<BR>
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - New API ADC_MEASUREMENT_ADV_SetIclass() added to configure the GLOBAL ICLASS for Slaves. <
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-04-26:
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - The synchronized conversion in a master slave configuration is currently not supported.<BR
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-06-17:
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - The synchronized conversion is supported.<BR>
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Modified the Sync initialization sequence to configure the EVAL bits in the slave groups.<
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * 2016-08-18:
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     - Minimum sample time at low frequencies changed to incorporate Errata ADC_AI.H006 and ADC_A
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcond
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /*CODE_BLOCK_BEGIN*/
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifndef ADC_MEASUREMENT_ADV_H
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #define ADC_MEASUREMENT_ADV_H
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**************************************************************************************************
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * HEADER FILES
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #include "GLOBAL_ADC/global_adc.h"
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #include "adc_measurement_adv_conf.h"
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  /*************************************************************************************************
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * MACROS
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****        (XMC_LIB_MINOR_VERSION >= 1U) && \
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****        (XMC_LIB_PATCH_VERSION >= 8U)))
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #error "ADC_MEASUREMENT_ADV requires XMC Peripheral Library v2.1.8 or higher"
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  /*************************************************************************************************
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * ENUMS
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @ingroup ADC_MEASUREMENT_ADV_enumerations
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @{
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**@brief Return value of an API  */
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_STATUS
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_STATUS_SUCCESS = 0,  /**< The API call is successful*/
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_STATUS_FAILURE,      /**< The API call is failed*/
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_STATUS_UNINITIALIZED /**< APP has not been Initialized */
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_STATUS_t;
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief The selected Request source.
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_REQUEST_SOURCE
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_REQUEST_SOURCE_SCAN = 0, /**< Uses the ADC_SCAN APP's, scan request source.*/
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_REQUEST_SOURCE_LOCAL_SCAN, /**< Uses the internally consumed Scan request sou
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_REQUEST_SOURCE_QUEUE,    /**< Uses the ADC_QUEUE APP's, queue request source.
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_REQUEST_SOURCE_LOCAL_QUEUE,    /**< Uses the internally consumed Queue reques
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_REQUEST_SOURCE_t;
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief The gain applied on the input signal.
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_GAIN
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_GAIN_1 = 0U,   /**< The gain value of 1:1 is selected*/
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_GAIN_3 = 1U,   /**< The gain value of 1:3 is selected*/
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_GAIN_6 = 2U,   /**< The gain value of 1:6 is selected*/
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_GAIN_12 = 3U   /**< The gain value of 1:12 is selected*/
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_GAIN_t;
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Alignment options for the subtraction value
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_SUBTRATION
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,     /**< Always align result to left */
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,     /**< Always align result to right */
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,     /**< Always align result to left */
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,     /**< Always align result to right */
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,     /**< Always align result to left */
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U      /**< Always align result to right */
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_SUBTRATION_t;
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief The result of the fast compare operation.
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_FAST_COMPARE
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_FAST_COMPARE_LOW     = 0U, /**< The result of fast conversion is low.*/
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_FAST_COMPARE_HIGH    = 1U, /**< The result of fast conversion is high.*/
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_FAST_COMPARE_INVALID = 2U  /**< The result is invalid since no new results ar
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_FAST_COMPARE_t;
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief The result of the fast compare operation.
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef enum ADC_MEASUREMENT_ADV_SYNC_SEQ
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SYNC_SEQ_POWER_DOWN = 0U, /**< The result of fast conversion is low.*/
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SYNC_SEQ_STSEL_CONFIG, /**< The result of fast conversion is low.*/
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SYNC_SEQ_EVAL_CONFIG, /**< The result of fast conversion is low.*/
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_SYNC_SEQ_t;
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @}
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**************************************************************************************************
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** * DATA STRUCTURES
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** ***************************************************************************************************
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @ingroup ADC_MEASUREMENT_ADV_datastructures
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @{
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /*Anonymous structure/union guard start*/
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if defined(__CC_ARM)
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   #pragma push
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   #pragma anon_unions
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #elif defined(__TASKING__)
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   #pragma warning 586
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef void (*ADC_MEASUREMENT_ADV_EVENT_CONFIG_t)(void); /**< Function pointer to the mux configur
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief NVIC Configuration structure for request source interrupt.
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef struct ADC_MEASUREMENT_ADV_NVIC_CONFIG
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint32_t node_id;    /**< This indicates the NVIC Node number.*/
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint32_t priority;   /**< This indicates the NVIC priority.*/
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if(UC_FAMILY == XMC4)
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint32_t sub_priority; /**< This indicates the NVIC sub priority in XMC4x Devices.*/
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   bool interrupt_enable; /**< This flag indicates if a Interrupt has been requested.*/
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_NON_DEFAULT_IRQ_SOURCE_SELECTED
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint8_t irqctrl;       /**< This indicates the service request source selected for the consumed N
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_NVIC_CONFIG_t;
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_LOCAL_SCAN_USED
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Configuration Data structure of scan request source.
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef struct ADC_MEASUREMENT_ADV_SCAN
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const ADC_MEASUREMENT_ADV_NVIC_CONFIG_t rs_intr_handle;    /**< Holds the ISR Handle*/
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_GROUP_CLASS_t iclass_config_handle;         /**< Holds the ICLASS Configurations*/
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_SCAN_CONFIG_t *const scan_config_handle;    /**< Holds the LLD SCAN Structure*/
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_GATEMODE_t gating_mode;         /**< Gating mode configuration needed for Scan req
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_SR_t srv_req_node;              /**< Source event interrupt node pointer*/
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint32_t  insert_mask;                  /**< Insert Mask for the scan request source*/
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint8_t iclass_num;                      /**< Holds the ICLASS ID either ICLASS-0 or ICLASS
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_SCAN_t;
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_LOCAL_QUEUE_USED
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Configuration Data structure of queue request source.
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef struct ADC_MEASUREMENT_ADV_QUEUE
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const ADC_MEASUREMENT_ADV_NVIC_CONFIG_t rs_intr_handle;    /**< Holds the ISR Handle*/
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_GROUP_CLASS_t iclass_config_handle;         /**< Holds the ICLASS Configurations*/
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_QUEUE_CONFIG_t *const queue_config_handle;    /**< Holds the LLD QUEUE Structure*/
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_GATEMODE_t gating_mode;         /**< Gating mode configuration needed for Scan req
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_SR_t srv_req_node;              /**< Source event interrupt node pointer*/
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint8_t iclass_num;                      /**< Holds the ICLASS ID either ICLASS-0 or ICLASS
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_QUEUE_t;
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Structure to configure the channels in the ADC_MEASUREMENT_ADV APP.
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef struct ADC_MEASUREMENT_ADV_CHANNEL
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   XMC_VADC_CHANNEL_CONFIG_t *ch_handle; /**< This holds the VADC Channel LLD structures*/
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   XMC_VADC_RESULT_CONFIG_t *res_handle[ADC_MEASUREMENT_ADV_RESULT_REG]; /**< This hold the VADC LLD
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                                               configuration structu
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_ANALOG_IO_USED
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ANALOG_IO_t   *analog_io_config;    /**< This hold the address of the ANALOG_IO configuration str
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_FIFO_USED
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint8_t max_fifo_required;             /**< The required number of FIFO elements*/
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint8_t result_fifo_tail_number;      /**< The tail result register number if FIFO is selected. *
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint8_t group_index;          /**< This holds the group index*/
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint8_t ch_num;             /**< This Holds the Channel Number*/
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if(UC_FAMILY == XMC1)
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_GAIN_t shs_gain_factor; /**< The required gain factor for the channel.*/
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_CHANNEL_t;
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Structure to configure ADC_MEASUREMENT_ADV APP.
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** typedef struct ADC_MEASUREMENT_ADV
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const ADC_MEASUREMENT_ADV_CHANNEL_t **const channel_array;      /**< This holds an array of chann
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                               by the current instance of the ADC_ME
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if defined(ADC_MEASUREMENT_ADV_ADC_SCAN_USED) || defined(ADC_MEASUREMENT_ADV_ADC_QUEUE_USED) || \
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     defined(ADC_MEASUREMENT_ADV_LOCAL_QUEUE_USED)
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   union
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_ADC_SCAN_USED
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const ADC_SCAN_ENTRY_t **const scan_entries;   /**< Holds the pointer to the scan entries. */
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_ADC_QUEUE_USED
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const ADC_QUEUE_ENTRY_t **const queue_entries;  /**< Holds the pointer to the queue entries.*/
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_LOCAL_QUEUE_USED
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const XMC_VADC_QUEUE_ENTRY_t **const local_queue_entries;  /**< Holds the pointer to the queue en
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   };
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_EVENT_CONFIG_t event_config; /**< This hold the pointer to the function
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                       that does mux configuration. Which entails ch
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                       result node configuration*/
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   union
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_ADC_SCAN_USED
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_SCAN_t *const scan_handle;     /**< Pointer to the ADC_SCAN APP handle*/
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_ADC_QUEUE_USED
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_QUEUE_t *const queue_handle;   /**< Pointer to the ADC_QUEUE APP handle*/
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_LOCAL_SCAN_USED
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_MEASUREMENT_ADV_SCAN_t *const local_scan_handle;   /**< Pointer to the scan handle*/
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_LOCAL_QUEUE_USED
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_MEASUREMENT_ADV_QUEUE_t *const local_queue_handle;   /**< Pointer to the queue handle*/
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   };
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_STATUS_t *init_state;   /**< This enumeration gives information about the sta
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_REQUEST_SOURCE_t req_src; /**< The request source used by this instance of
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                       the ADC_MEASUREMENT_ADV APP */
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_SYNC_USED
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   union
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     struct
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     {
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****       uint8_t sync_slave_g0 :1; /**< If set the group-0 will be configured as the slave group.*/
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****       uint8_t sync_slave_g1 :1; /**< If set the group-1 will be configured as the slave group*/
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****       uint8_t sync_slave_g2 :1; /**< If set the group-2 will be configured as the slave group*/
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****       uint8_t sync_slave_g3 :1; /**< If set the group-3 will be configured as the slave group*/
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****       uint8_t               :4;
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     };
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     uint8_t sync_slaves;
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   };
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint8_t group_index; /**< The group index number for the APP*/
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint8_t total_number_of_entries; /**< Indicates the total number of entries configured in
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                               the current APP instance*/
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const uint8_t total_number_of_channels; /**< Indicates the total number of channels configured in
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                                the current APP instance*/
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const bool start_at_initialization; /**< This determines if the insertion of the queue or
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                             scan entries should happen after initialization of the 
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef ADC_MEASUREMENT_ADV_SYNC_USED
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   const bool configure_globiclass1;  /**< Copy the master channels conversion parameters to the glo
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                           Hence the slave channels are using the same features as t
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** } ADC_MEASUREMENT_ADV_t;
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @}
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /*Anonymous structure/union guard end*/
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #if defined(__CC_ARM)
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   #pragma pop
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #elif defined(__TASKING__)
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   #pragma warning restore
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #ifdef __cplusplus
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** extern "C" {
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #endif
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**************************************************************************************************
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * API Prototypes
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  **************************************************************************************************
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @ingroup ADC_MEASUREMENT_ADV_apidoc
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @{
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Get ADC_MEASUREMENT_ADV APP version
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Description: </b><br>
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * The function can be used to check application software compatibility with a
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * specific version of the APP.
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Example Usage:
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @code
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * #include <DAVE.h>
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * int main(void) {
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   DAVE_STATUS_t init_status;
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   DAVE_APP_VERSION_t version;
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   // Initialize ADC_MEASUREMENT_ADV APP:
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   // ADC_MEASUREMENT_ADV_Init() is called from within DAVE_Init().
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   init_status = DAVE_Init();
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   version = ADC_MEASUREMENT_ADV_GetAppVersion();
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   if (version.major != 1U) {
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *     // Probably, not the right version.
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   }
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   // More code here
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   while(1) {
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   }
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *   return (0);
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * }
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcode
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** DAVE_APP_VERSION_t ADC_MEASUREMENT_ADV_GetAppVersion(void);
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Starts the VADC request source.
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @param handle_ptr constant pointer to the APP handle structure<BR>
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @return None <BR>
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Description: </b><br>
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * This API would start the request source of the VADC. After this API is invoked the ADC is ready 
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * conversion requests.
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * If scan request source is selected then this API would write to GxARBPR.ASEN1 bit.
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * If queue request source is selected then this API would write to GxARBPR.ASEN0 bit. At the time 
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * for the queue, If there was queue entry waiting in the queue buffer without waiting for a hardwa
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * start the conversion of such a queue.
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Example Usage:
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @code
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Initialize the ADC_MEASUREMENT_ADV APP. Set the number of required channels to 2.
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto interrupts tab enable request source interrupt.
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto the ADC_SCAN/ADC_QUEUE APP and enable the request source interrupt.
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Generate the code and build.
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Replace this in the main.c.
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** uint16_t result[2];
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** void adc_measurement_adv_callback(void)
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[0] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_A);
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[1] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_B);
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** int main(void)
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   DAVE_STATUS_t status;
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   status = DAVE_Init();           // Initialization of DAVE APPs
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   if(status == DAVE_STATUS_FAILURE)
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     // Placeholder for error handler code. The while loop below can be replaced with an user error 
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     while(1U)
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     {
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     }
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   // Start the selected request source
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   while(1U)
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     // Continuously re-trigger the scan conversion sequence
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcode
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** void ADC_MEASUREMENT_ADV_StartADC(const ADC_MEASUREMENT_ADV_t *const handle_ptr);
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Starts the conversion of the required channels
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @param handle_ptr constant pointer to the APP handle structure<BR>
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @return None <BR>
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Description: </b><br>
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Trigger a load event for the required channels thus starting the conversion of the ADC channels.
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * If scan request source is selected then this API would write to GxASMR.LDEV bit, causing the con
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * If queue request source is selected then this API would write to GxQMR0.TREV bit. At the time of
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * for the queue. If there was queue entry waiting in the queue buffer for a hardware trigger, writ
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * triggers the conversion for that entry.
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Example Usage:
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @code
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Initialize the ADC_MEASUREMENT_ADV APP. Set the number of required channels to 2.
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto interrupts tab enable request source interrupt.
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto the ADC_SCAN/ADC_QUEUE APP and enable the request source interrupt.
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Generate the code and build.
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Replace this in the main.c.
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** uint16_t result[2];
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** void adc_measurement_adv_callback(void)
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[0] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_A);
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[1] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_B);
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** int main(void)
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   DAVE_STATUS_t status;
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   status = DAVE_Init();           // Initialization of DAVE APPs
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   if(status == DAVE_STATUS_FAILURE)
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     // Placeholder for error handler code. The while loop below can be replaced with an user error 
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     while(1U)
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     {
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     }
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   // Start the selected request source
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   while(1U)
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     // Continuously re-trigger the scan conversion sequence
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcode
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** void ADC_MEASUREMENT_ADV_SoftwareTrigger(const ADC_MEASUREMENT_ADV_t *const handle_ptr);
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Initializes the ADC_MEASUREMENT_ADV APP Instance
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @param handle_ptr constant pointer to the APP handle structure<BR>
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @return None <BR>
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Description: </b><br>
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Initialize the ADC and all the required configurations. A call to this API would initialize the 
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * or the scan request source depending on the GUI selection. The initialization is taken up by cal
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * or ADC_SCAN_Init(). Following this the synchronous conversion related initializations are taken 
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * initialization the slave groups and the master group are powered down and either GxSYNCTR.STSEL 
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * GxSYNCTR.EVALRy (if master) are configured. After the sync related configurations are completed 
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * alone is powered on. Following this the result event or channel event related service request no
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * are done (if required). Then the GxCHCTR configurations are completed. After the channel initial
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * result handling initializations are done. This entails configuring the GxRCR registers for resul
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * accumulation, subtraction and FIFO. After all these initialization are completed the channels co
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * in the GUI is inserted into the appropriate ADC_QUEUE or ADC_SCAN APP buffer. If the GUI check b
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * "Insert channels at initialization" is enable then these entries is pushed to the Hardware.
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Example Usage:
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @code
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * #include <DAVE.h>
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * int main(void)
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * {
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *    DAVE_Init(); //ADC_MEASUREMENT_ADV_Init is called within DAVE_Init
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *    return 0;
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * }
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcode
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** ADC_MEASUREMENT_ADV_STATUS_t ADC_MEASUREMENT_ADV_Init(const ADC_MEASUREMENT_ADV_t *const handle_ptr
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** /**
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @brief Returns the conversion result
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @param handle_ptr constant pointer to the channel handle structure.
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *                   (Use the channel handle related macros which are defined in adc_measure_adv_co
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @return uint16_t conversion result.<BR>
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *                                Range: [ 0x0 to 0xFFF] without any filters/ accumulation/ subtrac
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Description: </b><br>
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Return the converted result stored in the result register [GxRESy.RESULT].
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * In the APP each channel is configured to a particular group result register (excluding FIFO). Th
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * is defined in the channel handle structure @ref ADC_MEASUREMENT_ADV_CHANNEL_t. Hence this API sh
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * with a pointer to the channel handle of type  @ref ADC_MEASUREMENT_ADV_CHANNEL_t (Directly use t
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * related macros which are defined in adc_measure_adv_conf.h).
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * \par<b>Note: </b><br>
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * This API is not Applicable for reading the result from the result FIFO registers
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Use @ref ADC_MEASUREMENT_ADV_GetFifoResult in order to read the FIFO result.
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * Example Usage:
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  *
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @code
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Initialize the ADC_MEASUREMENT_ADV APP. Set the number of required channels to 2.
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Select the request source APP from ADC_SCAN to ADC_QUEUE.
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto the sequence plan and select Channel_A at position-0 and Channel_B at position-1.
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Enable Wait for trigger for the Channel_A.
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto interrupts tab enable request source interrupt.
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Goto the ADC_QUEUE APP and enable the request source interrupt.
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Generate the code and build.
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** // Replace this in the main.c.
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** uint16_t result[2];
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** void adc_measurement_adv_callback(void)
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   // Use the channel handle parameter in this format "<APP Name>_<CHANNEL Name>"
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[0] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_A);
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result[1] = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_Channel_B);
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** int main(void)
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   DAVE_STATUS_t status;
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   status = DAVE_Init();           // Initialization of DAVE APPs
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   if(status == DAVE_STATUS_FAILURE)
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     // Placeholder for error handler code. The while loop below can be replaced with an user error 
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     while(1U)
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     {
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****     }
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   // Start the selected request source
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   // Start the queue conversion sequence
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   while(1U)
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   {
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   }
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  * @endcode
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****  */
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** __STATIC_INLINE uint16_t ADC_MEASUREMENT_ADV_GetResult(const ADC_MEASUREMENT_ADV_CHANNEL_t *const h
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** {
 581              	 .loc 7 642 0
 582              	 .cfi_startproc
 583              	 
 584              	 
 585 0000 80B5     	 push {r7,lr}
 586              	.LCFI66:
 587              	 .cfi_def_cfa_offset 8
 588              	 .cfi_offset 7,-8
 589              	 .cfi_offset 14,-4
 590 0002 84B0     	 sub sp,sp,#16
 591              	.LCFI67:
 592              	 .cfi_def_cfa_offset 24
 593 0004 00AF     	 add r7,sp,#0
 594              	.LCFI68:
 595              	 .cfi_def_cfa_register 7
 596 0006 7860     	 str r0,[r7,#4]
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   uint16_t result;
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   extern XMC_VADC_GROUP_t *const group_ptrs[XMC_VADC_MAXIMUM_NUM_GROUPS];
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   XMC_ASSERT("ADC_MEASUREMENT_ADV_GetResult:Invalid handle_ptr", (handle_ptr != NULL))
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** 
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   result = XMC_VADC_GROUP_GetResult(group_ptrs[handle_ptr->group_index],
 597              	 .loc 7 647 0
 598 0008 7B68     	 ldr r3,[r7,#4]
 599 000a 1B7A     	 ldrb r3,[r3,#8]
 600 000c 1A46     	 mov r2,r3
 601 000e 0A4B     	 ldr r3,.L17
 602 0010 53F82220 	 ldr r2,[r3,r2,lsl#2]
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                     (uint32_t) handle_ptr->ch_handle->result_reg_number);
 603              	 .loc 7 648 0
 604 0014 7B68     	 ldr r3,[r7,#4]
 605 0016 1B68     	 ldr r3,[r3]
 606 0018 9B78     	 ldrb r3,[r3,#2]
 607 001a C3F30303 	 ubfx r3,r3,#0,#4
 608 001e DBB2     	 uxtb r3,r3
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****                                     (uint32_t) handle_ptr->ch_handle->result_reg_number);
 609              	 .loc 7 647 0
 610 0020 1046     	 mov r0,r2
 611 0022 1946     	 mov r1,r3
 612 0024 FFF7FEFF 	 bl XMC_VADC_GROUP_GetResult
 613 0028 0346     	 mov r3,r0
 614 002a FB81     	 strh r3,[r7,#14]
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h ****   return(result);
 615              	 .loc 7 649 0
 616 002c FB89     	 ldrh r3,[r7,#14]
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV\adc_measurement_adv.h **** }
 617              	 .loc 7 650 0
 618 002e 1846     	 mov r0,r3
 619 0030 1037     	 adds r7,r7,#16
 620              	.LCFI69:
 621              	 .cfi_def_cfa_offset 8
 622 0032 BD46     	 mov sp,r7
 623              	.LCFI70:
 624              	 .cfi_def_cfa_register 13
 625              	 
 626 0034 80BD     	 pop {r7,pc}
 627              	.L18:
 628 0036 00BF     	 .align 2
 629              	.L17:
 630 0038 00000000 	 .word group_ptrs
 631              	 .cfi_endproc
 632              	.LFE422:
 634              	 .section .text.XMC_DAC_CH_SetMode,"ax",%progbits
 635              	 .align 2
 636              	 .thumb
 637              	 .thumb_func
 639              	XMC_DAC_CH_SetMode:
 640              	.LFB449:
 641              	 .file 8 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_dac.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @file xmc_dac.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @date 2015-08-31
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  **********************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Redistribution and use in source and binary forms, with or without           
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * modification,are permitted provided that the following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   Redistributions of source code must retain the above copyright notice,      
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   this list of conditions and the following disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   this list of conditions and the following disclaimer in the documentation    
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   and/or other materials provided with the distribution.                       
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   may be used to endorse or promote products derived from this software without
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *   specific prior written permission.                                           
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * To improve the quality of the software, users are encouraged to share        
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * dave@infineon.com).                                                          
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  **********************************************************************************
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Change History
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * --------------
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-18:
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Initial version
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *      
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-20:
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Driver description added
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-06-19:
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-08-31:
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Help document updated
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @endcond 
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #ifndef XMC_DAC_H
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_H
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * HEADER FILES
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #include <xmc_common.h>
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /* DAC peripheral is not available on XMC1X devices. */
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(DAC)
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup XMClib
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup DAC
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @brief Digital to Analog Converter (DAC) driver for XMC 4000 microcontroller family. <br>
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver uses DAC peripheral to convert digital value to analog value. XMC4000 microcontroller
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * and maximum conversion rate of 2MHz with full accuracy and 5MHz with reduced accuracy.
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * It consists of inbuilt pattern generator, ramp generator and noise generator modes. Additionally
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * in single value mode and in data mode.
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * It has DMA handling capability to generate custom waveforms in data mode without CPU interventio
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver features:
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Configuration structure XMC_DAC_CH_CONFIG_t and initialization function XMC_DAC_CH_Init() to
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Pattern Generator Mode:
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in pattern generator mode using XMC_DAC_CH_StartPatternMode()
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- XMC_DAC_CH_SetPattern() is used to set the waveform pattern values in pattern register for on
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetPatternFrequency()
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Single Value Mode:
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in single value mode using XMC_DAC_CH_StartSingleValueMode()
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Data Mode:
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in data mode using XMC_DAC_CH_StartDataMode()
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Ramp Mode:
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *  - DAC is configured in ramp generator mode using XMC_DAC_CH_StartRampMode()
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to change the trigger frequency using XMC_DAC_CH_SetRampFrequency()
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to set the start and stop values of the ramp using XMC_DAC_CH_SetRampStart() and XMC_D
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Noise Mode:
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in noise mode using XMC_DAC_CH_StartNoiseMode()
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to change the scale, offset dynamically using XMC_DAC_CH_SetOutputScale() and XMC_DAC_
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to select one of the eight possible trigger sources using XMC_DAC_CH_SetTrigger()
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * -# 2 DAC channels can be used in synchronization in single value mode and data mode to generate 
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * MACROS
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC0 ((XMC_DAC_t *)DAC_BASE)         /**< DAC module register base */
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_DACCFG_NEGATE_Msk (0x10000000UL) /*< DAC negation enable mask in XMC44 device */
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_NO_CHANNELS (2U)                 /**< DAC maximum channels */
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_SAMPLES_PER_PERIOD (32U)         /**< DAC samples per period in pattern mode */
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_TRIANGLE  {0U, 4U, 8U, 12U, 16U, 19U, 23U, 27U, 31U} /**< First quarter Tri
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_SINE      {0U, 6U, 12U, 17U, 22U, 26U, 29U, 30U, 31U} /**< First quarter Si
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_RECTANGLE {31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U} /**< First quarter 
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_DAC_VALID(PTR)            ((PTR) == XMC_DAC0)
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_CHANNEL_VALID(CH)         (CH < XMC_DAC_NO_CHANNELS)
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_TRIGGER_VALID(TRIGGER)    ((TRIGGER == XMC_DAC_CH_TRIGGER_INTERNAL) ||\
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1) ||
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1) ||
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1) ||
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9) ||\
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8) ||\
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS) 
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS) 
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_SOFTWARE))
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_MODE_VALID(MODE)          ((MODE == XMC_DAC_CH_MODE_IDLE) ||\
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_SINGLE) ||\
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_DATA) ||\
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_PATTERN) ||\
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_NOISE) ||\
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_RAMP))
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_OUTPUT_SCALE_VALID(SCALE) ((SCALE == XMC_DAC_CH_OUTPUT_SCALE_NONE) ||\
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_2) ||\
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_4) ||\
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_8) ||\
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_16) ||\
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_32) ||\
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_64) ||\
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_128) ||\
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_2) ||\
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_4) ||\
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_8) ||\
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_16) ||\
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_32) ||\
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_64) ||\
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_128))
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                             
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * ENUMS
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Return types of the API's
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_STATUS
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_OK              = 0U, /**< Status is ok, no error detected */
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR           = 1U, /**< Error detected */
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_BUSY            = 2U, /**< DAC is busy */
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2LOW  = 3U, /**< Frequency can't be configured. Frequency is to low. 
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2HIGH = 4U  /**< Frequency can't be configured. Frequency is to high.
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_STATUS_t;
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Operating modes of DAC
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_MODE
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_IDLE    = 0x0U << DAC_DAC0CFG0_MODE_Pos,    /**< DAC is disabled */
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_SINGLE  = 0x1U << DAC_DAC0CFG0_MODE_Pos,    /**< Single value mode - single data 
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_DATA    = 0x2U << DAC_DAC0CFG0_MODE_Pos,    /**< Data mode - continuous data proc
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_PATTERN = 0x3U << DAC_DAC0CFG0_MODE_Pos,    /**< Pattern mode - inbuilt pattern w
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    Sine, Triangle, Rectangle */
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_NOISE   = 0x4U << DAC_DAC0CFG0_MODE_Pos,    /**< Noise mode - pseudo-random noise
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_RAMP    = 0x5U << DAC_DAC0CFG0_MODE_Pos     /**< Ramp mode - ramp generation */
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_MODE_t;
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Trigger sources for the data update
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_TRIGGER
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_INTERNAL =
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x0U << DAC_DAC0CFG1_TRIGMOD_Pos),                                      /**< Internal trigge
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1 =
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | 0x0U,                               /**< External trigge
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1 =
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x2U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1 =
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x3U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9 =
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x4U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8 =
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x5U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS =
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x6U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS =
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x7U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_SOFTWARE =
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x2U << DAC_DAC0CFG1_TRIGMOD_Pos)                                       /**< Software trigge
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_TRIGGER_t;
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Data type of the input data
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_DATA_TYPE
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_UNSIGNED = 0U , /**< input data is unsigned */
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_SIGNED = 1U     /**< input data is signed */
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_DATA_TYPE_t;
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Scaling of the input data
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_SCALE
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_NONE =
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x0U,                                                                   /**< No scaling */
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_2 =
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x1U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 2 
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_4 =
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x2U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 4 
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_8 =
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x3U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 8 
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_16 =
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x4U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 16
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_32 =
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x5U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 32
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_64 =
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x6U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 64
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_128 =
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x7U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 12
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_2 =
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x1U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 2 */
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_4 =
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x2U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 4 */
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_8 =
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x3U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 8 */
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_16 =
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x4U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 16 */
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_32 =
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x5U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 32 */
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_64 =
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x6U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 64 */
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_128 =
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****       0x7U << DAC_DAC0CFG1_SCALE_Pos                                          /**< divided by 128 *
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_SCALE_t;
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Negation of input data (applicable only for XMC44 device)
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_NEGATION
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_DISABLED = 0U,                   /**< XMC_DAC_CH_OUTPUT_NEGATION_DISAB
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_ENABLED = 1U                     /**< XMC_DAC_CH_OUTPUT_NEGATION_ENABL
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_NEGATION_t;
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Output sign signal for the Pattern Generation Mode
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_PATTERN_SIGN_OUTPUT
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_DISABLED = 0U,  /**< Sign output signal generation is disabled */
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_ENABLED = 1U    /**< Sign output signal generation is enabled */
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t;
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DATA STRUCTURES
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC peripheral registers configuration.
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   __I  uint32_t  ID;
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t low;
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t high;
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   } DACCFG[XMC_DAC_NO_CHANNELS];
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DACDATA[XMC_DAC_NO_CHANNELS];
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DAC01DATA;
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t low;
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t high;
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   } DACPAT[XMC_DAC_NO_CHANNELS];
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_t;
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard start*/
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma push
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma anon_unions
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma warning 586
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel related configuration
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct XMC_DAC_CH_CONFIG
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   union
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :23;                /**< Not used bits */
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t data_type:1;        /**< input data type - unsigned / signed */
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :4;                 /**< Not used bits */
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_negation:1;  /**< Negation of the output waveform enabled/disabled */
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :3;
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   };
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   uint32_t cfg0;
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   };
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   union
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   {
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_scale:4;  /**< Scale value of type XMC_DAC_CH_OUTPUT_SCALE_t. It includes scali
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_offset:8; /**< offset value */
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :20;
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   };
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   uint32_t cfg1;
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   };
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_CONFIG_t;
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard end*/
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma pop
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma warning restore
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * API PROTOTYPES
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #ifdef __cplusplus
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** extern "C" {
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables DAC clock and releases DAC reset.<br>
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Enabling DAC is the first step of DAC initialisation. This API is called by XMC_DAC_CH_Init().
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is enabled by setting \a DAC bit of \a CGATCLR1 register. DAC reset is released by set
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Disable(), XMC_DAC_CH_Init()\n\n\n
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Enable(XMC_DAC_t *const dac);
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables DAC clock and resets DAC.
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is disabled by setting \a DAC bit of \a CGATSET1 register. DAC is reset by setting \a 
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Enable()\n\n\n
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Disable(XMC_DAC_t *const dac);
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool<br>
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if DAC is enabled<br>
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if DAC is disabled
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the state of the DAC.
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC enabled status is determined by referring to \a DACRS bit of \a PRSTAT1 register.
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_Enable(), XMC_DAC_Disable()\n\n\n
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** bool XMC_DAC_IsEnabled(const XMC_DAC_t *const dac);
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to Simultaneous data mode from Independent data mode.
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is enabled by setting \a DATMOD bit of \a DAC0CFG1 register.
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Set channel 0 and channel 1 to Data mode before calling this API.
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_SimultaneousWrite(), XMC_
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_EnableSimultaneousDataMode(XMC_DAC_t *const dac)
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_EnableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high |= DAC_DAC0CFG1_DATMOD_Msk;
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to independent data mode from simultaneous Data mode.
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is disabled by clearing \a DATMOD bit of \a DAC0CFG1 register.
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartDataMode(), XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_DisableSimultaneousDataMode(XMC_DAC_t *const dac)
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_DisableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high &= ~DAC_DAC0CFG1_DATMOD_Msk;
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data0 Data for DAC channel 0 [0-4095]
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data1 Data for DAC channel 1 [0-4095]
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The data (\e data0 & \e data1) to be converted by channel 0 & channel 1 are updated to \a DATA1 
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * data0 and data1 have the range of [0-4095].
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel 0 and Channel 1 should be set to simultaneous data mode before calling this API.
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_SimultaneousWrite(XMC_DAC_t *const dac, const uint16_t data0, const ui
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_SimultaneousWrite: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (data0 << DAC_DAC01DATA_DATA0_Pos) | (data1 << DAC_DAC01DATA_DATA1_Pos);
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param config Pointer to the DAC channel configuration structure
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Initialises and configures the DAC \e channel with the configuration date pointed by \e config.
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC channel is initialised by configuring the registers \a DAC0CFG0 and \a DAC0CFG1 registers (f
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * It enables the channel output by calling XMC_DAC_CH_EnableOutput().
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_Init(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_CH_CONFIG_t *const 
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is enabled by setting the \a ANAEN bit of \a DAC0CFG1 register (for ch
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><BR>
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \a tSTARTUP time for DAC analog output starts after the \a ANAEN bit is set to one.
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * After the expiry of the startup time the default value is driven to DAC output and a new value c
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_DisableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high |= DAC_DAC0CFG1_ANAEN_Msk;
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is disabled by clearing the \a ANAEN bit of \a DAC0CFG1 register (for 
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * A call to this API stops driving the converted digital input to its output.
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high &= ~DAC_DAC0CFG1_ANAEN_Msk;
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool <BR>
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if analog output is enabled <BR>
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if analog output is disabled <BR>
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the status of DAC analog output.
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output enabled or disabled is determined by reading the \a ANAEN bit of \a DA
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_DisableOutput()\n\n\n
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE bool XMC_DAC_CH_IsOutputEnabled(const XMC_DAC_t *const dac, const uint8_t channel)
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   return (bool)(dac->DACCFG[channel].high & DAC_DAC0CFG1_ANAEN_Msk);
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data Data to be written  [0-4095]
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Writes the \e data to the \e channel's DATA register.
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The \e data is then converted and driven to the output.
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the trigger is set, On a trigger event the data in DATA register is converted and driven to \
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Data \a data is written to the \a channel by loading \a data to \a DATA0 bit-field of \a DAC0DAT
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * data has the range of [0-4095].
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The API can be used for Single Value Mode, Data Mode (Individual) & Ramp Mode.
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_EnableOutput() API to enable analog output.
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_CH_StartRampMode()\n\n\n
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_Write(XMC_DAC_t *const dac, const uint8_t channel, const uint16_t d
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel));
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = data;
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Single Value Mode by calling XMC_DAC_CH_SetMode().
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data.
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Write()\n\n\n
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartSingleValueMode(XMC_DAC_t *const dac, const uint8_t channel);
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency [Hz]
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Data mode. Trigger and frequency are configured.
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data. Call XMC_DAC_EnableSimultaneousDataMode() to swit
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_Write(), XMC_DAC_EnableSimultaneousDataMode() \n\n\n
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartDataMode(XMC_DAC_t *const dac,
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint8_t channel,
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint32_t frequency);
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Start point of the ramp [0-4095]
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Stop point of the ramp [0-4095]
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Ramp frequency in [Hz]
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Ramp mode. Trigger, frequency, start and stop values are configured.
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger ramp values are converted and driven to \e channel output.
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Start and stop have the range of [0-4095]. Stop should be equal or greater than start. 
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \e stop value, it restarts from the \e start value with the next
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop() \n\n\n
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartRampMode(XMC_DAC_t *const dac,
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint8_t channel,
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint16_t start,
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint16_t stop,
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint32_t frequency);
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Data table of a pattern
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param sign_output Sign information of the waveform
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Pattern mode. Trigger, frequency, sign output and data are configured.
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger, the \e pattern values are converted and driven to \e channel output.
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_DisablePatternSignOutput() \n\n\n
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartPatternMode(XMC_DAC_t *const dac,
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint8_t channel,
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint8_t *const pattern,
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t sign_output,
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const XMC_DAC_CH_TRIGGER_t trigger,
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint32_t frequency);
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Noise mode. Trigger and frequency are configured.
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger the DAC starts converting and drives to \e channel output.
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init()\n\n\n
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartNoiseMode(XMC_DAC_t *const dac,
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               const uint8_t channel,
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               const XMC_DAC_CH_TRIGGER_t trigger,
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                               const uint32_t frequency);
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Pointer to the data table
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The data for the Pattern mode is written to the \a DAC0PATL and \a DAC0PATH registers.
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The API is called by XMC_DAC_CH_StartPatternMode().
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Pattern mode.
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnablePatternSignOutput(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_SetPattern(XMC_DAC_t *const dac, const uint8_t channel, const uint8_t *const patter
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables the output sign information for Pattern Mode.
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is enabled by setting \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1CF
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnablePatternSignOutput(XMC_DAC_t *const dac,
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                      const uint8_t channel)
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNE
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low |= DAC_DAC0CFG0_SIGNEN_Msk;
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables output sign information for Pattern Mode.
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is disabled by clearing \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_EnablePatternSignOutput()\n\n\n
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisablePatternSignOutput(XMC_DAC_t *const dac,
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                      const uint8_t channel)
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANN
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low &= ~DAC_DAC0CFG0_SIGNEN_Msk;
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Ramp start point [0-4095]
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp start value by writing to the register \a DAC0DATA (for \e channel 0) or \a DAC1DA
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the \a start value with the next tr
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e start value is lower than the stop value.
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Ramp mode.
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Start value is a 12 bit data.
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStop()\n\n\n
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStart(XMC_DAC_t *const dac, const uint8_t channel, const uin
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = start;
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp start value by reading \a DATA0 bit-field of \a DAC0DATA register (for channel 0) 
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStart(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetR
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStart(XMC_DAC_t *const dac, const uint8_t channel)
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   return (uint16_t)(dac->DACDATA[channel]);
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Ramp stop point [0-4095]
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp stop value by writing to the bit-field \a DATA0 (for \e channel 0) or \a DATA1 (fo
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \a stop value, it restarts from the start value with the next tr
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e stop value is higher than the start value.
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Stop value is a 12 bit data.
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStart()\n\n\n
 874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStop(XMC_DAC_t *const dac, const uint8_t channel, const uint
 877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     
 881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (dac->DAC01DATA & ~(DAC_DAC01DATA_DATA0_Msk << (channel * DAC_DAC01DATA_DATA1_Po
 882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                (stop << (channel * DAC_DAC01DATA_DATA1_Pos));
 883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp stop value by reading \a DATA0 bit-field of \a DAC01DATA register (for channel 0) 
 893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStop(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStart()\n\n\n
 900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStop(XMC_DAC_t *const dac, const uint8_t channel)
 903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   return((dac->DAC01DATA >> (channel * DAC_DAC01DATA_DATA1_Pos)) & DAC_DAC01DATA_DATA0_Msk);
 908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Trigger source
 914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Selects the \e trigger source for the \e channel by configuring the bits TRIGSEL & TRIGMOD of CF
 919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel trigger source is selected by \a TRIGSEL bit-field of \a DAC0CFG1 register (f
 922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetTrigger(XMC_DAC_t *const dac, const uint8_t channel, const XMC_D
 925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chann
 928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: trigger parameter not valid\n", XMC_DAC_IS_TRIGGER_VALID(trigg
 929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high = (dac->DACCFG[channel].high & ~(DAC_DAC0CFG1_TRIGSEL_Msk | DAC_DAC0CFG
 931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                               trigger;
 932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel.
 943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * The value \e frequency acts as clock divider. The smallest \e frequency divider value is 16.
 946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * A valid \e frequency value should be within the range XMC_DAC_MIN_FREQ_DIVIDER to XMC_DAC_MAX_FR
 947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \a frequency is configured by setting \a FREQ bit-field of \a DAC0CFG0 register (for c
 948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only for Single value mode, Data mode and Noise mode.
 951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_SetRampFrequency() in case of Ramp mode and XMC_DAC_CH_SetPatternFrequency() in 
 952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampFrequency(), XMC_DAC_CH_SetPatternFrequency()\n\n\n
 955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetFrequency(XMC_DAC_t *const dac, const uint8_t channel, const uint
 958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency [Hz]
 963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Ramp mode, the \a frequency of operation depends on the total number of sample points (\
 971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Ramp mode.
 975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartRampMode()\n\n\n
 978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
 980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetRampFrequency(XMC_DAC_t *const dac, const uint8_t channel, const 
 981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
 982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
 983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency in [Hz]
 986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Pattern mode, the \a frequency of operation depends on the total number of sample points
 994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Pattern mode.
 998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
 999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
1000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode()\n\n\n
1001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
1002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
1003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetPatternFrequency(XMC_DAC_t *const dac,
1004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    const uint8_t channel,
1005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    const uint32_t frequency)
1006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
1007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac)
1008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VA
1009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
1010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   return XMC_DAC_CH_SetFrequency(dac, channel, frequency * XMC_DAC_SAMPLES_PER_PERIOD);
1011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
1012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** 
1013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** /**
1014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
1015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
1016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @param mode DAC operation mode
1017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
1018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
1019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
1020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
1021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the operating \e mode for the \e channel by setting the \a MODE bit-field of \a DAC0CFG0 re
1022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  * Different modes of DAC operation are defined by enum XMC_DAC_CH_MODE_t.
1023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  *
1024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****  */
1025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetMode(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_
1026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** {
 642              	 .loc 8 1026 0
 643              	 .cfi_startproc
 644              	 
 645              	 
 646              	 
 647 0000 80B4     	 push {r7}
 648              	.LCFI71:
 649              	 .cfi_def_cfa_offset 4
 650              	 .cfi_offset 7,-4
 651 0002 85B0     	 sub sp,sp,#20
 652              	.LCFI72:
 653              	 .cfi_def_cfa_offset 24
 654 0004 00AF     	 add r7,sp,#0
 655              	.LCFI73:
 656              	 .cfi_def_cfa_register 7
 657 0006 F860     	 str r0,[r7,#12]
 658 0008 0B46     	 mov r3,r1
 659 000a 7A60     	 str r2,[r7,#4]
 660 000c FB72     	 strb r3,[r7,#11]
1027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
1028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel)
1029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: trigger parameter not valid\n", XMC_DAC_IS_MODE_VALID(mode));
1030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****     
1031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low = (dac->DACCFG[channel].low & ~DAC_DAC0CFG0_MODE_Msk) |
 661              	 .loc 8 1031 0
 662 000e F87A     	 ldrb r0,[r7,#11]
 663 0010 FB7A     	 ldrb r3,[r7,#11]
 664 0012 FA68     	 ldr r2,[r7,#12]
 665 0014 DB00     	 lsls r3,r3,#3
 666 0016 1344     	 add r3,r3,r2
 667 0018 5B68     	 ldr r3,[r3,#4]
 668 001a 23F4E002 	 bic r2,r3,#7340032
 669 001e 7B68     	 ldr r3,[r7,#4]
 670 0020 1A43     	 orrs r2,r2,r3
 671 0022 F968     	 ldr r1,[r7,#12]
 672 0024 C300     	 lsls r3,r0,#3
 673 0026 0B44     	 add r3,r3,r1
 674 0028 5A60     	 str r2,[r3,#4]
1032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h ****                              mode;
1033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_dac.h **** }
 675              	 .loc 8 1033 0
 676 002a 1437     	 adds r7,r7,#20
 677              	.LCFI74:
 678              	 .cfi_def_cfa_offset 4
 679 002c BD46     	 mov sp,r7
 680              	.LCFI75:
 681              	 .cfi_def_cfa_register 13
 682              	 
 683 002e 5DF8047B 	 ldr r7,[sp],#4
 684              	.LCFI76:
 685              	 .cfi_restore 7
 686              	 .cfi_def_cfa_offset 0
 687 0032 7047     	 bx lr
 688              	 .cfi_endproc
 689              	.LFE449:
 691              	 .section .text.DAC_Enable,"ax",%progbits
 692              	 .align 2
 693              	 .thumb
 694              	 .thumb_func
 696              	DAC_Enable:
 697              	.LFB464:
 698              	 .file 9 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC/dac.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @file dac.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @date 2016-07-08
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC v4.0.16 - Generates Pattern, Noise and Ramp waveform. It can be used for single value and da
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * All rights reserved.
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * following conditions are met:
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   disclaimer.
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *   products derived from this software without specific prior written permission.
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * with Infineon Technologies AG (dave@infineon.com).
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *     - Initial version
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * 2015-06-20:
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *     - APP version updated for changes in dac.c file <br>
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * 2015-12-15:
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *     - ANALOG_IO APP Init function call added
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * 2016-07-08:
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *     - Fixed incorrect case for an included header.<br>
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcond
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**************************************************************************************************
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * HEADER FILES
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #ifndef DAC_H_
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define DAC_H_
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #include <xmc_dac.h>
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #include <xmc_scu.h>
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #include <DAVE_Common.h>
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #include "dac_conf.h"
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #if (DAC_ANALOG_IO_USED == 1U)
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #include "../ANALOG_IO/analog_io.h"
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #endif
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #error "DAC requires XMC Peripheral Library v2.0.0 or higher"
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #endif
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**************************************************************************************************
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * MACROS
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @ingroup DAC_constants
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @{
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_OUT_MIN_MV            (300U)        /**< DAC Minimum output voltage in mV */
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_OUT_MAX_MV            (2500U)       /**< DAC Maximum output voltage in mV*/
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_OFFSET_SIGN_mV        (1400U)       /**< Output offset in Volt when signed values used
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_PATTERN_AMPLITUDE     (62)          /**< Non scaled maximum output of Pattern Amplitud
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_VSS_MAX               (DAC_OUT_MAX_MV - DAC_OUT_MIN_MV)
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_REGISTER_MAX_SIGN     (2048U)      /**< Maximum positive 12 Bit value in signed mode*/
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_OFFSET_MAX_SIGN       (127)        /**< Maximum offset possible in Pattern Mode */
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_OFFSET_MIN_SIGN       (-128)       /**< Minimum offset possible in Pattern Mode */
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_DATA_VALUE_MAX_USIGN  (4095U)      /**< Maximum Configurable Data Value */
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_DATA_VALUE_MAX_SIGN   (2047)       /**< Maximum Configurable Data Value in Signed Mode
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_DATA_VALUE_MIN_SIGN   (-2048)      /**< Minimum Configurable Data Value in Signed Mode
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_MAX_FREQUENCY         (2000000U)   /**< Maximum Configurable DAC Frequency */
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_RAMP_MIN_STEPS        (3U)         /**< Minimum Configurable Ramp Steps */
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_RAMP_MAX_STEPS        (4095U)      /**< Maximum Configurable Ramp Steps */
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_MIN_CLK_DIV           (16U)        /**< Minimum Clock divider */
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_MAX_CLK_DIV           (1048575U)   /**< Maximum Clock divider */
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_MAX_SCALE_SHIFT       (7U)         /**< Maximum possible scaling up or down */
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #define  DAC_VSS_34_MV             (34U)        /**< DAC 34 milli volts */
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @}
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**************************************************************************************************
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * ENUMS
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @ingroup DAC_enumerations
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @{
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC Status
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** typedef enum DAC_STATUS
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAC_STATUS_SUCCESS = 0,          /**< DAC Initialization successful */
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAC_STATUS_FAILURE,              /**< DAC Initialization failed */
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAC_STATUS_API_FAIL              /**< DAC API Call returned ERROR */
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** } DAC_STATUS_t;
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *  @brief Available DAC output ranges named in Milli Volt
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** typedef enum DAC_VSS
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0001_mV = 0,            /**< DAC output 1 milli volts */
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0002_mV,                /**< DAC output 2 milli volts */
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0004_mV,                /**< DAC output 4 milli volts */
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0009_mV,                /**< DAC output 9 milli volts */
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0017_mV,                /**< DAC output 17 milli volts */
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0034_mV,                /**< DAC output 34 milli volts */
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0069_mV,                /**< DAC output 69 milli volts */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0138_mV,                /**< DAC output 138 milli volts */
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0275_mV,                /**< DAC output 275 milli volts */
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_0550_mV,                /**< DAC output 550 milli volts */
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_1100_mV,                /**< DAC output 1100 milli volts */
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_VSS_2200_mV,                /**< DAC output 2200 milli volts */
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** }  DAC_VSS_t;
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @}
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**************************************************************************************************
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DATA STRUCTURES
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @ingroup DAC_datastructures
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @{
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * This structure holds the DAC parameters of user configured
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * waveform generator.
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** typedef struct DAC_t
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /* This structure contains the user configuration */
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   XMC_DAC_t  * const                  dac_module_ptr;          /**< DAC Module Pointer */
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   const XMC_DAC_CH_CONFIG_t *         dac_config_ptr;          /**< DAC Channel Configuration Data 
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #if (DAC_ANALOG_IO_USED == 1U)
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   const ANALOG_IO_t            *const analog_io_config_ptr;   /**< This hold the address of the ANA
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #endif
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   XMC_DAC_CH_MODE_t                   dac_mode;                /**< DAC Mode Configuration */
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   XMC_DAC_CH_TRIGGER_t                dac_input_trigger;       /**< DAC Input Trigger */
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t    dac_sign_output;         /**< DAC Sign Output */
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint32_t                            dac_frequency;           /**< DAC Frequency */
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint16_t                            dac_ramp_start;          /**< DAC Ramp Start */
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint16_t                            dac_ramp_stop;           /**< DAC Ramp Stop */
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint16_t                            dac_ramp_start_mv;       /**< DAC Ramp Start in milli volts *
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint16_t                            dac_ramp_stop_mv;        /**< DAC Ramp Stop in milli volts */
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint8_t                             dac_service_request;     /**< Service request Enabled/Disable
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint8_t                             dac_coupled;             /**< DAC Coupled Mode Enabled/Disabl
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint8_t                             dac_ch;                  /**< DAC CH Number */
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   const uint8_t  *const               dac_pat_table_ptr;       /**< Pointer to Pattern generation t
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   uint8_t                             dac_start_after_init;    /**< Waveform generation starts afte
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** } DAC_t;
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @}
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #ifdef __cplusplus
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** extern "C"
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** #endif
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**************************************************************************************************
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * API Prototypes
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  **************************************************************************************************
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   /**
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @ingroup DAC_apidoc
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    * @{
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    */
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @brief Returns APP version information
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @param None
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @return DAVE_APP_VERSION_t Returns APP version number(major, minor and patch number).
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * <BR>
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Description</b><br>
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Each of the DAVE APP exports a version number(major, minor and patch number).
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Applications may then audit such a version number to determine compatibility.
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Example Usage:
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @code
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  #include <DAVE.h>
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  int main (void)
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  {
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAVE_STATUS_t status;
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAVE_APP_VERSION_t version;
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   status = DAVE_Init();		//DAC_Init(&DAC_0) will be called internally
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   version = DAC_GetAppVersion();
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   if (version.major != 1U)
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   {
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****     // Probably, not the right version.
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   }
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   while(1);
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   return 0;
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  }
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcode
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** DAVE_APP_VERSION_t DAC_GetAppVersion(void);
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @brief Initializes DAC peripheral as per GUI configurations.
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @param HandlePtr DAC App instance Handler pointing to user configuration.
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @return DAC_STATUS_t Returns failure if low level driver API call fails.
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * <BR>
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Description</b><br>
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Initializes DAC peripheral as per user configuration.
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Configures DAC operating mode,waveform frequency and channel related configuration.
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Note</b><br>
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * This API is called internally by DAVE_Init() function. Should not be called explicitly.
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Example Usage:
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @code
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  #include <DAVE.h>
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  int main (void)
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  {
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   DAVE_STATUS_t status;
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   status = DAVE_Init();		// DAC_Init(&DAC_0) will be called internally
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   while(1);
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****   return 0;
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  }
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcode
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** DAC_STATUS_t DAC_Init(const DAC_t * const HandlePtr);
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @brief Enables DAC channel analog module.
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @param HandlePtr DAC App instance Handler pointing to user configuration.
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @return void
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * <BR>
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Description</b><br>
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Enables configured DAC channel analog part only.To start the waveform generation one has to star
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * For example in pattern mode waveform starts whenever the digital part is turned ON after analog 
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC_Enable() API will start the digital part. So in pattern generation wave starts every time wi
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Related APIs:</b><BR>
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC_Enable()
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Example Usage:
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @code
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  #include <DAVE.h>
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  int main (void)
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  {
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAVE_STATUS_t status;
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    status = DAVE_Init();	    // DAC_Init(&DAC_0) will be called internally
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_EnableCHOutput(&DAC_0); //Enable Channel output
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    while(1);
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    return 0;
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  }
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcode
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** __STATIC_INLINE void DAC_EnableCHOutput(const DAC_t * const HandlePtr)
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****     XMC_DAC_CH_EnableOutput(HandlePtr->dac_module_ptr,HandlePtr->dac_ch);
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** }
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @brief Disables channel output by disabling analog module.
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @param HandlePtr DAC App instance Handler pointing to user configuration.
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @return void
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * <BR>
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Description</b><br>
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Disables analog part of the selected DAC channel.Waveform generation will be stopped.
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Related APIs:</b><BR>
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC_EnableCHOutput()
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Example Usage:
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @code
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  #include <DAVE.h>
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  int main (void)
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  {
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAVE_STATUS_t status;
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    status = DAVE_Init();		  // DAC_Init(&DAC_0) will be called internally
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_DisableCHOutput(&DAC_0);   //Disable Channel output
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    while(1);
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    return 0;
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  }
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcode
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** __STATIC_INLINE void DAC_DisableCHOutput(const DAC_t * const HandlePtr)
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****     XMC_DAC_CH_DisableOutput(HandlePtr->dac_module_ptr,HandlePtr->dac_ch);
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** }
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** 
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** /**
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @brief Enables DAC channel output.
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @param HandlePtr DAC App instance Handler pointing to user configuration.
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @return void
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * <BR>
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Description</b><br>
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Enables the DAC channel output. Switch mode from Idle to configured mode.Starts the digital part
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * configured DAC channel.If start after initialization option is disabled then one has to call thi
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * \par<b>Related APIs:</b><BR>
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * DAC_Disable()
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  *
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * Example Usage:
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @code
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  #include <DAVE.h>
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  int main (void)
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  {
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAVE_STATUS_t status;
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    status = DAVE_Init();		  // DAC_Init(&DAC_0) will be called internally
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_Disable(&DAC_0);          // disable DAC output
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    //do something..
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    DAC_Enable(&DAC_0);           //Set the mode back to the former type.
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    while(1);
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****    return 0;
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  }
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  * @endcode
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****  */
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** __STATIC_INLINE void DAC_Enable(const DAC_t * const HandlePtr)
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** {
 699              	 .loc 9 338 0
 700              	 .cfi_startproc
 701              	 
 702              	 
 703 0000 80B5     	 push {r7,lr}
 704              	.LCFI77:
 705              	 .cfi_def_cfa_offset 8
 706              	 .cfi_offset 7,-8
 707              	 .cfi_offset 14,-4
 708 0002 82B0     	 sub sp,sp,#8
 709              	.LCFI78:
 710              	 .cfi_def_cfa_offset 16
 711 0004 00AF     	 add r7,sp,#0
 712              	.LCFI79:
 713              	 .cfi_def_cfa_register 7
 714 0006 7860     	 str r0,[r7,#4]
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h ****     XMC_DAC_CH_SetMode(HandlePtr->dac_module_ptr, HandlePtr->dac_ch, HandlePtr->dac_mode);
 715              	 .loc 9 339 0
 716 0008 7B68     	 ldr r3,[r7,#4]
 717 000a 1968     	 ldr r1,[r3]
 718 000c 7B68     	 ldr r3,[r7,#4]
 719 000e 93F82220 	 ldrb r2,[r3,#34]
 720 0012 7B68     	 ldr r3,[r7,#4]
 721 0014 9B68     	 ldr r3,[r3,#8]
 722 0016 0846     	 mov r0,r1
 723 0018 1146     	 mov r1,r2
 724 001a 1A46     	 mov r2,r3
 725 001c FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC\dac.h **** }
 726              	 .loc 9 340 0
 727 0020 0837     	 adds r7,r7,#8
 728              	.LCFI80:
 729              	 .cfi_def_cfa_offset 8
 730 0022 BD46     	 mov sp,r7
 731              	.LCFI81:
 732              	 .cfi_def_cfa_register 13
 733              	 
 734 0024 80BD     	 pop {r7,pc}
 735              	 .cfi_endproc
 736              	.LFE464:
 738              	 .global silnik
 739 0026 00BF     	 .section .data.silnik,"aw",%progbits
 742              	silnik:
 743 0000 01       	 .byte 1
 744              	 .global adress
 745              	 .section .bss.adress,"aw",%nobits
 748              	adress:
 749 0000 00       	 .space 1
 750              	 .global init
 751              	 .section .bss.init,"aw",%nobits
 754              	init:
 755 0000 00       	 .space 1
 756              	 .global znak
 757              	 .section .bss.znak,"aw",%nobits
 760              	znak:
 761 0000 00       	 .space 1
 762              	 .global is_delay
 763              	 .section .data.is_delay,"aw",%progbits
 764              	 .align 2
 767              	is_delay:
 768 0000 01000000 	 .word 1
 769              	 .global debug
 770              	 .section .bss.debug,"aw",%nobits
 771              	 .align 2
 774              	debug:
 775 0000 00000000 	 .space 4
 776              	 .global rxData
 777              	 .section .bss.rxData,"aw",%nobits
 778              	 .align 2
 781              	rxData:
 782 0000 00000000 	 .space 10
 782      00000000 
 782      0000
 783              	 .global txData
 784 000a 0000     	 .section .bss.txData,"aw",%nobits
 785              	 .align 2
 788              	txData:
 789 0000 00000000 	 .space 10
 789      00000000 
 789      0000
 790              	 .global rxByte
 791 000a 0000     	 .section .bss.rxByte,"aw",%nobits
 794              	rxByte:
 795 0000 00       	 .space 1
 796              	 .global iterator_wiadomosci
 797              	 .section .bss.iterator_wiadomosci,"aw",%nobits
 800              	iterator_wiadomosci:
 801 0000 00       	 .space 1
 802              	 .global poz_zad
 803              	 .section .data.poz_zad,"aw",%progbits
 804              	 .align 1
 807              	poz_zad:
 808 0000 7017     	 .short 6000
 809              	 .global ks
 810              	 .section .data.ks,"aw",%progbits
 811              	 .align 1
 814              	ks:
 815 0000 9001     	 .short 400
 816              	 .global kd
 817              	 .section .data.kd,"aw",%progbits
 818              	 .align 1
 821              	kd:
 822 0000 5802     	 .short 600
 823              	 .global liczba_par_biegunow
 824              	 .section .data.liczba_par_biegunow,"aw",%progbits
 827              	liczba_par_biegunow:
 828 0000 15       	 .byte 21
 829              	 .comm Iq_zadane,2,2
 830              	 .comm Iq_poprzednie,4,4
 831              	 .global Vq_zadane
 832              	 .section .bss.Vq_zadane,"aw",%nobits
 833              	 .align 2
 836              	Vq_zadane:
 837 0000 00000000 	 .space 4
 838              	 .global uchyb_Iq
 839              	 .section .bss.uchyb_Iq,"aw",%nobits
 840              	 .align 2
 843              	uchyb_Iq:
 844 0000 00000000 	 .space 4
 845              	 .global uchyb_poprzedni_Iq
 846              	 .section .bss.uchyb_poprzedni_Iq,"aw",%nobits
 847              	 .align 2
 850              	uchyb_poprzedni_Iq:
 851 0000 00000000 	 .space 4
 852              	 .comm Id_zadane,4,4
 853              	 .comm Id_poprzednie,4,4
 854              	 .global Vd_zadane
 855              	 .section .bss.Vd_zadane,"aw",%nobits
 856              	 .align 2
 859              	Vd_zadane:
 860 0000 00000000 	 .space 4
 861              	 .comm uchyb_Id,4,4
 862              	 .global I_alfa
 863              	 .section .bss.I_alfa,"aw",%nobits
 864              	 .align 2
 867              	I_alfa:
 868 0000 00000000 	 .space 4
 869              	 .global I_beta
 870              	 .section .bss.I_beta,"aw",%nobits
 871              	 .align 2
 874              	I_beta:
 875 0000 00000000 	 .space 4
 876              	 .global V_alfa
 877              	 .section .bss.V_alfa,"aw",%nobits
 878              	 .align 2
 881              	V_alfa:
 882 0000 00000000 	 .space 4
 883              	 .global V_beta
 884              	 .section .bss.V_beta,"aw",%nobits
 885              	 .align 2
 888              	V_beta:
 889 0000 00000000 	 .space 4
 890              	 .global V_ref
 891              	 .section .bss.V_ref,"aw",%nobits
 892              	 .align 2
 895              	V_ref:
 896 0000 00000000 	 .space 4
 897              	 .global angle32
 898              	 .section .bss.angle32,"aw",%nobits
 899              	 .align 2
 902              	angle32:
 903 0000 00000000 	 .space 4
 904              	 .global I_net
 905              	 .section .bss.I_net,"aw",%nobits
 906              	 .align 1
 909              	I_net:
 910 0000 0000     	 .space 2
 911              	 .comm tData,2,4
 912              	 .comm rData,6,4
 913              	 .global kat_enkoder
 914              	 .section .bss.kat_enkoder,"aw",%nobits
 915              	 .align 1
 918              	kat_enkoder:
 919 0000 0000     	 .space 2
 920              	 .global kat_enkoder_poprzedni
 921              	 .section .bss.kat_enkoder_poprzedni,"aw",%nobits
 922              	 .align 1
 925              	kat_enkoder_poprzedni:
 926 0000 0000     	 .space 2
 927              	 .comm predkosc_enkoder,2,2
 928              	 .global predkosc_zadana
 929              	 .section .data.predkosc_zadana,"aw",%progbits
 930              	 .align 1
 933              	predkosc_zadana:
 934 0000 2C01     	 .short 300
 935              	 .global kat_elektryczny
 936              	 .section .bss.kat_elektryczny,"aw",%nobits
 937              	 .align 1
 940              	kat_elektryczny:
 941 0000 0000     	 .space 2
 942              	 .global kat_absolutny
 943              	 .section .bss.kat_absolutny,"aw",%nobits
 944              	 .align 2
 947              	kat_absolutny:
 948 0000 00000000 	 .space 4
 949              	 .global offset_elektryczny
 950              	 .section .bss.offset_elektryczny,"aw",%nobits
 951              	 .align 2
 954              	offset_elektryczny:
 955 0000 00000000 	 .space 4
 956              	 .global angle
 957              	 .section .bss.angle,"aw",%nobits
 958              	 .align 1
 961              	angle:
 962 0000 0000     	 .space 2
 963              	 .global v3v
 964              	 .section .data.v3v,"aw",%progbits
 965              	 .align 2
 968              	v3v:
 969 0000 FC0C0000 	 .word 3324
 970              	 .global iu
 971              	 .section .bss.iu,"aw",%nobits
 972              	 .align 2
 975              	iu:
 976 0000 00000000 	 .space 4
 977              	 .global iuOffset
 978              	 .section .bss.iuOffset,"aw",%nobits
 979              	 .align 2
 982              	iuOffset:
 983 0000 00000000 	 .space 4
 984              	 .global iv
 985              	 .section .bss.iv,"aw",%nobits
 986              	 .align 2
 989              	iv:
 990 0000 00000000 	 .space 4
 991              	 .global ivOffset
 992              	 .section .bss.ivOffset,"aw",%nobits
 993              	 .align 2
 996              	ivOffset:
 997 0000 00000000 	 .space 4
 998              	 .global iw
 999              	 .section .bss.iw,"aw",%nobits
 1000              	 .align 2
 1003              	iw:
 1004 0000 00000000 	 .space 4
 1005              	 .global iwOffset
 1006              	 .section .bss.iwOffset,"aw",%nobits
 1007              	 .align 2
 1010              	iwOffset:
 1011 0000 00000000 	 .space 4
 1012              	 .global i
 1013              	 .section .bss.i,"aw",%nobits
 1014              	 .align 2
 1017              	i:
 1018 0000 00000000 	 .space 12
 1018      00000000 
 1018      00000000 
 1019              	 .global icale
 1020              	 .section .bss.icale,"aw",%nobits
 1021              	 .align 2
 1024              	icale:
 1025 0000 00000000 	 .space 4
 1026              	 .comm PI_Id,28,4
 1027              	 .comm PI_Iq,28,4
 1028              	 .comm PI_predkosc,28,4
 1029              	 .section .text.PI_REG,"ax",%progbits
 1030              	 .align 2
 1031              	 .global PI_REG
 1032              	 .thumb
 1033              	 .thumb_func
 1035              	PI_REG:
 1036              	.LFB551:
 1037              	 .file 10 "../variables.h"
   1:../variables.h **** #define SOF 0xCC
   2:../variables.h **** #define EOF 0xDD
   3:../variables.h **** #define INIT 0xA1
   4:../variables.h **** #define CHECK 0xA3
   5:../variables.h **** 
   6:../variables.h **** //driver control vars
   7:../variables.h **** 
   8:../variables.h **** uint8_t silnik = 1;
   9:../variables.h **** uint8_t adress = 0;
  10:../variables.h **** uint8_t init = 0;
  11:../variables.h **** int8_t znak = 0;
  12:../variables.h **** uint32_t is_delay = 1;
  13:../variables.h **** uint32_t debug = 0; //special var for debugging
  14:../variables.h **** // UART and comms vars
  15:../variables.h **** uint8_t rxData[10] = {0};
  16:../variables.h **** uint8_t txData[10] = {0};
  17:../variables.h **** uint8_t rxByte = 0;
  18:../variables.h **** uint8_t iterator_wiadomosci =0;
  19:../variables.h **** 
  20:../variables.h **** // Virtual complience vars
  21:../variables.h **** uint16_t poz_zad = 6000;
  22:../variables.h **** uint16_t ks =400;
  23:../variables.h **** uint16_t kd =600;
  24:../variables.h **** 
  25:../variables.h **** //FOC vars
  26:../variables.h **** uint8_t liczba_par_biegunow = 21;
  27:../variables.h **** //iq
  28:../variables.h **** int16_t Iq_zadane;
  29:../variables.h **** int32_t Iq_poprzednie;
  30:../variables.h **** int32_t Vq_zadane = 0;
  31:../variables.h **** int32_t uchyb_Iq = 0;
  32:../variables.h **** int32_t uchyb_poprzedni_Iq = 0;
  33:../variables.h **** 
  34:../variables.h **** //id
  35:../variables.h **** int32_t Id_zadane;
  36:../variables.h **** int32_t Id_poprzednie;
  37:../variables.h **** int32_t Vd_zadane=0;
  38:../variables.h **** int32_t uchyb_Id;
  39:../variables.h **** 
  40:../variables.h **** int32_t I_alfa = 0;
  41:../variables.h **** int32_t I_beta = 0;
  42:../variables.h **** int32_t V_alfa = 0;
  43:../variables.h **** int32_t V_beta = 0;
  44:../variables.h **** uint32_t V_ref = 0;
  45:../variables.h **** uint32_t angle32 = 0;
  46:../variables.h **** int16_t I_net = 0;
  47:../variables.h **** 
  48:../variables.h **** //Encoder and SPI vars
  49:../variables.h **** uint8_t tData[2];
  50:../variables.h **** uint8_t rData[6];
  51:../variables.h **** uint16_t kat_enkoder = 0;	//|0-2PI| = |0 - 2^16|
  52:../variables.h **** uint16_t kat_enkoder_poprzedni = {0};
  53:../variables.h **** int16_t predkosc_enkoder;
  54:../variables.h **** int16_t predkosc_zadana = 300;
  55:../variables.h **** int16_t kat_elektryczny = 0;
  56:../variables.h **** int32_t kat_absolutny = 0;
  57:../variables.h **** int32_t offset_elektryczny = 0;
  58:../variables.h **** int16_t angle = 0;
  59:../variables.h **** 
  60:../variables.h **** // ADC and current measurement vars
  61:../variables.h **** int32_t v3v = 3324;
  62:../variables.h **** int32_t iu = 0;
  63:../variables.h **** int32_t iuOffset = 0;
  64:../variables.h **** int32_t iv = 0;
  65:../variables.h **** int32_t ivOffset = 0;
  66:../variables.h **** int32_t iw = 0;
  67:../variables.h **** int32_t iwOffset = 0;
  68:../variables.h **** int32_t i[3]= {0};
  69:../variables.h **** int32_t icale = 0;
  70:../variables.h **** 
  71:../variables.h **** //PI regulators
  72:../variables.h **** typedef struct PI
  73:../variables.h **** {
  74:../variables.h ****     uint16_t kP;
  75:../variables.h ****     uint16_t kI;
  76:../variables.h ****     int32_t y_max;
  77:../variables.h ****     int32_t y_min;
  78:../variables.h ****     int32_t y;
  79:../variables.h ****     int32_t buff ;
  80:../variables.h ****     int32_t buff_max;
  81:../variables.h ****     int32_t buff_min;
  82:../variables.h **** }PI_t;
  83:../variables.h **** 
  84:../variables.h **** PI_t PI_Id;
  85:../variables.h **** PI_t PI_Iq;
  86:../variables.h **** PI_t PI_predkosc;
  87:../variables.h **** 
  88:../variables.h **** void PI_REG(PI_t *handle, int32_t err)
  89:../variables.h **** {
 1038              	 .loc 10 89 0
 1039              	 .cfi_startproc
 1040              	 
 1041              	 
 1042              	 
 1043 0000 80B4     	 push {r7}
 1044              	.LCFI82:
 1045              	 .cfi_def_cfa_offset 4
 1046              	 .cfi_offset 7,-4
 1047 0002 85B0     	 sub sp,sp,#20
 1048              	.LCFI83:
 1049              	 .cfi_def_cfa_offset 24
 1050 0004 00AF     	 add r7,sp,#0
 1051              	.LCFI84:
 1052              	 .cfi_def_cfa_register 7
 1053 0006 7860     	 str r0,[r7,#4]
 1054 0008 3960     	 str r1,[r7]
  90:../variables.h ****     handle->buff = handle->buff + err;
 1055              	 .loc 10 90 0
 1056 000a 7B68     	 ldr r3,[r7,#4]
 1057 000c 1A69     	 ldr r2,[r3,#16]
 1058 000e 3B68     	 ldr r3,[r7]
 1059 0010 1A44     	 add r2,r2,r3
 1060 0012 7B68     	 ldr r3,[r7,#4]
 1061 0014 1A61     	 str r2,[r3,#16]
  91:../variables.h ****     if(handle->buff > handle->buff_max)
 1062              	 .loc 10 91 0
 1063 0016 7B68     	 ldr r3,[r7,#4]
 1064 0018 1A69     	 ldr r2,[r3,#16]
 1065 001a 7B68     	 ldr r3,[r7,#4]
 1066 001c 5B69     	 ldr r3,[r3,#20]
 1067 001e 9A42     	 cmp r2,r3
 1068 0020 04DD     	 ble .L22
  92:../variables.h ****         handle->buff = handle->buff_max;
 1069              	 .loc 10 92 0
 1070 0022 7B68     	 ldr r3,[r7,#4]
 1071 0024 5A69     	 ldr r2,[r3,#20]
 1072 0026 7B68     	 ldr r3,[r7,#4]
 1073 0028 1A61     	 str r2,[r3,#16]
 1074 002a 09E0     	 b .L23
 1075              	.L22:
  93:../variables.h ****     else if(handle->buff < handle->buff_min)
 1076              	 .loc 10 93 0
 1077 002c 7B68     	 ldr r3,[r7,#4]
 1078 002e 1A69     	 ldr r2,[r3,#16]
 1079 0030 7B68     	 ldr r3,[r7,#4]
 1080 0032 9B69     	 ldr r3,[r3,#24]
 1081 0034 9A42     	 cmp r2,r3
 1082 0036 03DA     	 bge .L23
  94:../variables.h ****         handle->buff = handle->buff_min;
 1083              	 .loc 10 94 0
 1084 0038 7B68     	 ldr r3,[r7,#4]
 1085 003a 9A69     	 ldr r2,[r3,#24]
 1086 003c 7B68     	 ldr r3,[r7,#4]
 1087 003e 1A61     	 str r2,[r3,#16]
 1088              	.L23:
  95:../variables.h ****     int32_t temp_ki_buff = (handle->buff * handle->kI) / 10000;
 1089              	 .loc 10 95 0
 1090 0040 7B68     	 ldr r3,[r7,#4]
 1091 0042 1B69     	 ldr r3,[r3,#16]
 1092 0044 7A68     	 ldr r2,[r7,#4]
 1093 0046 5288     	 ldrh r2,[r2,#2]
 1094 0048 02FB03F3 	 mul r3,r2,r3
 1095 004c 184A     	 ldr r2,.L26
 1096 004e 82FB0312 	 smull r1,r2,r2,r3
 1097 0052 1213     	 asrs r2,r2,#12
 1098 0054 DB17     	 asrs r3,r3,#31
 1099 0056 D31A     	 subs r3,r2,r3
 1100 0058 FB60     	 str r3,[r7,#12]
  96:../variables.h ****     handle->y = (handle->kP * err / 10000) + temp_ki_buff;
 1101              	 .loc 10 96 0
 1102 005a 7B68     	 ldr r3,[r7,#4]
 1103 005c 1B88     	 ldrh r3,[r3]
 1104 005e 1A46     	 mov r2,r3
 1105 0060 3B68     	 ldr r3,[r7]
 1106 0062 03FB02F3 	 mul r3,r3,r2
 1107 0066 124A     	 ldr r2,.L26
 1108 0068 82FB0312 	 smull r1,r2,r2,r3
 1109 006c 1213     	 asrs r2,r2,#12
 1110 006e DB17     	 asrs r3,r3,#31
 1111 0070 D21A     	 subs r2,r2,r3
 1112 0072 FB68     	 ldr r3,[r7,#12]
 1113 0074 1A44     	 add r2,r2,r3
 1114 0076 7B68     	 ldr r3,[r7,#4]
 1115 0078 DA60     	 str r2,[r3,#12]
  97:../variables.h ****     if(handle->y >= handle->y_max)
 1116              	 .loc 10 97 0
 1117 007a 7B68     	 ldr r3,[r7,#4]
 1118 007c DA68     	 ldr r2,[r3,#12]
 1119 007e 7B68     	 ldr r3,[r7,#4]
 1120 0080 5B68     	 ldr r3,[r3,#4]
 1121 0082 9A42     	 cmp r2,r3
 1122 0084 04DB     	 blt .L24
  98:../variables.h ****         handle->y = handle->y_max;
 1123              	 .loc 10 98 0
 1124 0086 7B68     	 ldr r3,[r7,#4]
 1125 0088 5A68     	 ldr r2,[r3,#4]
 1126 008a 7B68     	 ldr r3,[r7,#4]
 1127 008c DA60     	 str r2,[r3,#12]
 1128 008e 09E0     	 b .L21
 1129              	.L24:
  99:../variables.h ****     else if (handle->y <= handle->y_min)
 1130              	 .loc 10 99 0
 1131 0090 7B68     	 ldr r3,[r7,#4]
 1132 0092 DA68     	 ldr r2,[r3,#12]
 1133 0094 7B68     	 ldr r3,[r7,#4]
 1134 0096 9B68     	 ldr r3,[r3,#8]
 1135 0098 9A42     	 cmp r2,r3
 1136 009a 03DC     	 bgt .L21
 100:../variables.h ****         handle->y = handle->y_min;
 1137              	 .loc 10 100 0
 1138 009c 7B68     	 ldr r3,[r7,#4]
 1139 009e 9A68     	 ldr r2,[r3,#8]
 1140 00a0 7B68     	 ldr r3,[r7,#4]
 1141 00a2 DA60     	 str r2,[r3,#12]
 1142              	.L21:
 101:../variables.h **** }
 1143              	 .loc 10 101 0
 1144 00a4 1437     	 adds r7,r7,#20
 1145              	.LCFI85:
 1146              	 .cfi_def_cfa_offset 4
 1147 00a6 BD46     	 mov sp,r7
 1148              	.LCFI86:
 1149              	 .cfi_def_cfa_register 13
 1150              	 
 1151 00a8 5DF8047B 	 ldr r7,[sp],#4
 1152              	.LCFI87:
 1153              	 .cfi_restore 7
 1154              	 .cfi_def_cfa_offset 0
 1155 00ac 7047     	 bx lr
 1156              	.L27:
 1157 00ae 00BF     	 .align 2
 1158              	.L26:
 1159 00b0 AD8BDB68 	 .word 1759218605
 1160              	 .cfi_endproc
 1161              	.LFE551:
 1163              	 .section .text.RS_Init,"ax",%progbits
 1164              	 .align 2
 1165              	 .global RS_Init
 1166              	 .thumb
 1167              	 .thumb_func
 1169              	RS_Init:
 1170              	.LFB552:
 102:../variables.h **** 
 103:../variables.h **** void RS_Init(void)		//Communications initialization function
 104:../variables.h **** {
 1171              	 .loc 10 104 0
 1172              	 .cfi_startproc
 1173              	 
 1174              	 
 1175              	 
 1176 0000 80B4     	 push {r7}
 1177              	.LCFI88:
 1178              	 .cfi_def_cfa_offset 4
 1179              	 .cfi_offset 7,-4
 1180 0002 00AF     	 add r7,sp,#0
 1181              	.LCFI89:
 1182              	 .cfi_def_cfa_register 7
 105:../variables.h **** 	txData[0] = 0xCC; //SOF
 1183              	 .loc 10 105 0
 1184 0004 084B     	 ldr r3,.L29
 1185 0006 CC22     	 movs r2,#204
 1186 0008 1A70     	 strb r2,[r3]
 106:../variables.h **** 	txData[1] = 0xEE;
 1187              	 .loc 10 106 0
 1188 000a 074B     	 ldr r3,.L29
 1189 000c EE22     	 movs r2,#238
 1190 000e 5A70     	 strb r2,[r3,#1]
 107:../variables.h **** 	txData[2] = adress;
 1191              	 .loc 10 107 0
 1192 0010 064B     	 ldr r3,.L29+4
 1193 0012 1A78     	 ldrb r2,[r3]
 1194 0014 044B     	 ldr r3,.L29
 1195 0016 9A70     	 strb r2,[r3,#2]
 108:../variables.h **** 	txData[9] = EOF;
 1196              	 .loc 10 108 0
 1197 0018 034B     	 ldr r3,.L29
 1198 001a DD22     	 movs r2,#221
 1199 001c 5A72     	 strb r2,[r3,#9]
 109:../variables.h **** }
 1200              	 .loc 10 109 0
 1201 001e BD46     	 mov sp,r7
 1202              	.LCFI90:
 1203              	 .cfi_def_cfa_register 13
 1204              	 
 1205 0020 5DF8047B 	 ldr r7,[sp],#4
 1206              	.LCFI91:
 1207              	 .cfi_restore 7
 1208              	 .cfi_def_cfa_offset 0
 1209 0024 7047     	 bx lr
 1210              	.L30:
 1211 0026 00BF     	 .align 2
 1212              	.L29:
 1213 0028 00000000 	 .word txData
 1214 002c 00000000 	 .word adress
 1215              	 .cfi_endproc
 1216              	.LFE552:
 1218              	 .comm tDataZero,4,4
 1219              	 .global t
 1220              	 .section .bss.t,"aw",%nobits
 1221              	 .align 2
 1224              	t:
 1225 0000 00000000 	 .space 4
 1226              	 .section .text.main,"ax",%progbits
 1227              	 .align 2
 1228              	 .global main
 1229              	 .thumb
 1230              	 .thumb_func
 1232              	main:
 1233              	.LFB553:
 1234              	 .file 11 "../main.c"
   1:../main.c     **** 
   2:../main.c     **** #include <math.h>
   3:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
   4:../main.c     **** #include "variables.h"
   5:../main.c     **** 
   6:../main.c     **** #define ONESEC 100U
   7:../main.c     **** 
   8:../main.c     **** uint8_t tDataZero[4];
   9:../main.c     **** 
  10:../main.c     **** void SYS1(void);
  11:../main.c     **** void SYS2(void);
  12:../main.c     **** void LiczeniePradu(void);
  13:../main.c     **** int32_t sqrtI2I(int32_t);
  14:../main.c     **** void ADC_Pomiary(void);
  15:../main.c     **** void ADC_START(void);
  16:../main.c     **** void DRV_START(void);
  17:../main.c     **** void XMC_Init(void);
  18:../main.c     **** void enkoder(void);
  19:../main.c     **** void interpreter_wiadomosci(void);
  20:../main.c     **** void delay(uint32_t);
  21:../main.c     **** float t = 0.0f;
  22:../main.c     **** int main(void)
  23:../main.c     **** {
 1235              	 .loc 11 23 0
 1236              	 .cfi_startproc
 1237              	 
 1238              	 
 1239 0000 80B5     	 push {r7,lr}
 1240              	.LCFI92:
 1241              	 .cfi_def_cfa_offset 8
 1242              	 .cfi_offset 7,-8
 1243              	 .cfi_offset 14,-4
 1244 0002 84B0     	 sub sp,sp,#16
 1245              	.LCFI93:
 1246              	 .cfi_def_cfa_offset 24
 1247 0004 00AF     	 add r7,sp,#0
 1248              	.LCFI94:
 1249              	 .cfi_def_cfa_register 7
  24:../main.c     **** 
  25:../main.c     **** 	tData[0] = 0x3F;
 1250              	 .loc 11 25 0
 1251 0006 424B     	 ldr r3,.L35
 1252 0008 3F22     	 movs r2,#63
 1253 000a 1A70     	 strb r2,[r3]
  26:../main.c     **** 	tData[1] = 0xFF;
 1254              	 .loc 11 26 0
 1255 000c 404B     	 ldr r3,.L35
 1256 000e FF22     	 movs r2,#255
 1257 0010 5A70     	 strb r2,[r3,#1]
  27:../main.c     **** 
  28:../main.c     **** 	PI_Id.kP = 1;
 1258              	 .loc 11 28 0
 1259 0012 404B     	 ldr r3,.L35+4
 1260 0014 0122     	 movs r2,#1
 1261 0016 1A80     	 strh r2,[r3]
  29:../main.c     **** 	PI_Id.kI = 1;		//ki = .ki / 1000
 1262              	 .loc 11 29 0
 1263 0018 3E4B     	 ldr r3,.L35+4
 1264 001a 0122     	 movs r2,#1
 1265 001c 5A80     	 strh r2,[r3,#2]
  30:../main.c     **** 	PI_Id.y_max = 20584;
 1266              	 .loc 11 30 0
 1267 001e 3D4B     	 ldr r3,.L35+4
 1268 0020 45F26802 	 movw r2,#20584
 1269 0024 5A60     	 str r2,[r3,#4]
  31:../main.c     **** 	PI_Id.y_min = -20584;
 1270              	 .loc 11 31 0
 1271 0026 3B4B     	 ldr r3,.L35+4
 1272 0028 3B4A     	 ldr r2,.L35+8
 1273 002a 9A60     	 str r2,[r3,#8]
  32:../main.c     **** 	PI_Id.buff_max = 3000;
 1274              	 .loc 11 32 0
 1275 002c 394B     	 ldr r3,.L35+4
 1276 002e 40F6B832 	 movw r2,#3000
 1277 0032 5A61     	 str r2,[r3,#20]
  33:../main.c     **** 	PI_Id.buff_min = -30000;
 1278              	 .loc 11 33 0
 1279 0034 374B     	 ldr r3,.L35+4
 1280 0036 394A     	 ldr r2,.L35+12
 1281 0038 9A61     	 str r2,[r3,#24]
  34:../main.c     **** 
  35:../main.c     **** 	PI_Iq.kP =	1;
 1282              	 .loc 11 35 0
 1283 003a 394B     	 ldr r3,.L35+16
 1284 003c 0122     	 movs r2,#1
 1285 003e 1A80     	 strh r2,[r3]
  36:../main.c     **** 	PI_Iq.kI = 1;		//ki = .ki / 1000
 1286              	 .loc 11 36 0
 1287 0040 374B     	 ldr r3,.L35+16
 1288 0042 0122     	 movs r2,#1
 1289 0044 5A80     	 strh r2,[r3,#2]
  37:../main.c     **** 	PI_Iq.y_max = 20384;
 1290              	 .loc 11 37 0
 1291 0046 364B     	 ldr r3,.L35+16
 1292 0048 44F6A072 	 movw r2,#20384
 1293 004c 5A60     	 str r2,[r3,#4]
  38:../main.c     **** 	PI_Iq.y_min = -20384;
 1294              	 .loc 11 38 0
 1295 004e 344B     	 ldr r3,.L35+16
 1296 0050 344A     	 ldr r2,.L35+20
 1297 0052 9A60     	 str r2,[r3,#8]
  39:../main.c     **** 	PI_Iq.buff_max = 30000;
 1298              	 .loc 11 39 0
 1299 0054 324B     	 ldr r3,.L35+16
 1300 0056 47F23052 	 movw r2,#30000
 1301 005a 5A61     	 str r2,[r3,#20]
  40:../main.c     **** 	PI_Iq.buff_min = -30000;
 1302              	 .loc 11 40 0
 1303 005c 304B     	 ldr r3,.L35+16
 1304 005e 2F4A     	 ldr r2,.L35+12
 1305 0060 9A61     	 str r2,[r3,#24]
  41:../main.c     **** 
  42:../main.c     ****   DAVE_STATUS_t status;
  43:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1306              	 .loc 11 43 0
 1307 0062 FFF7FEFF 	 bl DAVE_Init
 1308 0066 0346     	 mov r3,r0
 1309 0068 FB72     	 strb r3,[r7,#11]
  44:../main.c     ****   status = (UART_STATUS_t)UART_Init(&UART_0);
 1310              	 .loc 11 44 0
 1311 006a 2F48     	 ldr r0,.L35+24
 1312 006c FFF7FEFF 	 bl UART_Init
 1313 0070 0346     	 mov r3,r0
 1314 0072 FB72     	 strb r3,[r7,#11]
  45:../main.c     ****   uint32_t SYS1_Id = SYSTIMER_CreateTimer(120U, SYSTIMER_MODE_PERIODIC, (void*)SYS1, NULL);
 1315              	 .loc 11 45 0
 1316 0074 7820     	 movs r0,#120
 1317 0076 0121     	 movs r1,#1
 1318 0078 2C4A     	 ldr r2,.L35+28
 1319 007a 0023     	 movs r3,#0
 1320 007c FFF7FEFF 	 bl SYSTIMER_CreateTimer
 1321 0080 7860     	 str r0,[r7,#4]
  46:../main.c     ****   uint32_t SYS2_V = SYSTIMER_CreateTimer(1000U, SYSTIMER_MODE_PERIODIC, (void*)SYS2, NULL);
 1322              	 .loc 11 46 0
 1323 0082 4FF47A70 	 mov r0,#1000
 1324 0086 0121     	 movs r1,#1
 1325 0088 294A     	 ldr r2,.L35+32
 1326 008a 0023     	 movs r3,#0
 1327 008c FFF7FEFF 	 bl SYSTIMER_CreateTimer
 1328 0090 3860     	 str r0,[r7]
  47:../main.c     ****   DIGITAL_IO_SetOutputHigh(&SIGNAL);
 1329              	 .loc 11 47 0
 1330 0092 2848     	 ldr r0,.L35+36
 1331 0094 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1332              	.LBB2:
  48:../main.c     ****   for(uint32_t i =0; i < 1000000; i++);
 1333              	 .loc 11 48 0
 1334 0098 0023     	 movs r3,#0
 1335 009a FB60     	 str r3,[r7,#12]
 1336 009c 02E0     	 b .L32
 1337              	.L33:
 1338              	 .loc 11 48 0 is_stmt 0 discriminator 3
 1339 009e FB68     	 ldr r3,[r7,#12]
 1340 00a0 0133     	 adds r3,r3,#1
 1341 00a2 FB60     	 str r3,[r7,#12]
 1342              	.L32:
 1343              	 .loc 11 48 0 discriminator 1
 1344 00a4 FB68     	 ldr r3,[r7,#12]
 1345 00a6 244A     	 ldr r2,.L35+40
 1346 00a8 9342     	 cmp r3,r2
 1347 00aa F8D9     	 bls .L33
 1348              	.LBE2:
  49:../main.c     ****   DIGITAL_IO_SetOutputLow(&SIGNAL);
 1349              	 .loc 11 49 0 is_stmt 1
 1350 00ac 2148     	 ldr r0,.L35+36
 1351 00ae FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
  50:../main.c     ****   XMC_Init();
 1352              	 .loc 11 50 0
 1353 00b2 FFF7FEFF 	 bl XMC_Init
  51:../main.c     **** 
  52:../main.c     ****   //DRV setup
  53:../main.c     ****   SPI_MASTER_Init(&SPI_enkoder);
 1354              	 .loc 11 53 0
 1355 00b6 2148     	 ldr r0,.L35+44
 1356 00b8 FFF7FEFF 	 bl SPI_MASTER_Init
  54:../main.c     ****   DAC_Enable(&ANALOG);
 1357              	 .loc 11 54 0
 1358 00bc 2048     	 ldr r0,.L35+48
 1359 00be FFF7FEFF 	 bl DAC_Enable
  55:../main.c     ****   DAC_Enable(&ANALOG2);
 1360              	 .loc 11 55 0
 1361 00c2 2048     	 ldr r0,.L35+52
 1362 00c4 FFF7FEFF 	 bl DAC_Enable
  56:../main.c     **** 
  57:../main.c     **** 	PWM_SVM_Start(&SVPWM);
 1363              	 .loc 11 57 0
 1364 00c8 1F48     	 ldr r0,.L35+56
 1365 00ca FFF7FEFF 	 bl PWM_SVM_Start
  58:../main.c     **** 
  59:../main.c     **** 	PWM_SVM_SVMUpdate(&SVPWM, 0,0);
 1366              	 .loc 11 59 0
 1367 00ce 1E48     	 ldr r0,.L35+56
 1368 00d0 0021     	 movs r1,#0
 1369 00d2 0022     	 movs r2,#0
 1370 00d4 FFF7FEFF 	 bl PWM_SVM_SVMUpdate
  60:../main.c     **** 
  61:../main.c     **** 	DRV_START();
 1371              	 .loc 11 61 0
 1372 00d8 FFF7FEFF 	 bl DRV_START
  62:../main.c     **** 
  63:../main.c     **** 	XMC_SPI_CH_ConfigureShiftClockOutput(SPI_enkoder.channel, XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 1373              	 .loc 11 63 0
 1374 00dc 174B     	 ldr r3,.L35+44
 1375 00de 1B68     	 ldr r3,[r3]
 1376 00e0 1846     	 mov r0,r3
 1377 00e2 0021     	 movs r1,#0
 1378 00e4 0022     	 movs r2,#0
 1379 00e6 FFF7FEFF 	 bl XMC_SPI_CH_ConfigureShiftClockOutput
  64:../main.c     ****   	SPI_MASTER_DisableSlaveSelectSignal(&SPI_enkoder);
 1380              	 .loc 11 64 0
 1381 00ea 1448     	 ldr r0,.L35+44
 1382 00ec FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  65:../main.c     **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_enkoder, SPI_MASTER_SS_SIGNAL_0);
 1383              	 .loc 11 65 0
 1384 00f0 1248     	 ldr r0,.L35+44
 1385 00f2 0021     	 movs r1,#0
 1386 00f4 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  66:../main.c     **** 
  67:../main.c     **** 	enkoder();															///zeby poprawnie liczyc kat absolutny kat_enkoder nie moze byc = 0 na po
 1387              	 .loc 11 67 0
 1388 00f8 FFF7FEFF 	 bl enkoder
  68:../main.c     **** 	kat_enkoder_poprzedni = kat_enkoder;
 1389              	 .loc 11 68 0
 1390 00fc 134B     	 ldr r3,.L35+60
 1391 00fe 1A88     	 ldrh r2,[r3]
 1392 0100 134B     	 ldr r3,.L35+64
 1393 0102 1A80     	 strh r2,[r3]
  69:../main.c     **** 	SYSTIMER_StartTimer(SYS2_V);
 1394              	 .loc 11 69 0
 1395 0104 3868     	 ldr r0,[r7]
 1396 0106 FFF7FEFF 	 bl SYSTIMER_StartTimer
 1397              	.L34:
  70:../main.c     **** 
  71:../main.c     ****   while(1U)
  72:../main.c     ****   {
  73:../main.c     **** 	  SYS1();
 1398              	 .loc 11 73 0 discriminator 1
 1399 010a FFF7FEFF 	 bl SYS1
  74:../main.c     ****   }
 1400              	 .loc 11 74 0 discriminator 1
 1401 010e FCE7     	 b .L34
 1402              	.L36:
 1403              	 .align 2
 1404              	.L35:
 1405 0110 00000000 	 .word tData
 1406 0114 00000000 	 .word PI_Id
 1407 0118 98AFFFFF 	 .word -20584
 1408 011c D08AFFFF 	 .word -30000
 1409 0120 00000000 	 .word PI_Iq
 1410 0124 60B0FFFF 	 .word -20384
 1411 0128 00000000 	 .word UART_0
 1412 012c 00000000 	 .word SYS1
 1413 0130 00000000 	 .word SYS2
 1414 0134 00000000 	 .word SIGNAL
 1415 0138 3F420F00 	 .word 999999
 1416 013c 00000000 	 .word SPI_enkoder
 1417 0140 00000000 	 .word ANALOG
 1418 0144 00000000 	 .word ANALOG2
 1419 0148 00000000 	 .word SVPWM
 1420 014c 00000000 	 .word kat_enkoder
 1421 0150 00000000 	 .word kat_enkoder_poprzedni
 1422              	 .cfi_endproc
 1423              	.LFE553:
 1425              	 .comm uchyb,4,4
 1426              	 .section .text.SYS2,"ax",%progbits
 1427              	 .align 2
 1428              	 .global SYS2
 1429              	 .thumb
 1430              	 .thumb_func
 1432              	SYS2:
 1433              	.LFB554:
  75:../main.c     **** }
  76:../main.c     **** int32_t uchyb;
  77:../main.c     **** void SYS2(void)
  78:../main.c     **** {
 1434              	 .loc 11 78 0
 1435              	 .cfi_startproc
 1436              	 
 1437              	 
 1438              	 
 1439 0000 80B4     	 push {r7}
 1440              	.LCFI95:
 1441              	 .cfi_def_cfa_offset 4
 1442              	 .cfi_offset 7,-4
 1443 0002 85B0     	 sub sp,sp,#20
 1444              	.LCFI96:
 1445              	 .cfi_def_cfa_offset 24
 1446 0004 00AF     	 add r7,sp,#0
 1447              	.LCFI97:
 1448              	 .cfi_def_cfa_register 7
  79:../main.c     **** 	uint16_t kat_enkoder_obecny = kat_enkoder;
 1449              	 .loc 11 79 0
 1450 0006 4B4B     	 ldr r3,.L49
 1451 0008 1B88     	 ldrh r3,[r3]
 1452 000a 7B81     	 strh r3,[r7,#10]
  80:../main.c     **** 	int32_t predkosc_nowa = 0;
 1453              	 .loc 11 80 0
 1454 000c 0023     	 movs r3,#0
 1455 000e FB60     	 str r3,[r7,#12]
  81:../main.c     **** 	if( kat_enkoder_obecny > kat_enkoder_poprzedni)
 1456              	 .loc 11 81 0
 1457 0010 494B     	 ldr r3,.L49+4
 1458 0012 1B88     	 ldrh r3,[r3]
 1459 0014 7A89     	 ldrh r2,[r7,#10]
 1460 0016 9A42     	 cmp r2,r3
 1461 0018 05D9     	 bls .L38
  82:../main.c     **** 		predkosc_nowa = kat_enkoder_obecny - kat_enkoder_poprzedni;
 1462              	 .loc 11 82 0
 1463 001a 7B89     	 ldrh r3,[r7,#10]
 1464 001c 464A     	 ldr r2,.L49+4
 1465 001e 1288     	 ldrh r2,[r2]
 1466 0020 9B1A     	 subs r3,r3,r2
 1467 0022 FB60     	 str r3,[r7,#12]
 1468 0024 07E0     	 b .L39
 1469              	.L38:
  83:../main.c     **** 	else
  84:../main.c     **** 		predkosc_nowa = UINT16_MAX - kat_enkoder_poprzedni + kat_enkoder_obecny;
 1470              	 .loc 11 84 0
 1471 0026 444B     	 ldr r3,.L49+4
 1472 0028 1B88     	 ldrh r3,[r3]
 1473 002a C3F57F43 	 rsb r3,r3,#65280
 1474 002e FF33     	 adds r3,r3,#255
 1475 0030 7A89     	 ldrh r2,[r7,#10]
 1476 0032 1344     	 add r3,r3,r2
 1477 0034 FB60     	 str r3,[r7,#12]
 1478              	.L39:
  85:../main.c     **** 
  86:../main.c     **** 	predkosc_enkoder = predkosc_nowa;
 1479              	 .loc 11 86 0
 1480 0036 FB68     	 ldr r3,[r7,#12]
 1481 0038 9AB2     	 uxth r2,r3
 1482 003a 404B     	 ldr r3,.L49+8
 1483 003c 1A80     	 strh r2,[r3]
  87:../main.c     **** 
  88:../main.c     **** 	if(predkosc_enkoder < 0)
 1484              	 .loc 11 88 0
 1485 003e 3F4B     	 ldr r3,.L49+8
 1486 0040 1B88     	 ldrh r3,[r3]
 1487 0042 1BB2     	 sxth r3,r3
 1488 0044 002B     	 cmp r3,#0
 1489 0046 07DA     	 bge .L40
  89:../main.c     **** 		predkosc_enkoder=-predkosc_enkoder;
 1490              	 .loc 11 89 0
 1491 0048 3C4B     	 ldr r3,.L49+8
 1492 004a 1B88     	 ldrh r3,[r3]
 1493 004c 9BB2     	 uxth r3,r3
 1494 004e 5B42     	 negs r3,r3
 1495 0050 9BB2     	 uxth r3,r3
 1496 0052 9AB2     	 uxth r2,r3
 1497 0054 394B     	 ldr r3,.L49+8
 1498 0056 1A80     	 strh r2,[r3]
 1499              	.L40:
  90:../main.c     **** 
  91:../main.c     **** 
  92:../main.c     **** 	if(kat_enkoder_obecny == 0 || kat_enkoder_poprzedni == 0)
 1500              	 .loc 11 92 0
 1501 0058 7B89     	 ldrh r3,[r7,#10]
 1502 005a 002B     	 cmp r3,#0
 1503 005c 03D0     	 beq .L41
 1504              	 .loc 11 92 0 is_stmt 0 discriminator 1
 1505 005e 364B     	 ldr r3,.L49+4
 1506 0060 1B88     	 ldrh r3,[r3]
 1507 0062 002B     	 cmp r3,#0
 1508 0064 03D1     	 bne .L42
 1509              	.L41:
  93:../main.c     **** 	{
  94:../main.c     **** 		kat_enkoder_poprzedni = kat_enkoder_obecny;
 1510              	 .loc 11 94 0 is_stmt 1
 1511 0066 344A     	 ldr r2,.L49+4
 1512 0068 7B89     	 ldrh r3,[r7,#10]
 1513 006a 1380     	 strh r3,[r2]
  95:../main.c     **** 		return;
 1514              	 .loc 11 95 0
 1515 006c 5DE0     	 b .L37
 1516              	.L42:
  96:../main.c     **** 	}
  97:../main.c     **** 
  98:../main.c     **** 	int32_t dFi =0;
 1517              	 .loc 11 98 0
 1518 006e 0023     	 movs r3,#0
 1519 0070 7B60     	 str r3,[r7,#4]
  99:../main.c     **** 	if(kat_enkoder_obecny > kat_enkoder_poprzedni)
 1520              	 .loc 11 99 0
 1521 0072 314B     	 ldr r3,.L49+4
 1522 0074 1B88     	 ldrh r3,[r3]
 1523 0076 7A89     	 ldrh r2,[r7,#10]
 1524 0078 9A42     	 cmp r2,r3
 1525 007a 29D9     	 bls .L44
 100:../main.c     **** 	{
 101:../main.c     **** 		dFi = kat_enkoder_obecny-kat_enkoder_poprzedni;
 1526              	 .loc 11 101 0
 1527 007c 7B89     	 ldrh r3,[r7,#10]
 1528 007e 2E4A     	 ldr r2,.L49+4
 1529 0080 1288     	 ldrh r2,[r2]
 1530 0082 9B1A     	 subs r3,r3,r2
 1531 0084 7B60     	 str r3,[r7,#4]
 102:../main.c     **** 		if(dFi > 10400)
 1532              	 .loc 11 102 0
 1533 0086 7B68     	 ldr r3,[r7,#4]
 1534 0088 42F6A002 	 movw r2,#10400
 1535 008c 9342     	 cmp r3,r2
 1536 008e 13DD     	 ble .L45
 103:../main.c     **** 			{
 104:../main.c     **** 			dFi = UINT16_MAX - kat_enkoder_obecny + kat_enkoder_poprzedni;
 1537              	 .loc 11 104 0
 1538 0090 7B89     	 ldrh r3,[r7,#10]
 1539 0092 C3F57F43 	 rsb r3,r3,#65280
 1540 0096 FF33     	 adds r3,r3,#255
 1541 0098 274A     	 ldr r2,.L49+4
 1542 009a 1288     	 ldrh r2,[r2]
 1543 009c 1344     	 add r3,r3,r2
 1544 009e 7B60     	 str r3,[r7,#4]
 105:../main.c     **** 			kat_absolutny += znak * dFi;
 1545              	 .loc 11 105 0
 1546 00a0 274B     	 ldr r3,.L49+12
 1547 00a2 1B78     	 ldrb r3,[r3]
 1548 00a4 5BB2     	 sxtb r3,r3
 1549 00a6 7A68     	 ldr r2,[r7,#4]
 1550 00a8 02FB03F2 	 mul r2,r2,r3
 1551 00ac 254B     	 ldr r3,.L49+16
 1552 00ae 1B68     	 ldr r3,[r3]
 1553 00b0 1344     	 add r3,r3,r2
 1554 00b2 244A     	 ldr r2,.L49+16
 1555 00b4 1360     	 str r3,[r2]
 1556 00b6 35E0     	 b .L47
 1557              	.L45:
 106:../main.c     **** 			}
 107:../main.c     **** 		else
 108:../main.c     **** 		{
 109:../main.c     **** 			kat_absolutny -= znak * dFi;
 1558              	 .loc 11 109 0
 1559 00b8 224B     	 ldr r3,.L49+16
 1560 00ba 1A68     	 ldr r2,[r3]
 1561 00bc 204B     	 ldr r3,.L49+12
 1562 00be 1B78     	 ldrb r3,[r3]
 1563 00c0 5BB2     	 sxtb r3,r3
 1564 00c2 7968     	 ldr r1,[r7,#4]
 1565 00c4 01FB03F3 	 mul r3,r1,r3
 1566 00c8 D31A     	 subs r3,r2,r3
 1567 00ca 1E4A     	 ldr r2,.L49+16
 1568 00cc 1360     	 str r3,[r2]
 1569 00ce 29E0     	 b .L47
 1570              	.L44:
 110:../main.c     **** 		}
 111:../main.c     **** 	}
 112:../main.c     **** 	else
 113:../main.c     **** 	{
 114:../main.c     **** 		dFi =kat_enkoder_poprzedni - kat_enkoder_obecny;
 1571              	 .loc 11 114 0
 1572 00d0 194B     	 ldr r3,.L49+4
 1573 00d2 1B88     	 ldrh r3,[r3]
 1574 00d4 1A46     	 mov r2,r3
 1575 00d6 7B89     	 ldrh r3,[r7,#10]
 1576 00d8 D31A     	 subs r3,r2,r3
 1577 00da 7B60     	 str r3,[r7,#4]
 115:../main.c     **** 		if(dFi > 10400)
 1578              	 .loc 11 115 0
 1579 00dc 7B68     	 ldr r3,[r7,#4]
 1580 00de 42F6A002 	 movw r2,#10400
 1581 00e2 9342     	 cmp r3,r2
 1582 00e4 13DD     	 ble .L48
 116:../main.c     **** 		{
 117:../main.c     **** 			dFi = UINT16_MAX - kat_enkoder_poprzedni + kat_enkoder_obecny;
 1583              	 .loc 11 117 0
 1584 00e6 144B     	 ldr r3,.L49+4
 1585 00e8 1B88     	 ldrh r3,[r3]
 1586 00ea C3F57F43 	 rsb r3,r3,#65280
 1587 00ee FF33     	 adds r3,r3,#255
 1588 00f0 7A89     	 ldrh r2,[r7,#10]
 1589 00f2 1344     	 add r3,r3,r2
 1590 00f4 7B60     	 str r3,[r7,#4]
 118:../main.c     **** 		kat_absolutny -=znak * dFi;
 1591              	 .loc 11 118 0
 1592 00f6 134B     	 ldr r3,.L49+16
 1593 00f8 1A68     	 ldr r2,[r3]
 1594 00fa 114B     	 ldr r3,.L49+12
 1595 00fc 1B78     	 ldrb r3,[r3]
 1596 00fe 5BB2     	 sxtb r3,r3
 1597 0100 7968     	 ldr r1,[r7,#4]
 1598 0102 01FB03F3 	 mul r3,r1,r3
 1599 0106 D31A     	 subs r3,r2,r3
 1600 0108 0E4A     	 ldr r2,.L49+16
 1601 010a 1360     	 str r3,[r2]
 1602 010c 0AE0     	 b .L47
 1603              	.L48:
 119:../main.c     **** 	}
 120:../main.c     **** 		else
 121:../main.c     **** 		{
 122:../main.c     **** 			kat_absolutny += znak * dFi;
 1604              	 .loc 11 122 0
 1605 010e 0C4B     	 ldr r3,.L49+12
 1606 0110 1B78     	 ldrb r3,[r3]
 1607 0112 5BB2     	 sxtb r3,r3
 1608 0114 7A68     	 ldr r2,[r7,#4]
 1609 0116 02FB03F2 	 mul r2,r2,r3
 1610 011a 0A4B     	 ldr r3,.L49+16
 1611 011c 1B68     	 ldr r3,[r3]
 1612 011e 1344     	 add r3,r3,r2
 1613 0120 084A     	 ldr r2,.L49+16
 1614 0122 1360     	 str r3,[r2]
 1615              	.L47:
 123:../main.c     **** 		}
 124:../main.c     **** 	}
 125:../main.c     **** 
 126:../main.c     **** 	kat_enkoder_poprzedni = kat_enkoder_obecny;
 1616              	 .loc 11 126 0
 1617 0124 044A     	 ldr r2,.L49+4
 1618 0126 7B89     	 ldrh r3,[r7,#10]
 1619 0128 1380     	 strh r3,[r2]
 1620              	.L37:
 127:../main.c     **** }
 1621              	 .loc 11 127 0
 1622 012a 1437     	 adds r7,r7,#20
 1623              	.LCFI98:
 1624              	 .cfi_def_cfa_offset 4
 1625 012c BD46     	 mov sp,r7
 1626              	.LCFI99:
 1627              	 .cfi_def_cfa_register 13
 1628              	 
 1629 012e 5DF8047B 	 ldr r7,[sp],#4
 1630              	.LCFI100:
 1631              	 .cfi_restore 7
 1632              	 .cfi_def_cfa_offset 0
 1633 0132 7047     	 bx lr
 1634              	.L50:
 1635              	 .align 2
 1636              	.L49:
 1637 0134 00000000 	 .word kat_enkoder
 1638 0138 00000000 	 .word kat_enkoder_poprzedni
 1639 013c 00000000 	 .word predkosc_enkoder
 1640 0140 00000000 	 .word znak
 1641 0144 00000000 	 .word kat_absolutny
 1642              	 .cfi_endproc
 1643              	.LFE554:
 1645              	 .section .text.enkoder,"ax",%progbits
 1646              	 .align 2
 1647              	 .global enkoder
 1648              	 .thumb
 1649              	 .thumb_func
 1651              	enkoder:
 1652              	.LFB555:
 128:../main.c     **** void enkoder(void)
 129:../main.c     **** {
 1653              	 .loc 11 129 0
 1654              	 .cfi_startproc
 1655              	 
 1656              	 
 1657 0000 80B5     	 push {r7,lr}
 1658              	.LCFI101:
 1659              	 .cfi_def_cfa_offset 8
 1660              	 .cfi_offset 7,-8
 1661              	 .cfi_offset 14,-4
 1662 0002 82B0     	 sub sp,sp,#8
 1663              	.LCFI102:
 1664              	 .cfi_def_cfa_offset 16
 1665 0004 00AF     	 add r7,sp,#0
 1666              	.LCFI103:
 1667              	 .cfi_def_cfa_register 7
 130:../main.c     **** 	SPI_MASTER_Transfer(&SPI_enkoder, tData, rData,  2);
 1668              	 .loc 11 130 0
 1669 0006 1148     	 ldr r0,.L53
 1670 0008 1149     	 ldr r1,.L53+4
 1671 000a 124A     	 ldr r2,.L53+8
 1672 000c 0223     	 movs r3,#2
 1673 000e FFF7FEFF 	 bl SPI_MASTER_Transfer
 131:../main.c     **** 	while(SPI_MASTER_IsRxBusy(&SPI_enkoder));
 1674              	 .loc 11 131 0
 1675 0012 00BF     	 nop
 1676              	.L52:
 1677              	 .loc 11 131 0 is_stmt 0 discriminator 1
 1678 0014 0D48     	 ldr r0,.L53
 1679 0016 FFF7FEFF 	 bl SPI_MASTER_IsRxBusy
 1680 001a 0346     	 mov r3,r0
 1681 001c 002B     	 cmp r3,#0
 1682 001e F9D1     	 bne .L52
 132:../main.c     **** 	uint16_t result = rData[0]<<8 | rData[1];
 1683              	 .loc 11 132 0 is_stmt 1
 1684 0020 0C4B     	 ldr r3,.L53+8
 1685 0022 1B78     	 ldrb r3,[r3]
 1686 0024 1B02     	 lsls r3,r3,#8
 1687 0026 9AB2     	 uxth r2,r3
 1688 0028 0A4B     	 ldr r3,.L53+8
 1689 002a 5B78     	 ldrb r3,[r3,#1]
 1690 002c 9BB2     	 uxth r3,r3
 1691 002e 1343     	 orrs r3,r3,r2
 1692 0030 9BB2     	 uxth r3,r3
 1693 0032 FB80     	 strh r3,[r7,#6]
 133:../main.c     **** 	result &= 0x3FFF;			//Usuwanie bitu parzystkosci i bitu R/W
 1694              	 .loc 11 133 0
 1695 0034 FB88     	 ldrh r3,[r7,#6]
 1696 0036 C3F30D03 	 ubfx r3,r3,#0,#14
 1697 003a FB80     	 strh r3,[r7,#6]
 134:../main.c     **** 
 135:../main.c     **** 	kat_enkoder =result * 4;		//0 - 65535 = 0 - 2PI
 1698              	 .loc 11 135 0
 1699 003c FB88     	 ldrh r3,[r7,#6]
 1700 003e 9B00     	 lsls r3,r3,#2
 1701 0040 9AB2     	 uxth r2,r3
 1702 0042 054B     	 ldr r3,.L53+12
 1703 0044 1A80     	 strh r2,[r3]
 136:../main.c     **** 
 137:../main.c     **** }
 1704              	 .loc 11 137 0
 1705 0046 0837     	 adds r7,r7,#8
 1706              	.LCFI104:
 1707              	 .cfi_def_cfa_offset 8
 1708 0048 BD46     	 mov sp,r7
 1709              	.LCFI105:
 1710              	 .cfi_def_cfa_register 13
 1711              	 
 1712 004a 80BD     	 pop {r7,pc}
 1713              	.L54:
 1714              	 .align 2
 1715              	.L53:
 1716 004c 00000000 	 .word SPI_enkoder
 1717 0050 00000000 	 .word tData
 1718 0054 00000000 	 .word rData
 1719 0058 00000000 	 .word kat_enkoder
 1720              	 .cfi_endproc
 1721              	.LFE555:
 1723              	 .section .text.SYS1,"ax",%progbits
 1724              	 .align 2
 1725              	 .global SYS1
 1726              	 .thumb
 1727              	 .thumb_func
 1729              	SYS1:
 1730              	.LFB556:
 138:../main.c     **** void SYS1(void)
 139:../main.c     **** {
 1731              	 .loc 11 139 0
 1732              	 .cfi_startproc
 1733              	 
 1734              	 
 1735 0000 80B5     	 push {r7,lr}
 1736              	.LCFI106:
 1737              	 .cfi_def_cfa_offset 8
 1738              	 .cfi_offset 7,-8
 1739              	 .cfi_offset 14,-4
 1740 0002 88B0     	 sub sp,sp,#32
 1741              	.LCFI107:
 1742              	 .cfi_def_cfa_offset 40
 1743 0004 00AF     	 add r7,sp,#0
 1744              	.LCFI108:
 1745              	 .cfi_def_cfa_register 7
 140:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&SIGNAL);
 1746              	 .loc 11 140 0
 1747 0006 9848     	 ldr r0,.L62
 1748 0008 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 141:../main.c     **** 	enkoder();
 1749              	 .loc 11 141 0
 1750 000c FFF7FEFF 	 bl enkoder
 142:../main.c     **** 	int32_t kat_elektryczny_temp = 0;
 1751              	 .loc 11 142 0
 1752 0010 0023     	 movs r3,#0
 1753 0012 FB61     	 str r3,[r7,#28]
 143:../main.c     **** 	kat_elektryczny_temp = ((uint32_t)(kat_enkoder * liczba_par_biegunow));
 1754              	 .loc 11 143 0
 1755 0014 954B     	 ldr r3,.L62+4
 1756 0016 1B88     	 ldrh r3,[r3]
 1757 0018 1A46     	 mov r2,r3
 1758 001a 954B     	 ldr r3,.L62+8
 1759 001c 1B78     	 ldrb r3,[r3]
 1760 001e 03FB02F3 	 mul r3,r3,r2
 1761 0022 FB61     	 str r3,[r7,#28]
 144:../main.c     **** 	kat_elektryczny_temp = kat_elektryczny_temp % UINT16_MAX ;
 1762              	 .loc 11 144 0
 1763 0024 FA69     	 ldr r2,[r7,#28]
 1764 0026 934B     	 ldr r3,.L62+12
 1765 0028 82FB0301 	 smull r0,r1,r2,r3
 1766 002c 5318     	 adds r3,r2,r1
 1767 002e D913     	 asrs r1,r3,#15
 1768 0030 D317     	 asrs r3,r2,#31
 1769 0032 C91A     	 subs r1,r1,r3
 1770 0034 0B46     	 mov r3,r1
 1771 0036 1B04     	 lsls r3,r3,#16
 1772 0038 5B1A     	 subs r3,r3,r1
 1773 003a D31A     	 subs r3,r2,r3
 1774 003c FB61     	 str r3,[r7,#28]
 145:../main.c     **** 	kat_elektryczny_temp = kat_elektryczny_temp - INT16_MAX;
 1775              	 .loc 11 145 0
 1776 003e FB69     	 ldr r3,[r7,#28]
 1777 0040 A3F5FF43 	 sub r3,r3,#32640
 1778 0044 7F3B     	 subs r3,r3,#127
 1779 0046 FB61     	 str r3,[r7,#28]
 146:../main.c     **** 	kat_elektryczny = kat_elektryczny_temp + offset_elektryczny;
 1780              	 .loc 11 146 0
 1781 0048 FB69     	 ldr r3,[r7,#28]
 1782 004a 9AB2     	 uxth r2,r3
 1783 004c 8A4B     	 ldr r3,.L62+16
 1784 004e 1B68     	 ldr r3,[r3]
 1785 0050 9BB2     	 uxth r3,r3
 1786 0052 1344     	 add r3,r3,r2
 1787 0054 9BB2     	 uxth r3,r3
 1788 0056 9AB2     	 uxth r2,r3
 1789 0058 884B     	 ldr r3,.L62+20
 1790 005a 1A80     	 strh r2,[r3]
 147:../main.c     **** 
 148:../main.c     **** 	LiczeniePradu();
 1791              	 .loc 11 148 0
 1792 005c FFF7FEFF 	 bl LiczeniePradu
 149:../main.c     **** 	/*
 150:../main.c     **** 	I_beta = MOTOR_LIB_ClarkTransform(iu,iv,&I_alfa);
 151:../main.c     **** 
 152:../main.c     **** 	Id_poprzednie = MOTOR_LIB_ParkTransform(I_alfa, I_beta, kat_elektryczny, &Iq_poprzednie);
 153:../main.c     **** 
 154:../main.c     **** 	Id_poprzednie = -Id_poprzednie;
 155:../main.c     **** 	Iq_poprzednie = -Iq_poprzednie;
 156:../main.c     **** */
 157:../main.c     **** 
 158:../main.c     **** 	//ZADAWANIE MOMENTU
 159:../main.c     **** 
 160:../main.c     **** 	uchyb = poz_zad - kat_absolutny;
 1793              	 .loc 11 160 0
 1794 0060 874B     	 ldr r3,.L62+24
 1795 0062 1B88     	 ldrh r3,[r3]
 1796 0064 1A46     	 mov r2,r3
 1797 0066 874B     	 ldr r3,.L62+28
 1798 0068 1B68     	 ldr r3,[r3]
 1799 006a D31A     	 subs r3,r2,r3
 1800 006c 864A     	 ldr r2,.L62+32
 1801 006e 1360     	 str r3,[r2]
 161:../main.c     **** 	int32_t sila = (ks * uchyb)/1000 - ((kd * predkosc_enkoder)/1000);
 1802              	 .loc 11 161 0
 1803 0070 864B     	 ldr r3,.L62+36
 1804 0072 1B88     	 ldrh r3,[r3]
 1805 0074 1A46     	 mov r2,r3
 1806 0076 844B     	 ldr r3,.L62+32
 1807 0078 1B68     	 ldr r3,[r3]
 1808 007a 03FB02F3 	 mul r3,r3,r2
 1809 007e 844A     	 ldr r2,.L62+40
 1810 0080 82FB0312 	 smull r1,r2,r2,r3
 1811 0084 9211     	 asrs r2,r2,#6
 1812 0086 DB17     	 asrs r3,r3,#31
 1813 0088 D21A     	 subs r2,r2,r3
 1814 008a 824B     	 ldr r3,.L62+44
 1815 008c 1B88     	 ldrh r3,[r3]
 1816 008e 1946     	 mov r1,r3
 1817 0090 814B     	 ldr r3,.L62+48
 1818 0092 1B88     	 ldrh r3,[r3]
 1819 0094 1BB2     	 sxth r3,r3
 1820 0096 03FB01F3 	 mul r3,r3,r1
 1821 009a 7D49     	 ldr r1,.L62+40
 1822 009c 81FB0301 	 smull r0,r1,r1,r3
 1823 00a0 8911     	 asrs r1,r1,#6
 1824 00a2 DB17     	 asrs r3,r3,#31
 1825 00a4 CB1A     	 subs r3,r1,r3
 1826 00a6 D31A     	 subs r3,r2,r3
 1827 00a8 BB61     	 str r3,[r7,#24]
 162:../main.c     **** 	if(sila > 0)
 1828              	 .loc 11 162 0
 1829 00aa BB69     	 ldr r3,[r7,#24]
 1830 00ac 002B     	 cmp r3,#0
 1831 00ae 0ADD     	 ble .L56
 163:../main.c     **** 	{
 164:../main.c     **** 		Vq_zadane = 30000;
 1832              	 .loc 11 164 0
 1833 00b0 7A4B     	 ldr r3,.L62+52
 1834 00b2 47F23052 	 movw r2,#30000
 1835 00b6 1A60     	 str r2,[r3]
 165:../main.c     **** 		Vd_zadane  = 0;
 1836              	 .loc 11 165 0
 1837 00b8 794B     	 ldr r3,.L62+56
 1838 00ba 0022     	 movs r2,#0
 1839 00bc 1A60     	 str r2,[r3]
 166:../main.c     **** 		V_ref = sila;
 1840              	 .loc 11 166 0
 1841 00be BB69     	 ldr r3,[r7,#24]
 1842 00c0 784A     	 ldr r2,.L62+60
 1843 00c2 1360     	 str r3,[r2]
 1844 00c4 0AE0     	 b .L57
 1845              	.L56:
 167:../main.c     **** 	}
 168:../main.c     **** 	else
 169:../main.c     **** 	{
 170:../main.c     **** 		Vq_zadane = -30000;
 1846              	 .loc 11 170 0
 1847 00c6 754B     	 ldr r3,.L62+52
 1848 00c8 774A     	 ldr r2,.L62+64
 1849 00ca 1A60     	 str r2,[r3]
 171:../main.c     **** 		Vd_zadane = 0;
 1850              	 .loc 11 171 0
 1851 00cc 744B     	 ldr r3,.L62+56
 1852 00ce 0022     	 movs r2,#0
 1853 00d0 1A60     	 str r2,[r3]
 172:../main.c     **** 		V_ref = -sila;
 1854              	 .loc 11 172 0
 1855 00d2 BB69     	 ldr r3,[r7,#24]
 1856 00d4 5B42     	 negs r3,r3
 1857 00d6 1A46     	 mov r2,r3
 1858 00d8 724B     	 ldr r3,.L62+60
 1859 00da 1A60     	 str r2,[r3]
 1860              	.L57:
 173:../main.c     **** 	}
 174:../main.c     **** 	if(V_ref > 4200)
 1861              	 .loc 11 174 0
 1862 00dc 714B     	 ldr r3,.L62+60
 1863 00de 1B68     	 ldr r3,[r3]
 1864 00e0 41F26802 	 movw r2,#4200
 1865 00e4 9342     	 cmp r3,r2
 1866 00e6 03D9     	 bls .L58
 175:../main.c     **** 		V_ref = 4200;
 1867              	 .loc 11 175 0
 1868 00e8 6E4B     	 ldr r3,.L62+60
 1869 00ea 41F26802 	 movw r2,#4200
 1870 00ee 1A60     	 str r2,[r3]
 1871              	.L58:
 176:../main.c     **** 
 177:../main.c     **** 	if(kat_absolutny > 40000)
 1872              	 .loc 11 177 0
 1873 00f0 644B     	 ldr r3,.L62+28
 1874 00f2 1B68     	 ldr r3,[r3]
 1875 00f4 49F64042 	 movw r2,#40000
 1876 00f8 9342     	 cmp r3,r2
 1877 00fa 07DD     	 ble .L59
 178:../main.c     **** 		{ V_ref = 4000; Vq_zadane = -30000; }
 1878              	 .loc 11 178 0
 1879 00fc 694B     	 ldr r3,.L62+60
 1880 00fe 4FF47A62 	 mov r2,#4000
 1881 0102 1A60     	 str r2,[r3]
 1882 0104 654B     	 ldr r3,.L62+52
 1883 0106 684A     	 ldr r2,.L62+64
 1884 0108 1A60     	 str r2,[r3]
 1885 010a 0CE0     	 b .L60
 1886              	.L59:
 179:../main.c     **** 	else if ( kat_absolutny < -2000)
 1887              	 .loc 11 179 0
 1888 010c 5D4B     	 ldr r3,.L62+28
 1889 010e 1B68     	 ldr r3,[r3]
 1890 0110 13F5FA6F 	 cmn r3,#2000
 1891 0114 07DA     	 bge .L60
 180:../main.c     **** 		{ V_ref = 4000; Vq_zadane = 30000; }
 1892              	 .loc 11 180 0
 1893 0116 634B     	 ldr r3,.L62+60
 1894 0118 4FF47A62 	 mov r2,#4000
 1895 011c 1A60     	 str r2,[r3]
 1896 011e 5F4B     	 ldr r3,.L62+52
 1897 0120 47F23052 	 movw r2,#30000
 1898 0124 1A60     	 str r2,[r3]
 1899              	.L60:
 181:../main.c     **** 
 182:../main.c     **** /*
 183:../main.c     **** 	uchyb_Id = Id_zadane - Id_poprzednie;
 184:../main.c     **** 	uchyb_Iq = Iq_zadane - Iq_poprzednie;
 185:../main.c     **** 
 186:../main.c     **** 	PI_REG(&PI_Id,uchyb_Id);
 187:../main.c     **** 	PI_REG(&PI_Iq,uchyb_Iq);
 188:../main.c     **** 	Vd_zadane = PI_Id.y;
 189:../main.c     **** 	Vq_zadane = PI_Iq.y;
 190:../main.c     **** */
 191:../main.c     ****   	V_alfa = MOTOR_LIB_IParkTransform(Vd_zadane, Vq_zadane, kat_elektryczny, &V_beta);
 1900              	 .loc 11 191 0
 1901 0126 5E4B     	 ldr r3,.L62+56
 1902 0128 1968     	 ldr r1,[r3]
 1903 012a 5C4B     	 ldr r3,.L62+52
 1904 012c 1A68     	 ldr r2,[r3]
 1905 012e 534B     	 ldr r3,.L62+20
 1906 0130 1B88     	 ldrh r3,[r3]
 1907 0132 1BB2     	 sxth r3,r3
 1908 0134 0846     	 mov r0,r1
 1909 0136 1146     	 mov r1,r2
 1910 0138 1A46     	 mov r2,r3
 1911 013a 5C4B     	 ldr r3,.L62+68
 1912 013c FFF7FEFF 	 bl MOTOR_LIB_IParkTransform
 1913 0140 0246     	 mov r2,r0
 1914 0142 5B4B     	 ldr r3,.L62+72
 1915 0144 1A60     	 str r2,[r3]
 192:../main.c     **** 
 193:../main.c     ****   	uint32_t placeholder = MOTOR_LIB_Car2Pol(V_alfa, V_beta, &angle);
 1916              	 .loc 11 193 0
 1917 0146 5A4B     	 ldr r3,.L62+72
 1918 0148 1A68     	 ldr r2,[r3]
 1919 014a 584B     	 ldr r3,.L62+68
 1920 014c 1B68     	 ldr r3,[r3]
 1921 014e 1046     	 mov r0,r2
 1922 0150 1946     	 mov r1,r3
 1923 0152 584A     	 ldr r2,.L62+76
 1924 0154 FFF7FEFF 	 bl MOTOR_LIB_Car2Pol
 1925 0158 7861     	 str r0,[r7,#20]
 194:../main.c     **** 
 195:../main.c     ****   	angle32 =((int32_t)angle+INT16_MAX) *256;
 1926              	 .loc 11 195 0
 1927 015a 564B     	 ldr r3,.L62+76
 1928 015c 1B88     	 ldrh r3,[r3]
 1929 015e 1BB2     	 sxth r3,r3
 1930 0160 03F5FF43 	 add r3,r3,#32640
 1931 0164 7F33     	 adds r3,r3,#127
 1932 0166 1B02     	 lsls r3,r3,#8
 1933 0168 1A46     	 mov r2,r3
 1934 016a 534B     	 ldr r3,.L62+80
 1935 016c 1A60     	 str r2,[r3]
 196:../main.c     **** 
 197:../main.c     ****   	PWM_SVM_SVMUpdate(&SVPWM, V_ref, angle32);
 1936              	 .loc 11 197 0
 1937 016e 4D4B     	 ldr r3,.L62+60
 1938 0170 1B68     	 ldr r3,[r3]
 1939 0172 9AB2     	 uxth r2,r3
 1940 0174 504B     	 ldr r3,.L62+80
 1941 0176 1B68     	 ldr r3,[r3]
 1942 0178 5048     	 ldr r0,.L62+84
 1943 017a 1146     	 mov r1,r2
 1944 017c 1A46     	 mov r2,r3
 1945 017e FFF7FEFF 	 bl PWM_SVM_SVMUpdate
 198:../main.c     **** 
 199:../main.c     ****   	int32_t Ix = ((iw - iv) * 56775) / UINT16_MAX;
 1946              	 .loc 11 199 0
 1947 0182 4F4B     	 ldr r3,.L62+88
 1948 0184 1A68     	 ldr r2,[r3]
 1949 0186 4F4B     	 ldr r3,.L62+92
 1950 0188 1B68     	 ldr r3,[r3]
 1951 018a D31A     	 subs r3,r2,r3
 1952 018c 4DF6C752 	 movw r2,#56775
 1953 0190 02FB03F3 	 mul r3,r2,r3
 1954 0194 374A     	 ldr r2,.L62+12
 1955 0196 82FB0312 	 smull r1,r2,r2,r3
 1956 019a 1A44     	 add r2,r2,r3
 1957 019c D213     	 asrs r2,r2,#15
 1958 019e DB17     	 asrs r3,r3,#31
 1959 01a0 D31A     	 subs r3,r2,r3
 1960 01a2 3B61     	 str r3,[r7,#16]
 200:../main.c     ****   	int32_t Iy = iu - ((iv+iw)/2);
 1961              	 .loc 11 200 0
 1962 01a4 484B     	 ldr r3,.L62+96
 1963 01a6 1A68     	 ldr r2,[r3]
 1964 01a8 464B     	 ldr r3,.L62+92
 1965 01aa 1968     	 ldr r1,[r3]
 1966 01ac 444B     	 ldr r3,.L62+88
 1967 01ae 1B68     	 ldr r3,[r3]
 1968 01b0 0B44     	 add r3,r3,r1
 1969 01b2 D90F     	 lsrs r1,r3,#31
 1970 01b4 0B44     	 add r3,r3,r1
 1971 01b6 5B10     	 asrs r3,r3,#1
 1972 01b8 D31A     	 subs r3,r2,r3
 1973 01ba FB60     	 str r3,[r7,#12]
 201:../main.c     ****   	Iy *= Iy;
 1974              	 .loc 11 201 0
 1975 01bc FB68     	 ldr r3,[r7,#12]
 1976 01be FA68     	 ldr r2,[r7,#12]
 1977 01c0 02FB03F3 	 mul r3,r2,r3
 1978 01c4 FB60     	 str r3,[r7,#12]
 202:../main.c     ****   	Iy += Ix*Ix;
 1979              	 .loc 11 202 0
 1980 01c6 3B69     	 ldr r3,[r7,#16]
 1981 01c8 3A69     	 ldr r2,[r7,#16]
 1982 01ca 02FB03F3 	 mul r3,r2,r3
 1983 01ce FA68     	 ldr r2,[r7,#12]
 1984 01d0 1344     	 add r3,r3,r2
 1985 01d2 FB60     	 str r3,[r7,#12]
 203:../main.c     ****   	I_net = sqrtf(Iy);
 1986              	 .loc 11 203 0
 1987 01d4 FB68     	 ldr r3,[r7,#12]
 1988 01d6 07EE903A 	 fmsr s15,r3
 1989 01da F8EEE77A 	 fsitos s15,s15
 1990 01de 17EE900A 	 fmrs r0,s15
 1991 01e2 FFF7FEFF 	 bl sqrtf
 1992 01e6 07EE900A 	 fmsr s15,r0
 1993 01ea FDEEE77A 	 ftosizs s15,s15
 1994 01ee C7ED017A 	 fsts s15,[r7,#4]
 1995 01f2 BB88     	 ldrh r3,[r7,#4]
 1996 01f4 9AB2     	 uxth r2,r3
 1997 01f6 354B     	 ldr r3,.L62+100
 1998 01f8 1A80     	 strh r2,[r3]
 204:../main.c     ****   	if(Vq_zadane < 0)
 1999              	 .loc 11 204 0
 2000 01fa 284B     	 ldr r3,.L62+52
 2001 01fc 1B68     	 ldr r3,[r3]
 2002 01fe 002B     	 cmp r3,#0
 2003 0200 07DA     	 bge .L61
 205:../main.c     ****   		I_net = -I_net;
 2004              	 .loc 11 205 0
 2005 0202 324B     	 ldr r3,.L62+100
 2006 0204 1B88     	 ldrh r3,[r3]
 2007 0206 9BB2     	 uxth r3,r3
 2008 0208 5B42     	 negs r3,r3
 2009 020a 9BB2     	 uxth r3,r3
 2010 020c 9AB2     	 uxth r2,r3
 2011 020e 2F4B     	 ldr r3,.L62+100
 2012 0210 1A80     	 strh r2,[r3]
 2013              	.L61:
 206:../main.c     **** 
 207:../main.c     **** 	txData[3] = I_net >> 8;
 2014              	 .loc 11 207 0
 2015 0212 2E4B     	 ldr r3,.L62+100
 2016 0214 1B88     	 ldrh r3,[r3]
 2017 0216 1BB2     	 sxth r3,r3
 2018 0218 1B12     	 asrs r3,r3,#8
 2019 021a 9BB2     	 uxth r3,r3
 2020 021c DAB2     	 uxtb r2,r3
 2021 021e 2C4B     	 ldr r3,.L62+104
 2022 0220 DA70     	 strb r2,[r3,#3]
 208:../main.c     **** 	txData[4] = I_net;
 2023              	 .loc 11 208 0
 2024 0222 2A4B     	 ldr r3,.L62+100
 2025 0224 1B88     	 ldrh r3,[r3]
 2026 0226 DAB2     	 uxtb r2,r3
 2027 0228 294B     	 ldr r3,.L62+104
 2028 022a 1A71     	 strb r2,[r3,#4]
 209:../main.c     **** 	txData[5] = kat_absolutny >> 24;
 2029              	 .loc 11 209 0
 2030 022c 154B     	 ldr r3,.L62+28
 2031 022e 1B68     	 ldr r3,[r3]
 2032 0230 1B16     	 asrs r3,r3,#24
 2033 0232 DAB2     	 uxtb r2,r3
 2034 0234 264B     	 ldr r3,.L62+104
 2035 0236 5A71     	 strb r2,[r3,#5]
 210:../main.c     **** 	txData[6] = kat_absolutny >> 16;
 2036              	 .loc 11 210 0
 2037 0238 124B     	 ldr r3,.L62+28
 2038 023a 1B68     	 ldr r3,[r3]
 2039 023c 1B14     	 asrs r3,r3,#16
 2040 023e DAB2     	 uxtb r2,r3
 2041 0240 234B     	 ldr r3,.L62+104
 2042 0242 9A71     	 strb r2,[r3,#6]
 211:../main.c     **** 	txData[7] = kat_absolutny >> 8;
 2043              	 .loc 11 211 0
 2044 0244 0F4B     	 ldr r3,.L62+28
 2045 0246 1B68     	 ldr r3,[r3]
 2046 0248 1B12     	 asrs r3,r3,#8
 2047 024a DAB2     	 uxtb r2,r3
 2048 024c 204B     	 ldr r3,.L62+104
 2049 024e DA71     	 strb r2,[r3,#7]
 212:../main.c     **** 	txData[8] = kat_absolutny;
 2050              	 .loc 11 212 0
 2051 0250 0C4B     	 ldr r3,.L62+28
 2052 0252 1B68     	 ldr r3,[r3]
 2053 0254 DAB2     	 uxtb r2,r3
 2054 0256 1E4B     	 ldr r3,.L62+104
 2055 0258 1A72     	 strb r2,[r3,#8]
 213:../main.c     **** 
 214:../main.c     **** 	DIGITAL_IO_SetOutputLow(&SIGNAL);
 2056              	 .loc 11 214 0
 2057 025a 0348     	 ldr r0,.L62
 2058 025c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 215:../main.c     **** }
 2059              	 .loc 11 215 0
 2060 0260 2037     	 adds r7,r7,#32
 2061              	.LCFI109:
 2062              	 .cfi_def_cfa_offset 8
 2063 0262 BD46     	 mov sp,r7
 2064              	.LCFI110:
 2065              	 .cfi_def_cfa_register 13
 2066              	 
 2067 0264 80BD     	 pop {r7,pc}
 2068              	.L63:
 2069 0266 00BF     	 .align 2
 2070              	.L62:
 2071 0268 00000000 	 .word SIGNAL
 2072 026c 00000000 	 .word kat_enkoder
 2073 0270 00000000 	 .word liczba_par_biegunow
 2074 0274 01800080 	 .word -2147450879
 2075 0278 00000000 	 .word offset_elektryczny
 2076 027c 00000000 	 .word kat_elektryczny
 2077 0280 00000000 	 .word poz_zad
 2078 0284 00000000 	 .word kat_absolutny
 2079 0288 00000000 	 .word uchyb
 2080 028c 00000000 	 .word ks
 2081 0290 D34D6210 	 .word 274877907
 2082 0294 00000000 	 .word kd
 2083 0298 00000000 	 .word predkosc_enkoder
 2084 029c 00000000 	 .word Vq_zadane
 2085 02a0 00000000 	 .word Vd_zadane
 2086 02a4 00000000 	 .word V_ref
 2087 02a8 D08AFFFF 	 .word -30000
 2088 02ac 00000000 	 .word V_beta
 2089 02b0 00000000 	 .word V_alfa
 2090 02b4 00000000 	 .word angle
 2091 02b8 00000000 	 .word angle32
 2092 02bc 00000000 	 .word SVPWM
 2093 02c0 00000000 	 .word iw
 2094 02c4 00000000 	 .word iv
 2095 02c8 00000000 	 .word iu
 2096 02cc 00000000 	 .word I_net
 2097 02d0 00000000 	 .word txData
 2098              	 .cfi_endproc
 2099              	.LFE556:
 2101              	 .section .text.DRV_START,"ax",%progbits
 2102              	 .align 2
 2103              	 .global DRV_START
 2104              	 .thumb
 2105              	 .thumb_func
 2107              	DRV_START:
 2108              	.LFB557:
 216:../main.c     **** void DRV_START(void)
 217:../main.c     **** {
 2109              	 .loc 11 217 0
 2110              	 .cfi_startproc
 2111              	 
 2112              	 
 2113 0000 80B5     	 push {r7,lr}
 2114              	.LCFI111:
 2115              	 .cfi_def_cfa_offset 8
 2116              	 .cfi_offset 7,-8
 2117              	 .cfi_offset 14,-4
 2118 0002 8AB0     	 sub sp,sp,#40
 2119              	.LCFI112:
 2120              	 .cfi_def_cfa_offset 48
 2121 0004 00AF     	 add r7,sp,#0
 2122              	.LCFI113:
 2123              	 .cfi_def_cfa_register 7
 218:../main.c     **** 	PWM_SVM_InverterEnable(&SVPWM);
 2124              	 .loc 11 218 0
 2125 0006 4D48     	 ldr r0,.L75
 2126 0008 FFF7FEFF 	 bl PWM_SVM_InverterEnable
 2127              	.LBB3:
 219:../main.c     **** 
 220:../main.c     **** 	for(uint16_t j=0; j < 65000; j++);
 2128              	 .loc 11 220 0
 2129 000c 0023     	 movs r3,#0
 2130 000e FB84     	 strh r3,[r7,#38]
 2131 0010 02E0     	 b .L65
 2132              	.L66:
 2133              	 .loc 11 220 0 is_stmt 0 discriminator 3
 2134 0012 FB8C     	 ldrh r3,[r7,#38]
 2135 0014 0133     	 adds r3,r3,#1
 2136 0016 FB84     	 strh r3,[r7,#38]
 2137              	.L65:
 2138              	 .loc 11 220 0 discriminator 1
 2139 0018 FB8C     	 ldrh r3,[r7,#38]
 2140 001a 4FF6E752 	 movw r2,#64999
 2141 001e 9342     	 cmp r3,r2
 2142 0020 F7D9     	 bls .L66
 2143              	.LBE3:
 221:../main.c     **** 
 222:../main.c     **** 	//kalibracja offsetów
 223:../main.c     **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_enkoder);
 2144              	 .loc 11 223 0 is_stmt 1
 2145 0022 4748     	 ldr r0,.L75+4
 2146 0024 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 224:../main.c     **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_enkoder, SPI_MASTER_SS_SIGNAL_1);
 2147              	 .loc 11 224 0
 2148 0028 4548     	 ldr r0,.L75+4
 2149 002a 0121     	 movs r1,#1
 2150 002c FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 225:../main.c     **** 
 226:../main.c     **** 	uint8_t zero [2]= {0};
 2151              	 .loc 11 226 0
 2152 0030 0023     	 movs r3,#0
 2153 0032 BB82     	 strh r3,[r7,#20]
 227:../main.c     **** 	uint8_t rec[10] = {0};
 2154              	 .loc 11 227 0
 2155 0034 07F10803 	 add r3,r7,#8
 2156 0038 0022     	 movs r2,#0
 2157 003a 1A60     	 str r2,[r3]
 2158 003c 0433     	 adds r3,r3,#4
 2159 003e 0022     	 movs r2,#0
 2160 0040 1A60     	 str r2,[r3]
 2161 0042 0433     	 adds r3,r3,#4
 2162 0044 0022     	 movs r2,#0
 2163 0046 1A80     	 strh r2,[r3]
 2164 0048 0233     	 adds r3,r3,#2
 228:../main.c     **** 	uint8_t sendData[2];
 229:../main.c     **** 	sendData[0] = 0b00011000;
 2165              	 .loc 11 229 0
 2166 004a 1823     	 movs r3,#24
 2167 004c 3B71     	 strb r3,[r7,#4]
 230:../main.c     **** 	sendData[1] = 0b00000000;	// <ustawienie wzmocnienia na 10
 2168              	 .loc 11 230 0
 2169 004e 0023     	 movs r3,#0
 2170 0050 7B71     	 strb r3,[r7,#5]
 2171              	.LBB4:
 231:../main.c     **** 	for(int i = 0; i < 5; i++)
 2172              	 .loc 11 231 0
 2173 0052 0023     	 movs r3,#0
 2174 0054 3B62     	 str r3,[r7,#32]
 2175 0056 08E0     	 b .L67
 2176              	.L68:
 232:../main.c     **** 	{
 233:../main.c     **** 		SPI_MASTER_Transmit(&SPI_enkoder, sendData, 2);		//Opamp Gain
 2177              	 .loc 11 233 0 discriminator 3
 2178 0058 3B1D     	 adds r3,r7,#4
 2179 005a 3948     	 ldr r0,.L75+4
 2180 005c 1946     	 mov r1,r3
 2181 005e 0222     	 movs r2,#2
 2182 0060 FFF7FEFF 	 bl SPI_MASTER_Transmit
 231:../main.c     **** 	for(int i = 0; i < 5; i++)
 2183              	 .loc 11 231 0 discriminator 3
 2184 0064 3B6A     	 ldr r3,[r7,#32]
 2185 0066 0133     	 adds r3,r3,#1
 2186 0068 3B62     	 str r3,[r7,#32]
 2187              	.L67:
 231:../main.c     **** 	for(int i = 0; i < 5; i++)
 2188              	 .loc 11 231 0 is_stmt 0 discriminator 1
 2189 006a 3B6A     	 ldr r3,[r7,#32]
 2190 006c 042B     	 cmp r3,#4
 2191 006e F3DD     	 ble .L68
 2192              	.LBE4:
 234:../main.c     **** 	}
 235:../main.c     **** 	sendData[0] = 0b10011000;
 2193              	 .loc 11 235 0 is_stmt 1
 2194 0070 9823     	 movs r3,#152
 2195 0072 3B71     	 strb r3,[r7,#4]
 236:../main.c     **** 	sendData[1] = 0b00000000;
 2196              	 .loc 11 236 0
 2197 0074 0023     	 movs r3,#0
 2198 0076 7B71     	 strb r3,[r7,#5]
 2199              	.LBB5:
 237:../main.c     **** 	for(int i = 0; i < 5; i++)
 2200              	 .loc 11 237 0
 2201 0078 0023     	 movs r3,#0
 2202 007a FB61     	 str r3,[r7,#28]
 2203 007c 12E0     	 b .L69
 2204              	.L70:
 238:../main.c     **** 	{
 239:../main.c     **** 		SPI_MASTER_Transmit(&SPI_enkoder, sendData, 2);
 2205              	 .loc 11 239 0 discriminator 3
 2206 007e 3B1D     	 adds r3,r7,#4
 2207 0080 2F48     	 ldr r0,.L75+4
 2208 0082 1946     	 mov r1,r3
 2209 0084 0222     	 movs r2,#2
 2210 0086 FFF7FEFF 	 bl SPI_MASTER_Transmit
 240:../main.c     **** 		SPI_MASTER_Transfer(&SPI_enkoder, zero, rec, 2);
 2211              	 .loc 11 240 0 discriminator 3
 2212 008a 07F11402 	 add r2,r7,#20
 2213 008e 07F10803 	 add r3,r7,#8
 2214 0092 2B48     	 ldr r0,.L75+4
 2215 0094 1146     	 mov r1,r2
 2216 0096 1A46     	 mov r2,r3
 2217 0098 0223     	 movs r3,#2
 2218 009a FFF7FEFF 	 bl SPI_MASTER_Transfer
 237:../main.c     **** 	for(int i = 0; i < 5; i++)
 2219              	 .loc 11 237 0 discriminator 3
 2220 009e FB69     	 ldr r3,[r7,#28]
 2221 00a0 0133     	 adds r3,r3,#1
 2222 00a2 FB61     	 str r3,[r7,#28]
 2223              	.L69:
 237:../main.c     **** 	for(int i = 0; i < 5; i++)
 2224              	 .loc 11 237 0 is_stmt 0 discriminator 1
 2225 00a4 FB69     	 ldr r3,[r7,#28]
 2226 00a6 042B     	 cmp r3,#4
 2227 00a8 E9DD     	 ble .L70
 2228              	.LBE5:
 241:../main.c     **** 	}
 242:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&DC_CAL);
 2229              	 .loc 11 242 0 is_stmt 1
 2230 00aa 2648     	 ldr r0,.L75+8
 2231 00ac FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 243:../main.c     **** 	uint16_t iloscProbek = 50;
 2232              	 .loc 11 243 0
 2233 00b0 3223     	 movs r3,#50
 2234 00b2 FB82     	 strh r3,[r7,#22]
 2235              	.LBB6:
 244:../main.c     **** 	for( uint16_t i = 0; i < iloscProbek; i++)
 2236              	 .loc 11 244 0
 2237 00b4 0023     	 movs r3,#0
 2238 00b6 7B83     	 strh r3,[r7,#26]
 2239 00b8 20E0     	 b .L71
 2240              	.L74:
 245:../main.c     **** 	{
 246:../main.c     **** 		iuOffset += ADC_MEASUREMENT_ADV_GetResult(&ADC_U_Channel_A_handle);
 2241              	 .loc 11 246 0
 2242 00ba 2348     	 ldr r0,.L75+12
 2243 00bc FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_GetResult
 2244 00c0 0346     	 mov r3,r0
 2245 00c2 1A46     	 mov r2,r3
 2246 00c4 214B     	 ldr r3,.L75+16
 2247 00c6 1B68     	 ldr r3,[r3]
 2248 00c8 1344     	 add r3,r3,r2
 2249 00ca 204A     	 ldr r2,.L75+16
 2250 00cc 1360     	 str r3,[r2]
 247:../main.c     **** 		ivOffset += ADC_MEASUREMENT_ADV_GetResult(&ADC_V_Channel_A_handle);
 2251              	 .loc 11 247 0
 2252 00ce 2048     	 ldr r0,.L75+20
 2253 00d0 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_GetResult
 2254 00d4 0346     	 mov r3,r0
 2255 00d6 1A46     	 mov r2,r3
 2256 00d8 1E4B     	 ldr r3,.L75+24
 2257 00da 1B68     	 ldr r3,[r3]
 2258 00dc 1344     	 add r3,r3,r2
 2259 00de 1D4A     	 ldr r2,.L75+24
 2260 00e0 1360     	 str r3,[r2]
 2261              	.LBB7:
 248:../main.c     **** 		for(uint16_t j = 0; j < 1000; j++);	//delay
 2262              	 .loc 11 248 0
 2263 00e2 0023     	 movs r3,#0
 2264 00e4 3B83     	 strh r3,[r7,#24]
 2265 00e6 02E0     	 b .L72
 2266              	.L73:
 2267              	 .loc 11 248 0 is_stmt 0 discriminator 3
 2268 00e8 3B8B     	 ldrh r3,[r7,#24]
 2269 00ea 0133     	 adds r3,r3,#1
 2270 00ec 3B83     	 strh r3,[r7,#24]
 2271              	.L72:
 2272              	 .loc 11 248 0 discriminator 1
 2273 00ee 3B8B     	 ldrh r3,[r7,#24]
 2274 00f0 B3F57A7F 	 cmp r3,#1000
 2275 00f4 F8D3     	 bcc .L73
 2276              	.LBE7:
 244:../main.c     **** 	{
 2277              	 .loc 11 244 0 is_stmt 1 discriminator 2
 2278 00f6 7B8B     	 ldrh r3,[r7,#26]
 2279 00f8 0133     	 adds r3,r3,#1
 2280 00fa 7B83     	 strh r3,[r7,#26]
 2281              	.L71:
 244:../main.c     **** 	{
 2282              	 .loc 11 244 0 is_stmt 0 discriminator 1
 2283 00fc 7A8B     	 ldrh r2,[r7,#26]
 2284 00fe FB8A     	 ldrh r3,[r7,#22]
 2285 0100 9A42     	 cmp r2,r3
 2286 0102 DAD3     	 bcc .L74
 2287              	.LBE6:
 249:../main.c     **** 	}
 250:../main.c     **** 	iuOffset /= iloscProbek;
 2288              	 .loc 11 250 0 is_stmt 1
 2289 0104 114B     	 ldr r3,.L75+16
 2290 0106 1A68     	 ldr r2,[r3]
 2291 0108 FB8A     	 ldrh r3,[r7,#22]
 2292 010a 92FBF3F3 	 sdiv r3,r2,r3
 2293 010e 0F4A     	 ldr r2,.L75+16
 2294 0110 1360     	 str r3,[r2]
 251:../main.c     **** 	ivOffset /= iloscProbek;
 2295              	 .loc 11 251 0
 2296 0112 104B     	 ldr r3,.L75+24
 2297 0114 1A68     	 ldr r2,[r3]
 2298 0116 FB8A     	 ldrh r3,[r7,#22]
 2299 0118 92FBF3F3 	 sdiv r3,r2,r3
 2300 011c 0D4A     	 ldr r2,.L75+24
 2301 011e 1360     	 str r3,[r2]
 252:../main.c     **** 	iwOffset /= iloscProbek;
 2302              	 .loc 11 252 0
 2303 0120 0D4B     	 ldr r3,.L75+28
 2304 0122 1A68     	 ldr r2,[r3]
 2305 0124 FB8A     	 ldrh r3,[r7,#22]
 2306 0126 92FBF3F3 	 sdiv r3,r2,r3
 2307 012a 0B4A     	 ldr r2,.L75+28
 2308 012c 1360     	 str r3,[r2]
 253:../main.c     **** 
 254:../main.c     **** 	DIGITAL_IO_SetOutputLow(&DC_CAL);
 2309              	 .loc 11 254 0
 2310 012e 0548     	 ldr r0,.L75+8
 2311 0130 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 255:../main.c     **** }
 2312              	 .loc 11 255 0
 2313 0134 2837     	 adds r7,r7,#40
 2314              	.LCFI114:
 2315              	 .cfi_def_cfa_offset 8
 2316 0136 BD46     	 mov sp,r7
 2317              	.LCFI115:
 2318              	 .cfi_def_cfa_register 13
 2319              	 
 2320 0138 80BD     	 pop {r7,pc}
 2321              	.L76:
 2322 013a 00BF     	 .align 2
 2323              	.L75:
 2324 013c 00000000 	 .word SVPWM
 2325 0140 00000000 	 .word SPI_enkoder
 2326 0144 00000000 	 .word DC_CAL
 2327 0148 00000000 	 .word ADC_U_Channel_A_handle
 2328 014c 00000000 	 .word iuOffset
 2329 0150 00000000 	 .word ADC_V_Channel_A_handle
 2330 0154 00000000 	 .word ivOffset
 2331 0158 00000000 	 .word iwOffset
 2332              	 .cfi_endproc
 2333              	.LFE557:
 2335              	 .section .text.LiczeniePradu,"ax",%progbits
 2336              	 .align 2
 2337              	 .global LiczeniePradu
 2338              	 .thumb
 2339              	 .thumb_func
 2341              	LiczeniePradu:
 2342              	.LFB558:
 256:../main.c     **** void LiczeniePradu(void)
 257:../main.c     **** {
 2343              	 .loc 11 257 0
 2344              	 .cfi_startproc
 2345              	 
 2346              	 
 2347 0000 80B5     	 push {r7,lr}
 2348              	.LCFI116:
 2349              	 .cfi_def_cfa_offset 8
 2350              	 .cfi_offset 7,-8
 2351              	 .cfi_offset 14,-4
 2352 0002 00AF     	 add r7,sp,#0
 2353              	.LCFI117:
 2354              	 .cfi_def_cfa_register 7
 258:../main.c     **** 	i[0] = ADC_MEASUREMENT_ADV_GetResult(&ADC_U_Channel_A_handle);
 2355              	 .loc 11 258 0
 2356 0004 3A48     	 ldr r0,.L78
 2357 0006 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_GetResult
 2358 000a 0346     	 mov r3,r0
 2359 000c 1A46     	 mov r2,r3
 2360 000e 394B     	 ldr r3,.L78+4
 2361 0010 1A60     	 str r2,[r3]
 259:../main.c     **** 	i[1] = ADC_MEASUREMENT_ADV_GetResult(&ADC_V_Channel_A_handle);
 2362              	 .loc 11 259 0
 2363 0012 3948     	 ldr r0,.L78+8
 2364 0014 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_GetResult
 2365 0018 0346     	 mov r3,r0
 2366 001a 1A46     	 mov r2,r3
 2367 001c 354B     	 ldr r3,.L78+4
 2368 001e 5A60     	 str r2,[r3,#4]
 260:../main.c     **** 
 261:../main.c     **** 	i[1] = i[1] - ivOffset;
 2369              	 .loc 11 261 0
 2370 0020 344B     	 ldr r3,.L78+4
 2371 0022 5A68     	 ldr r2,[r3,#4]
 2372 0024 354B     	 ldr r3,.L78+12
 2373 0026 1B68     	 ldr r3,[r3]
 2374 0028 D31A     	 subs r3,r2,r3
 2375 002a 324A     	 ldr r2,.L78+4
 2376 002c 5360     	 str r3,[r2,#4]
 262:../main.c     **** 	i[1] = (i[1] * v3v) / 4095; // w tym miejscu sa miliwolty
 2377              	 .loc 11 262 0
 2378 002e 314B     	 ldr r3,.L78+4
 2379 0030 5B68     	 ldr r3,[r3,#4]
 2380 0032 334A     	 ldr r2,.L78+16
 2381 0034 1268     	 ldr r2,[r2]
 2382 0036 02FB03F3 	 mul r3,r2,r3
 2383 003a 324A     	 ldr r2,.L78+20
 2384 003c 82FB0312 	 smull r1,r2,r2,r3
 2385 0040 1A44     	 add r2,r2,r3
 2386 0042 D212     	 asrs r2,r2,#11
 2387 0044 DB17     	 asrs r3,r3,#31
 2388 0046 D31A     	 subs r3,r2,r3
 2389 0048 2A4A     	 ldr r2,.L78+4
 2390 004a 5360     	 str r3,[r2,#4]
 263:../main.c     **** 	i[1] *= 10;
 2391              	 .loc 11 263 0
 2392 004c 294B     	 ldr r3,.L78+4
 2393 004e 5A68     	 ldr r2,[r3,#4]
 2394 0050 1346     	 mov r3,r2
 2395 0052 9B00     	 lsls r3,r3,#2
 2396 0054 1344     	 add r3,r3,r2
 2397 0056 5B00     	 lsls r3,r3,#1
 2398 0058 1A46     	 mov r2,r3
 2399 005a 264B     	 ldr r3,.L78+4
 2400 005c 5A60     	 str r2,[r3,#4]
 264:../main.c     **** 
 265:../main.c     **** 	i[0] = i[0] - iuOffset;
 2401              	 .loc 11 265 0
 2402 005e 254B     	 ldr r3,.L78+4
 2403 0060 1A68     	 ldr r2,[r3]
 2404 0062 294B     	 ldr r3,.L78+24
 2405 0064 1B68     	 ldr r3,[r3]
 2406 0066 D31A     	 subs r3,r2,r3
 2407 0068 224A     	 ldr r2,.L78+4
 2408 006a 1360     	 str r3,[r2]
 266:../main.c     **** 	i[0] = (i[0] * v3v) / 4095;
 2409              	 .loc 11 266 0
 2410 006c 214B     	 ldr r3,.L78+4
 2411 006e 1B68     	 ldr r3,[r3]
 2412 0070 234A     	 ldr r2,.L78+16
 2413 0072 1268     	 ldr r2,[r2]
 2414 0074 02FB03F3 	 mul r3,r2,r3
 2415 0078 224A     	 ldr r2,.L78+20
 2416 007a 82FB0312 	 smull r1,r2,r2,r3
 2417 007e 1A44     	 add r2,r2,r3
 2418 0080 D212     	 asrs r2,r2,#11
 2419 0082 DB17     	 asrs r3,r3,#31
 2420 0084 D31A     	 subs r3,r2,r3
 2421 0086 1B4A     	 ldr r2,.L78+4
 2422 0088 1360     	 str r3,[r2]
 267:../main.c     **** 	i[0] *= 10;
 2423              	 .loc 11 267 0
 2424 008a 1A4B     	 ldr r3,.L78+4
 2425 008c 1A68     	 ldr r2,[r3]
 2426 008e 1346     	 mov r3,r2
 2427 0090 9B00     	 lsls r3,r3,#2
 2428 0092 1344     	 add r3,r3,r2
 2429 0094 5B00     	 lsls r3,r3,#1
 2430 0096 1A46     	 mov r2,r3
 2431 0098 164B     	 ldr r3,.L78+4
 2432 009a 1A60     	 str r2,[r3]
 268:../main.c     **** 
 269:../main.c     **** 	iu = (iu * 6) + (i[0]* 2);
 2433              	 .loc 11 269 0
 2434 009c 1B4B     	 ldr r3,.L78+28
 2435 009e 1A68     	 ldr r2,[r3]
 2436 00a0 1346     	 mov r3,r2
 2437 00a2 5B00     	 lsls r3,r3,#1
 2438 00a4 1A44     	 add r2,r2,r3
 2439 00a6 134B     	 ldr r3,.L78+4
 2440 00a8 1B68     	 ldr r3,[r3]
 2441 00aa 1344     	 add r3,r3,r2
 2442 00ac 5B00     	 lsls r3,r3,#1
 2443 00ae 174A     	 ldr r2,.L78+28
 2444 00b0 1360     	 str r3,[r2]
 270:../main.c     **** 	iu = iu >> 3;
 2445              	 .loc 11 270 0
 2446 00b2 164B     	 ldr r3,.L78+28
 2447 00b4 1B68     	 ldr r3,[r3]
 2448 00b6 DB10     	 asrs r3,r3,#3
 2449 00b8 144A     	 ldr r2,.L78+28
 2450 00ba 1360     	 str r3,[r2]
 271:../main.c     **** 	iv = (iv * 6) + (i[1]* 2);
 2451              	 .loc 11 271 0
 2452 00bc 144B     	 ldr r3,.L78+32
 2453 00be 1A68     	 ldr r2,[r3]
 2454 00c0 1346     	 mov r3,r2
 2455 00c2 5B00     	 lsls r3,r3,#1
 2456 00c4 1A44     	 add r2,r2,r3
 2457 00c6 0B4B     	 ldr r3,.L78+4
 2458 00c8 5B68     	 ldr r3,[r3,#4]
 2459 00ca 1344     	 add r3,r3,r2
 2460 00cc 5B00     	 lsls r3,r3,#1
 2461 00ce 104A     	 ldr r2,.L78+32
 2462 00d0 1360     	 str r3,[r2]
 272:../main.c     **** 	iv = iv >> 3;
 2463              	 .loc 11 272 0
 2464 00d2 0F4B     	 ldr r3,.L78+32
 2465 00d4 1B68     	 ldr r3,[r3]
 2466 00d6 DB10     	 asrs r3,r3,#3
 2467 00d8 0D4A     	 ldr r2,.L78+32
 2468 00da 1360     	 str r3,[r2]
 273:../main.c     **** 
 274:../main.c     **** 	iw = - iu - iv;
 2469              	 .loc 11 274 0
 2470 00dc 0B4B     	 ldr r3,.L78+28
 2471 00de 1B68     	 ldr r3,[r3]
 2472 00e0 5A42     	 negs r2,r3
 2473 00e2 0B4B     	 ldr r3,.L78+32
 2474 00e4 1B68     	 ldr r3,[r3]
 2475 00e6 D31A     	 subs r3,r2,r3
 2476 00e8 0A4A     	 ldr r2,.L78+36
 2477 00ea 1360     	 str r3,[r2]
 275:../main.c     **** }
 2478              	 .loc 11 275 0
 2479 00ec 80BD     	 pop {r7,pc}
 2480              	.L79:
 2481 00ee 00BF     	 .align 2
 2482              	.L78:
 2483 00f0 00000000 	 .word ADC_U_Channel_A_handle
 2484 00f4 00000000 	 .word i
 2485 00f8 00000000 	 .word ADC_V_Channel_A_handle
 2486 00fc 00000000 	 .word ivOffset
 2487 0100 00000000 	 .word v3v
 2488 0104 81000880 	 .word -2146959231
 2489 0108 00000000 	 .word iuOffset
 2490 010c 00000000 	 .word iu
 2491 0110 00000000 	 .word iv
 2492 0114 00000000 	 .word iw
 2493              	 .cfi_endproc
 2494              	.LFE558:
 2496              	 .section .text.CCU80_2_IRQHandler,"ax",%progbits
 2497              	 .align 2
 2498              	 .global CCU80_2_IRQHandler
 2499              	 .thumb
 2500              	 .thumb_func
 2502              	CCU80_2_IRQHandler:
 2503              	.LFB559:
 276:../main.c     **** void ADC_START(void)
 277:../main.c     **** {
 2504              	 .loc 11 277 0
 2505              	 .cfi_startproc
 2506              	 
 2507              	 
 2508              	 
 2509 0000 80B4     	 push {r7}
 2510              	.LCFI118:
 2511              	 .cfi_def_cfa_offset 4
 2512              	 .cfi_offset 7,-4
 2513 0002 00AF     	 add r7,sp,#0
 2514              	.LCFI119:
 2515              	 .cfi_def_cfa_register 7
 278:../main.c     **** 
 279:../main.c     **** }
 2516              	 .loc 11 279 0
 2517 0004 BD46     	 mov sp,r7
 2518              	.LCFI120:
 2519              	 .cfi_def_cfa_register 13
 2520              	 
 2521 0006 5DF8047B 	 ldr r7,[sp],#4
 2522              	.LCFI121:
 2523              	 .cfi_restore 7
 2524              	 .cfi_def_cfa_offset 0
 2525 000a 7047     	 bx lr
 2526              	 .cfi_endproc
 2527              	.LFE559:
 2529              	 .section .text.ADC_Pomiary,"ax",%progbits
 2530              	 .align 2
 2531              	 .global ADC_Pomiary
 2532              	 .thumb
 2533              	 .thumb_func
 2535              	ADC_Pomiary:
 2536              	.LFB560:
 280:../main.c     **** void ADC_Pomiary(void)
 281:../main.c     **** {
 2537              	 .loc 11 281 0
 2538              	 .cfi_startproc
 2539              	 
 2540              	 
 2541              	 
 2542 0000 80B4     	 push {r7}
 2543              	.LCFI122:
 2544              	 .cfi_def_cfa_offset 4
 2545              	 .cfi_offset 7,-4
 2546 0002 00AF     	 add r7,sp,#0
 2547              	.LCFI123:
 2548              	 .cfi_def_cfa_register 7
 282:../main.c     **** }
 2549              	 .loc 11 282 0
 2550 0004 BD46     	 mov sp,r7
 2551              	.LCFI124:
 2552              	 .cfi_def_cfa_register 13
 2553              	 
 2554 0006 5DF8047B 	 ldr r7,[sp],#4
 2555              	.LCFI125:
 2556              	 .cfi_restore 7
 2557              	 .cfi_def_cfa_offset 0
 2558 000a 7047     	 bx lr
 2559              	 .cfi_endproc
 2560              	.LFE560:
 2562              	 .section .text.XMC_Init,"ax",%progbits
 2563              	 .align 2
 2564              	 .global XMC_Init
 2565              	 .thumb
 2566              	 .thumb_func
 2568              	XMC_Init:
 2569              	.LFB561:
 283:../main.c     **** void XMC_Init()
 284:../main.c     **** {
 2570              	 .loc 11 284 0
 2571              	 .cfi_startproc
 2572              	 
 2573              	 
 2574 0000 80B5     	 push {r7,lr}
 2575              	.LCFI126:
 2576              	 .cfi_def_cfa_offset 8
 2577              	 .cfi_offset 7,-8
 2578              	 .cfi_offset 14,-4
 2579 0002 00AF     	 add r7,sp,#0
 2580              	.LCFI127:
 2581              	 .cfi_def_cfa_register 7
 285:../main.c     **** 	switch (silnik) {									//TODO dodac konfiguracje dla pozostałych silnikow
 2582              	 .loc 11 285 0
 2583 0004 474B     	 ldr r3,.L97
 2584 0006 1B78     	 ldrb r3,[r3]
 2585 0008 072B     	 cmp r3,#7
 2586 000a 66D8     	 bhi .L96
 2587 000c 01A2     	 adr r2,.L85
 2588 000e 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2589 0012 00BF     	 .p2align 2
 2590              	.L85:
 2591 0014 35000000 	 .word .L84+1
 2592 0018 4B000000 	 .word .L86+1
 2593 001c 5F000000 	 .word .L87+1
 2594 0020 73000000 	 .word .L88+1
 2595 0024 87000000 	 .word .L89+1
 2596 0028 9B000000 	 .word .L90+1
 2597 002c B1000000 	 .word .L91+1
 2598 0030 C7000000 	 .word .L92+1
 2599              	 .p2align 1
 2600              	.L84:
 286:../main.c     **** 		case 0:
 287:../main.c     **** 			adress = 0x10;
 2601              	 .loc 11 287 0
 2602 0034 3C4B     	 ldr r3,.L97+4
 2603 0036 1022     	 movs r2,#16
 2604 0038 1A70     	 strb r2,[r3]
 288:../main.c     **** 			offset_elektryczny = 8000;
 2605              	 .loc 11 288 0
 2606 003a 3C4B     	 ldr r3,.L97+8
 2607 003c 4FF4FA52 	 mov r2,#8000
 2608 0040 1A60     	 str r2,[r3]
 289:../main.c     **** 			znak = -1;
 2609              	 .loc 11 289 0
 2610 0042 3B4B     	 ldr r3,.L97+12
 2611 0044 FF22     	 movs r2,#255
 2612 0046 1A70     	 strb r2,[r3]
 290:../main.c     **** 			break;
 2613              	 .loc 11 290 0
 2614 0048 48E0     	 b .L93
 2615              	.L86:
 291:../main.c     **** 		case 1:
 292:../main.c     **** 			adress = 0x11;
 2616              	 .loc 11 292 0
 2617 004a 374B     	 ldr r3,.L97+4
 2618 004c 1122     	 movs r2,#17
 2619 004e 1A70     	 strb r2,[r3]
 293:../main.c     **** 			offset_elektryczny = -1590;
 2620              	 .loc 11 293 0
 2621 0050 364B     	 ldr r3,.L97+8
 2622 0052 384A     	 ldr r2,.L97+16
 2623 0054 1A60     	 str r2,[r3]
 294:../main.c     **** 			znak = 1;
 2624              	 .loc 11 294 0
 2625 0056 364B     	 ldr r3,.L97+12
 2626 0058 0122     	 movs r2,#1
 2627 005a 1A70     	 strb r2,[r3]
 295:../main.c     **** 			break;
 2628              	 .loc 11 295 0
 2629 005c 3EE0     	 b .L93
 2630              	.L87:
 296:../main.c     **** 		case 2:
 297:../main.c     **** 			adress = 0x12;
 2631              	 .loc 11 297 0
 2632 005e 324B     	 ldr r3,.L97+4
 2633 0060 1222     	 movs r2,#18
 2634 0062 1A70     	 strb r2,[r3]
 298:../main.c     **** 			offset_elektryczny = -14100;
 2635              	 .loc 11 298 0
 2636 0064 314B     	 ldr r3,.L97+8
 2637 0066 344A     	 ldr r2,.L97+20
 2638 0068 1A60     	 str r2,[r3]
 299:../main.c     **** 			znak = -1;
 2639              	 .loc 11 299 0
 2640 006a 314B     	 ldr r3,.L97+12
 2641 006c FF22     	 movs r2,#255
 2642 006e 1A70     	 strb r2,[r3]
 300:../main.c     **** 			break;
 2643              	 .loc 11 300 0
 2644 0070 34E0     	 b .L93
 2645              	.L88:
 301:../main.c     **** 		case 3:
 302:../main.c     **** 			adress = 0x13;
 2646              	 .loc 11 302 0
 2647 0072 2D4B     	 ldr r3,.L97+4
 2648 0074 1322     	 movs r2,#19
 2649 0076 1A70     	 strb r2,[r3]
 303:../main.c     **** 			offset_elektryczny = -7850;
 2650              	 .loc 11 303 0
 2651 0078 2C4B     	 ldr r3,.L97+8
 2652 007a 304A     	 ldr r2,.L97+24
 2653 007c 1A60     	 str r2,[r3]
 304:../main.c     **** 			znak = 1;
 2654              	 .loc 11 304 0
 2655 007e 2C4B     	 ldr r3,.L97+12
 2656 0080 0122     	 movs r2,#1
 2657 0082 1A70     	 strb r2,[r3]
 305:../main.c     **** 			break;
 2658              	 .loc 11 305 0
 2659 0084 2AE0     	 b .L93
 2660              	.L89:
 306:../main.c     **** 		case 4:
 307:../main.c     **** 			adress = 0x14;
 2661              	 .loc 11 307 0
 2662 0086 284B     	 ldr r3,.L97+4
 2663 0088 1422     	 movs r2,#20
 2664 008a 1A70     	 strb r2,[r3]
 308:../main.c     **** 			offset_elektryczny = -25500;
 2665              	 .loc 11 308 0
 2666 008c 274B     	 ldr r3,.L97+8
 2667 008e 2C4A     	 ldr r2,.L97+28
 2668 0090 1A60     	 str r2,[r3]
 309:../main.c     **** 			znak = -1;
 2669              	 .loc 11 309 0
 2670 0092 274B     	 ldr r3,.L97+12
 2671 0094 FF22     	 movs r2,#255
 2672 0096 1A70     	 strb r2,[r3]
 310:../main.c     **** 			break;
 2673              	 .loc 11 310 0
 2674 0098 20E0     	 b .L93
 2675              	.L90:
 311:../main.c     **** 		case 5:
 312:../main.c     **** 			adress = 0x15;
 2676              	 .loc 11 312 0
 2677 009a 234B     	 ldr r3,.L97+4
 2678 009c 1522     	 movs r2,#21
 2679 009e 1A70     	 strb r2,[r3]
 313:../main.c     **** 			offset_elektryczny = 32000;
 2680              	 .loc 11 313 0
 2681 00a0 224B     	 ldr r3,.L97+8
 2682 00a2 4FF4FA42 	 mov r2,#32000
 2683 00a6 1A60     	 str r2,[r3]
 314:../main.c     **** 			znak = 1;
 2684              	 .loc 11 314 0
 2685 00a8 214B     	 ldr r3,.L97+12
 2686 00aa 0122     	 movs r2,#1
 2687 00ac 1A70     	 strb r2,[r3]
 315:../main.c     **** 			break;
 2688              	 .loc 11 315 0
 2689 00ae 15E0     	 b .L93
 2690              	.L91:
 316:../main.c     **** 		case 6:
 317:../main.c     **** 			adress = 0x16;
 2691              	 .loc 11 317 0
 2692 00b0 1D4B     	 ldr r3,.L97+4
 2693 00b2 1622     	 movs r2,#22
 2694 00b4 1A70     	 strb r2,[r3]
 318:../main.c     **** 			offset_elektryczny = 25840;
 2695              	 .loc 11 318 0
 2696 00b6 1D4B     	 ldr r3,.L97+8
 2697 00b8 46F2F042 	 movw r2,#25840
 2698 00bc 1A60     	 str r2,[r3]
 319:../main.c     **** 			znak = -1;
 2699              	 .loc 11 319 0
 2700 00be 1C4B     	 ldr r3,.L97+12
 2701 00c0 FF22     	 movs r2,#255
 2702 00c2 1A70     	 strb r2,[r3]
 320:../main.c     **** 			break;
 2703              	 .loc 11 320 0
 2704 00c4 0AE0     	 b .L93
 2705              	.L92:
 321:../main.c     **** 		case 7:
 322:../main.c     **** 			adress = 0x17;
 2706              	 .loc 11 322 0
 2707 00c6 184B     	 ldr r3,.L97+4
 2708 00c8 1722     	 movs r2,#23
 2709 00ca 1A70     	 strb r2,[r3]
 323:../main.c     **** 			offset_elektryczny = -25500;
 2710              	 .loc 11 323 0
 2711 00cc 174B     	 ldr r3,.L97+8
 2712 00ce 1C4A     	 ldr r2,.L97+28
 2713 00d0 1A60     	 str r2,[r3]
 324:../main.c     **** 			znak = 1;
 2714              	 .loc 11 324 0
 2715 00d2 174B     	 ldr r3,.L97+12
 2716 00d4 0122     	 movs r2,#1
 2717 00d6 1A70     	 strb r2,[r3]
 325:../main.c     **** 			break;
 2718              	 .loc 11 325 0
 2719 00d8 00E0     	 b .L93
 2720              	.L96:
 326:../main.c     **** 		default:
 327:../main.c     **** 			break;
 2721              	 .loc 11 327 0
 2722 00da 00BF     	 nop
 2723              	.L93:
 328:../main.c     **** 	}
 329:../main.c     **** 	PI_Iq.kP = 4500;
 2724              	 .loc 11 329 0
 2725 00dc 194B     	 ldr r3,.L97+32
 2726 00de 41F29412 	 movw r2,#4500
 2727 00e2 1A80     	 strh r2,[r3]
 330:../main.c     **** 	PI_Iq.kI =412;
 2728              	 .loc 11 330 0
 2729 00e4 174B     	 ldr r3,.L97+32
 2730 00e6 4FF4CE72 	 mov r2,#412
 2731 00ea 5A80     	 strh r2,[r3,#2]
 331:../main.c     **** 	PI_Id.kP =2107;
 2732              	 .loc 11 331 0
 2733 00ec 164B     	 ldr r3,.L97+36
 2734 00ee 40F63B02 	 movw r2,#2107
 2735 00f2 1A80     	 strh r2,[r3]
 332:../main.c     **** 	PI_Id.kI =1130;
 2736              	 .loc 11 332 0
 2737 00f4 144B     	 ldr r3,.L97+36
 2738 00f6 40F26A42 	 movw r2,#1130
 2739 00fa 5A80     	 strh r2,[r3,#2]
 333:../main.c     **** 	RS_Init();
 2740              	 .loc 11 333 0
 2741 00fc FFF7FEFF 	 bl RS_Init
 334:../main.c     **** 	while(init == 0)
 2742              	 .loc 11 334 0
 2743 0100 07E0     	 b .L94
 2744              	.L95:
 335:../main.c     **** 	{
 336:../main.c     **** 		UART_Receive(&UART_0, &rxByte,1);
 2745              	 .loc 11 336 0
 2746 0102 1248     	 ldr r0,.L97+40
 2747 0104 1249     	 ldr r1,.L97+44
 2748 0106 0122     	 movs r2,#1
 2749 0108 FFF7FEFF 	 bl UART_Receive
 337:../main.c     **** 
 338:../main.c     **** 		DIGITAL_IO_ToggleOutput(&LED);
 2750              	 .loc 11 338 0
 2751 010c 1148     	 ldr r0,.L97+48
 2752 010e FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 2753              	.L94:
 334:../main.c     **** 	{
 2754              	 .loc 11 334 0
 2755 0112 114B     	 ldr r3,.L97+52
 2756 0114 1B78     	 ldrb r3,[r3]
 2757 0116 002B     	 cmp r3,#0
 2758 0118 F3D0     	 beq .L95
 339:../main.c     **** 	}
 340:../main.c     **** 	DIGITAL_IO_SetOutputLow(&LED);
 2759              	 .loc 11 340 0
 2760 011a 0E48     	 ldr r0,.L97+48
 2761 011c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 341:../main.c     **** }
 2762              	 .loc 11 341 0
 2763 0120 80BD     	 pop {r7,pc}
 2764              	.L98:
 2765 0122 00BF     	 .align 2
 2766              	.L97:
 2767 0124 00000000 	 .word silnik
 2768 0128 00000000 	 .word adress
 2769 012c 00000000 	 .word offset_elektryczny
 2770 0130 00000000 	 .word znak
 2771 0134 CAF9FFFF 	 .word -1590
 2772 0138 ECC8FFFF 	 .word -14100
 2773 013c 56E1FFFF 	 .word -7850
 2774 0140 649CFFFF 	 .word -25500
 2775 0144 00000000 	 .word PI_Iq
 2776 0148 00000000 	 .word PI_Id
 2777 014c 00000000 	 .word UART_0
 2778 0150 00000000 	 .word rxByte
 2779 0154 00000000 	 .word LED
 2780 0158 00000000 	 .word init
 2781              	 .cfi_endproc
 2782              	.LFE561:
 2784              	 .section .text.end_transmit,"ax",%progbits
 2785              	 .align 2
 2786              	 .global end_transmit
 2787              	 .thumb
 2788              	 .thumb_func
 2790              	end_transmit:
 2791              	.LFB562:
 342:../main.c     **** void end_transmit()
 343:../main.c     **** {
 2792              	 .loc 11 343 0
 2793              	 .cfi_startproc
 2794              	 
 2795              	 
 2796              	 
 2797 0000 80B4     	 push {r7}
 2798              	.LCFI128:
 2799              	 .cfi_def_cfa_offset 4
 2800              	 .cfi_offset 7,-4
 2801 0002 00AF     	 add r7,sp,#0
 2802              	.LCFI129:
 2803              	 .cfi_def_cfa_register 7
 344:../main.c     **** }
 2804              	 .loc 11 344 0
 2805 0004 BD46     	 mov sp,r7
 2806              	.LCFI130:
 2807              	 .cfi_def_cfa_register 13
 2808              	 
 2809 0006 5DF8047B 	 ldr r7,[sp],#4
 2810              	.LCFI131:
 2811              	 .cfi_restore 7
 2812              	 .cfi_def_cfa_offset 0
 2813 000a 7047     	 bx lr
 2814              	 .cfi_endproc
 2815              	.LFE562:
 2817              	 .section .text.end_receive,"ax",%progbits
 2818              	 .align 2
 2819              	 .global end_receive
 2820              	 .thumb
 2821              	 .thumb_func
 2823              	end_receive:
 2824              	.LFB563:
 345:../main.c     **** void end_receive()
 346:../main.c     **** {
 2825              	 .loc 11 346 0
 2826              	 .cfi_startproc
 2827              	 
 2828              	 
 2829 0000 80B5     	 push {r7,lr}
 2830              	.LCFI132:
 2831              	 .cfi_def_cfa_offset 8
 2832              	 .cfi_offset 7,-8
 2833              	 .cfi_offset 14,-4
 2834 0002 00AF     	 add r7,sp,#0
 2835              	.LCFI133:
 2836              	 .cfi_def_cfa_register 7
 347:../main.c     **** 	if(rxByte == SOF)
 2837              	 .loc 11 347 0
 2838 0004 1A4B     	 ldr r3,.L104
 2839 0006 1B78     	 ldrb r3,[r3]
 2840 0008 CC2B     	 cmp r3,#204
 2841 000a 07D1     	 bne .L101
 348:../main.c     **** 	{
 349:../main.c     **** 		rxData[0] = rxByte;
 2842              	 .loc 11 349 0
 2843 000c 184B     	 ldr r3,.L104
 2844 000e 1A78     	 ldrb r2,[r3]
 2845 0010 184B     	 ldr r3,.L104+4
 2846 0012 1A70     	 strb r2,[r3]
 350:../main.c     **** 		iterator_wiadomosci = 1;
 2847              	 .loc 11 350 0
 2848 0014 184B     	 ldr r3,.L104+8
 2849 0016 0122     	 movs r2,#1
 2850 0018 1A70     	 strb r2,[r3]
 2851 001a 23E0     	 b .L102
 2852              	.L101:
 351:../main.c     **** 	}
 352:../main.c     **** 	else if (rxByte == EOF)
 2853              	 .loc 11 352 0
 2854 001c 144B     	 ldr r3,.L104
 2855 001e 1B78     	 ldrb r3,[r3]
 2856 0020 DD2B     	 cmp r3,#221
 2857 0022 0ED1     	 bne .L103
 353:../main.c     **** 	{
 354:../main.c     **** 		rxData[iterator_wiadomosci +1] = EOF;
 2858              	 .loc 11 354 0
 2859 0024 144B     	 ldr r3,.L104+8
 2860 0026 1B78     	 ldrb r3,[r3]
 2861 0028 0133     	 adds r3,r3,#1
 2862 002a 124A     	 ldr r2,.L104+4
 2863 002c DD21     	 movs r1,#221
 2864 002e D154     	 strb r1,[r2,r3]
 355:../main.c     **** 		iterator_wiadomosci++;
 2865              	 .loc 11 355 0
 2866 0030 114B     	 ldr r3,.L104+8
 2867 0032 1B78     	 ldrb r3,[r3]
 2868 0034 0133     	 adds r3,r3,#1
 2869 0036 DAB2     	 uxtb r2,r3
 2870 0038 0F4B     	 ldr r3,.L104+8
 2871 003a 1A70     	 strb r2,[r3]
 356:../main.c     **** 		interpreter_wiadomosci();
 2872              	 .loc 11 356 0
 2873 003c FFF7FEFF 	 bl interpreter_wiadomosci
 2874 0040 10E0     	 b .L102
 2875              	.L103:
 357:../main.c     **** 
 358:../main.c     **** 	}
 359:../main.c     **** 	else if ( iterator_wiadomosci < 10)
 2876              	 .loc 11 359 0
 2877 0042 0D4B     	 ldr r3,.L104+8
 2878 0044 1B78     	 ldrb r3,[r3]
 2879 0046 092B     	 cmp r3,#9
 2880 0048 0CD8     	 bhi .L102
 360:../main.c     **** 	{
 361:../main.c     **** 		rxData[iterator_wiadomosci] =rxByte;
 2881              	 .loc 11 361 0
 2882 004a 0B4B     	 ldr r3,.L104+8
 2883 004c 1B78     	 ldrb r3,[r3]
 2884 004e 1A46     	 mov r2,r3
 2885 0050 074B     	 ldr r3,.L104
 2886 0052 1978     	 ldrb r1,[r3]
 2887 0054 074B     	 ldr r3,.L104+4
 2888 0056 9954     	 strb r1,[r3,r2]
 362:../main.c     **** 		iterator_wiadomosci++;
 2889              	 .loc 11 362 0
 2890 0058 074B     	 ldr r3,.L104+8
 2891 005a 1B78     	 ldrb r3,[r3]
 2892 005c 0133     	 adds r3,r3,#1
 2893 005e DAB2     	 uxtb r2,r3
 2894 0060 054B     	 ldr r3,.L104+8
 2895 0062 1A70     	 strb r2,[r3]
 2896              	.L102:
 363:../main.c     **** 	}
 364:../main.c     **** 	UART_Receive(&UART_0, &rxByte,1);
 2897              	 .loc 11 364 0
 2898 0064 0548     	 ldr r0,.L104+12
 2899 0066 0249     	 ldr r1,.L104
 2900 0068 0122     	 movs r2,#1
 2901 006a FFF7FEFF 	 bl UART_Receive
 365:../main.c     **** }
 2902              	 .loc 11 365 0
 2903 006e 80BD     	 pop {r7,pc}
 2904              	.L105:
 2905              	 .align 2
 2906              	.L104:
 2907 0070 00000000 	 .word rxByte
 2908 0074 00000000 	 .word rxData
 2909 0078 00000000 	 .word iterator_wiadomosci
 2910 007c 00000000 	 .word UART_0
 2911              	 .cfi_endproc
 2912              	.LFE563:
 2914              	 .section .text.interpreter_wiadomosci,"ax",%progbits
 2915              	 .align 2
 2916              	 .global interpreter_wiadomosci
 2917              	 .thumb
 2918              	 .thumb_func
 2920              	interpreter_wiadomosci:
 2921              	.LFB564:
 366:../main.c     **** void interpreter_wiadomosci()
 367:../main.c     **** {
 2922              	 .loc 11 367 0
 2923              	 .cfi_startproc
 2924              	 
 2925              	 
 2926              	 
 2927 0000 80B4     	 push {r7}
 2928              	.LCFI134:
 2929              	 .cfi_def_cfa_offset 4
 2930              	 .cfi_offset 7,-4
 2931 0002 00AF     	 add r7,sp,#0
 2932              	.LCFI135:
 2933              	 .cfi_def_cfa_register 7
 368:../main.c     **** 	if(rxData[0] == SOF && rxData[1] == adress)
 2934              	 .loc 11 368 0
 2935 0004 364B     	 ldr r3,.L111
 2936 0006 1B78     	 ldrb r3,[r3]
 2937 0008 CC2B     	 cmp r3,#204
 2938 000a 65D1     	 bne .L106
 2939              	 .loc 11 368 0 is_stmt 0 discriminator 1
 2940 000c 344B     	 ldr r3,.L111
 2941 000e 5A78     	 ldrb r2,[r3,#1]
 2942 0010 344B     	 ldr r3,.L111+4
 2943 0012 1B78     	 ldrb r3,[r3]
 2944 0014 9A42     	 cmp r2,r3
 2945 0016 5FD1     	 bne .L106
 369:../main.c     **** 	{
 370:../main.c     **** 		if(rxData[2] == INIT)			//inicjalizacja
 2946              	 .loc 11 370 0 is_stmt 1
 2947 0018 314B     	 ldr r3,.L111
 2948 001a 9B78     	 ldrb r3,[r3,#2]
 2949 001c A12B     	 cmp r3,#161
 2950 001e 0DD1     	 bne .L108
 371:../main.c     **** 		{
 372:../main.c     **** 			init = 1;
 2951              	 .loc 11 372 0
 2952 0020 314B     	 ldr r3,.L111+8
 2953 0022 0122     	 movs r2,#1
 2954 0024 1A70     	 strb r2,[r3]
 373:../main.c     **** 			txData[3] =INIT;
 2955              	 .loc 11 373 0
 2956 0026 314B     	 ldr r3,.L111+12
 2957 0028 A122     	 movs r2,#161
 2958 002a DA70     	 strb r2,[r3,#3]
 374:../main.c     **** 			txData[4] =init;
 2959              	 .loc 11 374 0
 2960 002c 2E4B     	 ldr r3,.L111+8
 2961 002e 1A78     	 ldrb r2,[r3]
 2962 0030 2E4B     	 ldr r3,.L111+12
 2963 0032 1A71     	 strb r2,[r3,#4]
 375:../main.c     **** 			txData[5] = EOF;
 2964              	 .loc 11 375 0
 2965 0034 2D4B     	 ldr r3,.L111+12
 2966 0036 DD22     	 movs r2,#221
 2967 0038 5A71     	 strb r2,[r3,#5]
 2968 003a 4DE0     	 b .L106
 2969              	.L108:
 376:../main.c     **** 			//UART_Transmit(&UART_0, txData, 6);
 377:../main.c     **** 		}
 378:../main.c     **** 		else if(rxData[2] == CHECK)				//status check
 2970              	 .loc 11 378 0
 2971 003c 284B     	 ldr r3,.L111
 2972 003e 9B78     	 ldrb r3,[r3,#2]
 2973 0040 A32B     	 cmp r3,#163
 2974 0042 0ED1     	 bne .L109
 379:../main.c     **** 		{
 380:../main.c     **** 			txData[3] =CHECK;
 2975              	 .loc 11 380 0
 2976 0044 294B     	 ldr r3,.L111+12
 2977 0046 A322     	 movs r2,#163
 2978 0048 DA70     	 strb r2,[r3,#3]
 381:../main.c     **** 			txData[4] =init;
 2979              	 .loc 11 381 0
 2980 004a 274B     	 ldr r3,.L111+8
 2981 004c 1A78     	 ldrb r2,[r3]
 2982 004e 274B     	 ldr r3,.L111+12
 2983 0050 1A71     	 strb r2,[r3,#4]
 382:../main.c     **** 			txData[5] = silnik;
 2984              	 .loc 11 382 0
 2985 0052 274B     	 ldr r3,.L111+16
 2986 0054 1A78     	 ldrb r2,[r3]
 2987 0056 254B     	 ldr r3,.L111+12
 2988 0058 5A71     	 strb r2,[r3,#5]
 383:../main.c     **** 			txData[6] = EOF;
 2989              	 .loc 11 383 0
 2990 005a 244B     	 ldr r3,.L111+12
 2991 005c DD22     	 movs r2,#221
 2992 005e 9A71     	 strb r2,[r3,#6]
 2993 0060 3AE0     	 b .L106
 2994              	.L109:
 384:../main.c     **** 			//UART_Transmit(&UART_0, txData, 7);
 385:../main.c     **** 		}
 386:../main.c     **** 		else	if ( init == 1)														//zadawanie momentu
 2995              	 .loc 11 386 0
 2996 0062 214B     	 ldr r3,.L111+8
 2997 0064 1B78     	 ldrb r3,[r3]
 2998 0066 012B     	 cmp r3,#1
 2999 0068 36D1     	 bne .L106
 387:../main.c     **** 		{
 388:../main.c     **** 			poz_zad = rxData[2] << 8 | rxData[3];
 3000              	 .loc 11 388 0
 3001 006a 1D4B     	 ldr r3,.L111
 3002 006c 9B78     	 ldrb r3,[r3,#2]
 3003 006e 1B02     	 lsls r3,r3,#8
 3004 0070 9AB2     	 uxth r2,r3
 3005 0072 1B4B     	 ldr r3,.L111
 3006 0074 DB78     	 ldrb r3,[r3,#3]
 3007 0076 9BB2     	 uxth r3,r3
 3008 0078 1343     	 orrs r3,r3,r2
 3009 007a 9BB2     	 uxth r3,r3
 3010 007c 9AB2     	 uxth r2,r3
 3011 007e 1D4B     	 ldr r3,.L111+20
 3012 0080 1A80     	 strh r2,[r3]
 389:../main.c     **** 			ks = rxData[4] << 8 | rxData[5];
 3013              	 .loc 11 389 0
 3014 0082 174B     	 ldr r3,.L111
 3015 0084 1B79     	 ldrb r3,[r3,#4]
 3016 0086 1B02     	 lsls r3,r3,#8
 3017 0088 9AB2     	 uxth r2,r3
 3018 008a 154B     	 ldr r3,.L111
 3019 008c 5B79     	 ldrb r3,[r3,#5]
 3020 008e 9BB2     	 uxth r3,r3
 3021 0090 1343     	 orrs r3,r3,r2
 3022 0092 9BB2     	 uxth r3,r3
 3023 0094 9AB2     	 uxth r2,r3
 3024 0096 184B     	 ldr r3,.L111+24
 3025 0098 1A80     	 strh r2,[r3]
 390:../main.c     **** 			kd = rxData[6] << 8 | txData[7];
 3026              	 .loc 11 390 0
 3027 009a 114B     	 ldr r3,.L111
 3028 009c 9B79     	 ldrb r3,[r3,#6]
 3029 009e 1B02     	 lsls r3,r3,#8
 3030 00a0 9AB2     	 uxth r2,r3
 3031 00a2 124B     	 ldr r3,.L111+12
 3032 00a4 DB79     	 ldrb r3,[r3,#7]
 3033 00a6 9BB2     	 uxth r3,r3
 3034 00a8 1343     	 orrs r3,r3,r2
 3035 00aa 9BB2     	 uxth r3,r3
 3036 00ac 9AB2     	 uxth r2,r3
 3037 00ae 134B     	 ldr r3,.L111+28
 3038 00b0 1A80     	 strh r2,[r3]
 391:../main.c     **** 			if(poz_zad > 40000 || poz_zad < -2000 || ks > 12000)					//basic error correction mechanism
 3039              	 .loc 11 391 0
 3040 00b2 104B     	 ldr r3,.L111+20
 3041 00b4 1B88     	 ldrh r3,[r3]
 3042 00b6 49F64042 	 movw r2,#40000
 3043 00ba 9342     	 cmp r3,r2
 3044 00bc 05D8     	 bhi .L110
 3045              	 .loc 11 391 0 is_stmt 0 discriminator 1
 3046 00be 0E4B     	 ldr r3,.L111+24
 3047 00c0 1B88     	 ldrh r3,[r3]
 3048 00c2 42F6E062 	 movw r2,#12000
 3049 00c6 9342     	 cmp r3,r2
 3050 00c8 06D9     	 bls .L106
 3051              	.L110:
 392:../main.c     **** 				{ poz_zad = 16000; ks = 100; }
 3052              	 .loc 11 392 0 is_stmt 1
 3053 00ca 0A4B     	 ldr r3,.L111+20
 3054 00cc 4FF47A52 	 mov r2,#16000
 3055 00d0 1A80     	 strh r2,[r3]
 3056 00d2 094B     	 ldr r3,.L111+24
 3057 00d4 6422     	 movs r2,#100
 3058 00d6 1A80     	 strh r2,[r3]
 3059              	.L106:
 393:../main.c     **** 			//UART_Transmit(&UART_0, txData, 10);
 394:../main.c     **** 		}
 395:../main.c     **** 	}
 396:../main.c     **** }
 3060              	 .loc 11 396 0
 3061 00d8 BD46     	 mov sp,r7
 3062              	.LCFI136:
 3063              	 .cfi_def_cfa_register 13
 3064              	 
 3065 00da 5DF8047B 	 ldr r7,[sp],#4
 3066              	.LCFI137:
 3067              	 .cfi_restore 7
 3068              	 .cfi_def_cfa_offset 0
 3069 00de 7047     	 bx lr
 3070              	.L112:
 3071              	 .align 2
 3072              	.L111:
 3073 00e0 00000000 	 .word rxData
 3074 00e4 00000000 	 .word adress
 3075 00e8 00000000 	 .word init
 3076 00ec 00000000 	 .word txData
 3077 00f0 00000000 	 .word silnik
 3078 00f4 00000000 	 .word poz_zad
 3079 00f8 00000000 	 .word ks
 3080 00fc 00000000 	 .word kd
 3081              	 .cfi_endproc
 3082              	.LFE564:
 3084              	 .section .text.delay,"ax",%progbits
 3085              	 .align 2
 3086              	 .global delay
 3087              	 .thumb
 3088              	 .thumb_func
 3090              	delay:
 3091              	.LFB565:
 397:../main.c     **** void delay(uint32_t us)
 398:../main.c     **** {
 3092              	 .loc 11 398 0
 3093              	 .cfi_startproc
 3094              	 
 3095              	 
 3096 0000 80B5     	 push {r7,lr}
 3097              	.LCFI138:
 3098              	 .cfi_def_cfa_offset 8
 3099              	 .cfi_offset 7,-8
 3100              	 .cfi_offset 14,-4
 3101 0002 82B0     	 sub sp,sp,#8
 3102              	.LCFI139:
 3103              	 .cfi_def_cfa_offset 16
 3104 0004 00AF     	 add r7,sp,#0
 3105              	.LCFI140:
 3106              	 .cfi_def_cfa_register 7
 3107 0006 7860     	 str r0,[r7,#4]
 399:../main.c     **** 	is_delay = 1;
 3108              	 .loc 11 399 0
 3109 0008 0A4B     	 ldr r3,.L115
 3110 000a 0122     	 movs r2,#1
 3111 000c 1A60     	 str r2,[r3]
 400:../main.c     **** 	TIMER_SetTimeInterval(&DELAY, us);
 3112              	 .loc 11 400 0
 3113 000e 0A48     	 ldr r0,.L115+4
 3114 0010 7968     	 ldr r1,[r7,#4]
 3115 0012 FFF7FEFF 	 bl TIMER_SetTimeInterval
 401:../main.c     **** 	TIMER_Start(&DELAY);
 3116              	 .loc 11 401 0
 3117 0016 0848     	 ldr r0,.L115+4
 3118 0018 FFF7FEFF 	 bl TIMER_Start
 402:../main.c     **** 	while(is_delay);
 3119              	 .loc 11 402 0
 3120 001c 00BF     	 nop
 3121              	.L114:
 3122              	 .loc 11 402 0 is_stmt 0 discriminator 1
 3123 001e 054B     	 ldr r3,.L115
 3124 0020 1B68     	 ldr r3,[r3]
 3125 0022 002B     	 cmp r3,#0
 3126 0024 FBD1     	 bne .L114
 403:../main.c     **** 	TIMER_Stop(&DELAY);
 3127              	 .loc 11 403 0 is_stmt 1
 3128 0026 0448     	 ldr r0,.L115+4
 3129 0028 FFF7FEFF 	 bl TIMER_Stop
 404:../main.c     **** }
 3130              	 .loc 11 404 0
 3131 002c 0837     	 adds r7,r7,#8
 3132              	.LCFI141:
 3133              	 .cfi_def_cfa_offset 8
 3134 002e BD46     	 mov sp,r7
 3135              	.LCFI142:
 3136              	 .cfi_def_cfa_register 13
 3137              	 
 3138 0030 80BD     	 pop {r7,pc}
 3139              	.L116:
 3140 0032 00BF     	 .align 2
 3141              	.L115:
 3142 0034 00000000 	 .word is_delay
 3143 0038 00000000 	 .word DELAY
 3144              	 .cfi_endproc
 3145              	.LFE565:
 3147              	 .section .text.CCU43_1_IRQHandler,"ax",%progbits
 3148              	 .align 2
 3149              	 .global CCU43_1_IRQHandler
 3150              	 .thumb
 3151              	 .thumb_func
 3153              	CCU43_1_IRQHandler:
 3154              	.LFB566:
 405:../main.c     **** void TIMER_IRQ()
 406:../main.c     **** {
 3155              	 .loc 11 406 0
 3156              	 .cfi_startproc
 3157              	 
 3158              	 
 3159              	 
 3160 0000 80B4     	 push {r7}
 3161              	.LCFI143:
 3162              	 .cfi_def_cfa_offset 4
 3163              	 .cfi_offset 7,-4
 3164 0002 00AF     	 add r7,sp,#0
 3165              	.LCFI144:
 3166              	 .cfi_def_cfa_register 7
 407:../main.c     **** 	is_delay = 0;
 3167              	 .loc 11 407 0
 3168 0004 034B     	 ldr r3,.L118
 3169 0006 0022     	 movs r2,#0
 3170 0008 1A60     	 str r2,[r3]
 408:../main.c     **** }
 3171              	 .loc 11 408 0
 3172 000a BD46     	 mov sp,r7
 3173              	.LCFI145:
 3174              	 .cfi_def_cfa_register 13
 3175              	 
 3176 000c 5DF8047B 	 ldr r7,[sp],#4
 3177              	.LCFI146:
 3178              	 .cfi_restore 7
 3179              	 .cfi_def_cfa_offset 0
 3180 0010 7047     	 bx lr
 3181              	.L119:
 3182 0012 00BF     	 .align 2
 3183              	.L118:
 3184 0014 00000000 	 .word is_delay
 3185              	 .cfi_endproc
 3186              	.LFE566:
 3188              	 .text
 3189              	.Letext0:
 3190              	 .file 12 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3191              	 .file 13 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3192              	 .file 14 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3193              	 .file 15 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc4_scu.h"
 3194              	 .file 16 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc4_gpio.h"
 3195              	 .file 17 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SYSTIMER/systimer.h"
 3196              	 .file 18 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_ccu8.h"
 3197              	 .file 19 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 3198              	 .file 20 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/PWM_SVM/pwm_svm.h"
 3199              	 .file 21 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_uart.h"
 3200              	 .file 22 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/UART/uart.h"
 3201              	 .file 23 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_ccu4.h"
 3202              	 .file 24 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 3203              	 .file 25 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/TIMER/timer.h"
 3204              	 .file 26 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAVE.h"
 3205              	 .file 27 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Include/core_cm4.h"
 3206              	 .file 28 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 3207              	 .file 29 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 3208              	 .file 30 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3209              	 .file 31 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/PWM_SVM/pwm_svm_extern.h"
 3210              	 .file 32 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 3211              	 .file 33 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAC/dac_extern.h"
 3212              	 .file 34 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/UART/uart_extern.h"
 3213              	 .file 35 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/TIMER/timer_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:162    .text.XMC_USIC_CH_ConfigureShiftClockOutput:00000000 $t
    {standard input}:166    .text.XMC_USIC_CH_ConfigureShiftClockOutput:00000000 XMC_USIC_CH_ConfigureShiftClockOutput
    {standard input}:218    .text.XMC_SPI_CH_ConfigureShiftClockOutput:00000000 $t
    {standard input}:222    .text.XMC_SPI_CH_ConfigureShiftClockOutput:00000000 XMC_SPI_CH_ConfigureShiftClockOutput
    {standard input}:261    .text.SPI_MASTER_IsRxBusy:00000000 $t
    {standard input}:265    .text.SPI_MASTER_IsRxBusy:00000000 SPI_MASTER_IsRxBusy
    {standard input}:307    .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 $t
    {standard input}:311    .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 SPI_MASTER_EnableSlaveSelectSignal
    {standard input}:356    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 $t
    {standard input}:360    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 SPI_MASTER_DisableSlaveSelectSignal
    {standard input}:396    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:400    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:440    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:444    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:483    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:487    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:526    .text.XMC_VADC_GROUP_GetResult:00000000 $t
    {standard input}:530    .text.XMC_VADC_GROUP_GetResult:00000000 XMC_VADC_GROUP_GetResult
    {standard input}:574    .text.ADC_MEASUREMENT_ADV_GetResult:00000000 $t
    {standard input}:578    .text.ADC_MEASUREMENT_ADV_GetResult:00000000 ADC_MEASUREMENT_ADV_GetResult
    {standard input}:630    .text.ADC_MEASUREMENT_ADV_GetResult:00000038 $d
    {standard input}:635    .text.XMC_DAC_CH_SetMode:00000000 $t
    {standard input}:639    .text.XMC_DAC_CH_SetMode:00000000 XMC_DAC_CH_SetMode
    {standard input}:692    .text.DAC_Enable:00000000 $t
    {standard input}:696    .text.DAC_Enable:00000000 DAC_Enable
    {standard input}:742    .data.silnik:00000000 silnik
    {standard input}:748    .bss.adress:00000000 adress
    {standard input}:749    .bss.adress:00000000 $d
    {standard input}:754    .bss.init:00000000 init
    {standard input}:755    .bss.init:00000000 $d
    {standard input}:760    .bss.znak:00000000 znak
    {standard input}:761    .bss.znak:00000000 $d
    {standard input}:767    .data.is_delay:00000000 is_delay
    {standard input}:764    .data.is_delay:00000000 $d
    {standard input}:774    .bss.debug:00000000 debug
    {standard input}:771    .bss.debug:00000000 $d
    {standard input}:781    .bss.rxData:00000000 rxData
    {standard input}:778    .bss.rxData:00000000 $d
    {standard input}:788    .bss.txData:00000000 txData
    {standard input}:785    .bss.txData:00000000 $d
    {standard input}:794    .bss.rxByte:00000000 rxByte
    {standard input}:795    .bss.rxByte:00000000 $d
    {standard input}:800    .bss.iterator_wiadomosci:00000000 iterator_wiadomosci
    {standard input}:801    .bss.iterator_wiadomosci:00000000 $d
    {standard input}:807    .data.poz_zad:00000000 poz_zad
    {standard input}:804    .data.poz_zad:00000000 $d
    {standard input}:814    .data.ks:00000000 ks
    {standard input}:811    .data.ks:00000000 $d
    {standard input}:821    .data.kd:00000000 kd
    {standard input}:818    .data.kd:00000000 $d
    {standard input}:827    .data.liczba_par_biegunow:00000000 liczba_par_biegunow
                            *COM*:00000002 Iq_zadane
                            *COM*:00000004 Iq_poprzednie
    {standard input}:836    .bss.Vq_zadane:00000000 Vq_zadane
    {standard input}:833    .bss.Vq_zadane:00000000 $d
    {standard input}:843    .bss.uchyb_Iq:00000000 uchyb_Iq
    {standard input}:840    .bss.uchyb_Iq:00000000 $d
    {standard input}:850    .bss.uchyb_poprzedni_Iq:00000000 uchyb_poprzedni_Iq
    {standard input}:847    .bss.uchyb_poprzedni_Iq:00000000 $d
                            *COM*:00000004 Id_zadane
                            *COM*:00000004 Id_poprzednie
    {standard input}:859    .bss.Vd_zadane:00000000 Vd_zadane
    {standard input}:856    .bss.Vd_zadane:00000000 $d
                            *COM*:00000004 uchyb_Id
    {standard input}:867    .bss.I_alfa:00000000 I_alfa
    {standard input}:864    .bss.I_alfa:00000000 $d
    {standard input}:874    .bss.I_beta:00000000 I_beta
    {standard input}:871    .bss.I_beta:00000000 $d
    {standard input}:881    .bss.V_alfa:00000000 V_alfa
    {standard input}:878    .bss.V_alfa:00000000 $d
    {standard input}:888    .bss.V_beta:00000000 V_beta
    {standard input}:885    .bss.V_beta:00000000 $d
    {standard input}:895    .bss.V_ref:00000000 V_ref
    {standard input}:892    .bss.V_ref:00000000 $d
    {standard input}:902    .bss.angle32:00000000 angle32
    {standard input}:899    .bss.angle32:00000000 $d
    {standard input}:909    .bss.I_net:00000000 I_net
    {standard input}:906    .bss.I_net:00000000 $d
                            *COM*:00000002 tData
                            *COM*:00000006 rData
    {standard input}:918    .bss.kat_enkoder:00000000 kat_enkoder
    {standard input}:915    .bss.kat_enkoder:00000000 $d
    {standard input}:925    .bss.kat_enkoder_poprzedni:00000000 kat_enkoder_poprzedni
    {standard input}:922    .bss.kat_enkoder_poprzedni:00000000 $d
                            *COM*:00000002 predkosc_enkoder
    {standard input}:933    .data.predkosc_zadana:00000000 predkosc_zadana
    {standard input}:930    .data.predkosc_zadana:00000000 $d
    {standard input}:940    .bss.kat_elektryczny:00000000 kat_elektryczny
    {standard input}:937    .bss.kat_elektryczny:00000000 $d
    {standard input}:947    .bss.kat_absolutny:00000000 kat_absolutny
    {standard input}:944    .bss.kat_absolutny:00000000 $d
    {standard input}:954    .bss.offset_elektryczny:00000000 offset_elektryczny
    {standard input}:951    .bss.offset_elektryczny:00000000 $d
    {standard input}:961    .bss.angle:00000000 angle
    {standard input}:958    .bss.angle:00000000 $d
    {standard input}:968    .data.v3v:00000000 v3v
    {standard input}:965    .data.v3v:00000000 $d
    {standard input}:975    .bss.iu:00000000 iu
    {standard input}:972    .bss.iu:00000000 $d
    {standard input}:982    .bss.iuOffset:00000000 iuOffset
    {standard input}:979    .bss.iuOffset:00000000 $d
    {standard input}:989    .bss.iv:00000000 iv
    {standard input}:986    .bss.iv:00000000 $d
    {standard input}:996    .bss.ivOffset:00000000 ivOffset
    {standard input}:993    .bss.ivOffset:00000000 $d
    {standard input}:1003   .bss.iw:00000000 iw
    {standard input}:1000   .bss.iw:00000000 $d
    {standard input}:1010   .bss.iwOffset:00000000 iwOffset
    {standard input}:1007   .bss.iwOffset:00000000 $d
    {standard input}:1017   .bss.i:00000000 i
    {standard input}:1014   .bss.i:00000000 $d
    {standard input}:1024   .bss.icale:00000000 icale
    {standard input}:1021   .bss.icale:00000000 $d
                            *COM*:0000001c PI_Id
                            *COM*:0000001c PI_Iq
                            *COM*:0000001c PI_predkosc
    {standard input}:1030   .text.PI_REG:00000000 $t
    {standard input}:1035   .text.PI_REG:00000000 PI_REG
    {standard input}:1159   .text.PI_REG:000000b0 $d
    {standard input}:1164   .text.RS_Init:00000000 $t
    {standard input}:1169   .text.RS_Init:00000000 RS_Init
    {standard input}:1213   .text.RS_Init:00000028 $d
                            *COM*:00000004 tDataZero
    {standard input}:1224   .bss.t:00000000 t
    {standard input}:1221   .bss.t:00000000 $d
    {standard input}:1227   .text.main:00000000 $t
    {standard input}:1232   .text.main:00000000 main
    {standard input}:2568   .text.XMC_Init:00000000 XMC_Init
    {standard input}:2107   .text.DRV_START:00000000 DRV_START
    {standard input}:1651   .text.enkoder:00000000 enkoder
    {standard input}:1729   .text.SYS1:00000000 SYS1
    {standard input}:1405   .text.main:00000110 $d
    {standard input}:1432   .text.SYS2:00000000 SYS2
                            *COM*:00000004 uchyb
    {standard input}:1427   .text.SYS2:00000000 $t
    {standard input}:1637   .text.SYS2:00000134 $d
    {standard input}:1646   .text.enkoder:00000000 $t
    {standard input}:1716   .text.enkoder:0000004c $d
    {standard input}:1724   .text.SYS1:00000000 $t
    {standard input}:2341   .text.LiczeniePradu:00000000 LiczeniePradu
    {standard input}:2071   .text.SYS1:00000268 $d
    {standard input}:2102   .text.DRV_START:00000000 $t
    {standard input}:2324   .text.DRV_START:0000013c $d
    {standard input}:2336   .text.LiczeniePradu:00000000 $t
    {standard input}:2483   .text.LiczeniePradu:000000f0 $d
    {standard input}:2497   .text.CCU80_2_IRQHandler:00000000 $t
    {standard input}:2502   .text.CCU80_2_IRQHandler:00000000 CCU80_2_IRQHandler
    {standard input}:2530   .text.ADC_Pomiary:00000000 $t
    {standard input}:2535   .text.ADC_Pomiary:00000000 ADC_Pomiary
    {standard input}:2563   .text.XMC_Init:00000000 $t
    {standard input}:2591   .text.XMC_Init:00000014 $d
    {standard input}:2599   .text.XMC_Init:00000034 $t
    {standard input}:2767   .text.XMC_Init:00000124 $d
    {standard input}:2785   .text.end_transmit:00000000 $t
    {standard input}:2790   .text.end_transmit:00000000 end_transmit
    {standard input}:2818   .text.end_receive:00000000 $t
    {standard input}:2823   .text.end_receive:00000000 end_receive
    {standard input}:2920   .text.interpreter_wiadomosci:00000000 interpreter_wiadomosci
    {standard input}:2907   .text.end_receive:00000070 $d
    {standard input}:2915   .text.interpreter_wiadomosci:00000000 $t
    {standard input}:3073   .text.interpreter_wiadomosci:000000e0 $d
    {standard input}:3085   .text.delay:00000000 $t
    {standard input}:3090   .text.delay:00000000 delay
    {standard input}:3142   .text.delay:00000034 $d
    {standard input}:3148   .text.CCU43_1_IRQHandler:00000000 $t
    {standard input}:3153   .text.CCU43_1_IRQHandler:00000000 CCU43_1_IRQHandler
    {standard input}:3184   .text.CCU43_1_IRQHandler:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_EnableSlaveSelect
XMC_SPI_CH_DisableSlaveSelect
group_ptrs
DAVE_Init
UART_Init
SYSTIMER_CreateTimer
SPI_MASTER_Init
PWM_SVM_Start
PWM_SVM_SVMUpdate
SYSTIMER_StartTimer
UART_0
SIGNAL
SPI_enkoder
ANALOG
ANALOG2
SVPWM
SPI_MASTER_Transfer
MOTOR_LIB_IParkTransform
MOTOR_LIB_Car2Pol
sqrtf
PWM_SVM_InverterEnable
SPI_MASTER_Transmit
DC_CAL
ADC_U_Channel_A_handle
ADC_V_Channel_A_handle
UART_Receive
LED
TIMER_SetTimeInterval
TIMER_Start
TIMER_Stop
DELAY
