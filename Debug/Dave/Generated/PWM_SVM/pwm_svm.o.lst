   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_svm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB134:
  26              	 .file 1 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-04-27
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
 967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
 972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
 973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
 979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
 980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
 981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
 983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
 985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
 988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
 990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
 991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
 994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
 996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
 998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
1121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1239 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1243 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
1244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  54              	 .loc 1 1244 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE134:
  70              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU8_SLICE_EnableTrap:
  76              	.LFB137:
1245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1648:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1649:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1650:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1651:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1652:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1653:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1654:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1655:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1656:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1657:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1658:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  77              	 .loc 1 1658 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 3960     	 str r1,[r7]
1659:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1660:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  94              	 .loc 1 1660 0
  95 000a 7B68     	 ldr r3,[r7,#4]
  96 000c 5A69     	 ldr r2,[r3,#20]
  97 000e 3B68     	 ldr r3,[r7]
  98 0010 5B04     	 lsls r3,r3,#17
  99 0012 1A43     	 orrs r2,r2,r3
 100 0014 7B68     	 ldr r3,[r7,#4]
 101 0016 5A61     	 str r2,[r3,#20]
1661:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 102              	 .loc 1 1661 0
 103 0018 0C37     	 adds r7,r7,#12
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 4
 106 001a BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 001c 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI11:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0020 7047     	 bx lr
 115              	 .cfi_endproc
 116              	.LFE137:
 118 0022 00BF     	 .section .text.XMC_CCU8_SLICE_DisableTrap,"ax",%progbits
 119              	 .align 2
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_CCU8_SLICE_DisableTrap:
 124              	.LFB138:
1662:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1663:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1664:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1665:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1666:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1667:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1668:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1669:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1670:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1671:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1672:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1673:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1674:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1675:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1676:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1677:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1679:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1680:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1681:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1682:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 125              	 .loc 1 1682 0
 126              	 .cfi_startproc
 127              	 
 128              	 
 129              	 
 130 0000 80B4     	 push {r7}
 131              	.LCFI12:
 132              	 .cfi_def_cfa_offset 4
 133              	 .cfi_offset 7,-4
 134 0002 83B0     	 sub sp,sp,#12
 135              	.LCFI13:
 136              	 .cfi_def_cfa_offset 16
 137 0004 00AF     	 add r7,sp,#0
 138              	.LCFI14:
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
 141 0008 3960     	 str r1,[r7]
1683:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1684:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1685:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
 142              	 .loc 1 1685 0
 143 000a 7B68     	 ldr r3,[r7,#4]
 144 000c 5A69     	 ldr r2,[r3,#20]
 145 000e 3B68     	 ldr r3,[r7]
 146 0010 5B04     	 lsls r3,r3,#17
 147 0012 DB43     	 mvns r3,r3
 148 0014 1A40     	 ands r2,r2,r3
 149 0016 7B68     	 ldr r3,[r7,#4]
 150 0018 5A61     	 str r2,[r3,#20]
1686:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 151              	 .loc 1 1686 0
 152 001a 0C37     	 adds r7,r7,#12
 153              	.LCFI15:
 154              	 .cfi_def_cfa_offset 4
 155 001c BD46     	 mov sp,r7
 156              	.LCFI16:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 001e 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI17:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 0022 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE138:
 167              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 168              	 .align 2
 169              	 .thumb
 170              	 .thumb_func
 172              	XMC_CCU8_SLICE_StopTimer:
 173              	.LFB144:
1687:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1688:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1689:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1690:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1691:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1692:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1693:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1694:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1695:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1696:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1697:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1698:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1699:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1700:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1701:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1702:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1703:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1704:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1705:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1706:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1707:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1708:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1709:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1711:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1712:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1713:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1714:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1715:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1716:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1717:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1718:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1719:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1720:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1721:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1722:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1723:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1724:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1725:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1726:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1727:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1728:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1729:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1730:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1731:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1732:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1733:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1734:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1735:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1736:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1737:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1738:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1739:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1740:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1741:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1742:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1743:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1744:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1745:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1746:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1747:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1748:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1749:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1750:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1751:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1752:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1753:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1754:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1755:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1756:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1757:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1758:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1759:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1760:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1761:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1762:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1763:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1764:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1765:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1766:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1767:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1768:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1769:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1770:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1771:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1772:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1773:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1774:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1775:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1776:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1777:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1778:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1779:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1780:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1781:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1782:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1783:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1784:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1785:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1786:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1787:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1788:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1789:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1790:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
1791:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 174              	 .loc 1 1791 0
 175              	 .cfi_startproc
 176              	 
 177              	 
 178              	 
 179 0000 80B4     	 push {r7}
 180              	.LCFI18:
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	.LCFI19:
 185              	 .cfi_def_cfa_offset 16
 186 0004 00AF     	 add r7,sp,#0
 187              	.LCFI20:
 188              	 .cfi_def_cfa_register 7
 189 0006 7860     	 str r0,[r7,#4]
1792:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1793:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 190              	 .loc 1 1793 0
 191 0008 7B68     	 ldr r3,[r7,#4]
 192 000a 0122     	 movs r2,#1
 193 000c 1A61     	 str r2,[r3,#16]
1794:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 194              	 .loc 1 1794 0
 195 000e 0C37     	 adds r7,r7,#12
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 4
 198 0010 BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 0012 5DF8047B 	 ldr r7,[sp],#4
 203              	.LCFI23:
 204              	 .cfi_restore 7
 205              	 .cfi_def_cfa_offset 0
 206 0016 7047     	 bx lr
 207              	 .cfi_endproc
 208              	.LFE144:
 210              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 211              	 .align 2
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_CCU8_EnableShadowTransfer:
 216              	.LFB153:
1795:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1796:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1797:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1798:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1799:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1800:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1801:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1802:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
1803:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
1804:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
1805:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1806:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1807:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1808:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1809:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
1810:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1811:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1812:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
1813:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1814:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1815:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1816:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1817:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1818:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1819:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1821:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
1822:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1823:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1824:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1825:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1826:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
1827:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1828:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1829:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
1830:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1831:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1832:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1833:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1834:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1835:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
1836:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
1837:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1838:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1839:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1840:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
1841:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
1842:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
1843:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1844:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1845:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1846:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1847:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
1848:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1849:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1850:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
1851:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1852:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1853:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1854:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1855:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1856:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1857:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1858:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1859:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1860:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
1861:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1862:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1863:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
1864:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1865:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1866:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
1867:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1868:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
1869:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1870:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1871:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1872:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1873:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1874:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1875:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1876:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1877:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
1878:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
1879:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1880:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
1881:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1882:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1883:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
1884:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1885:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
1886:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
1887:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1888:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
1889:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
1890:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1891:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1892:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1893:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1894:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1895:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1896:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1897:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1898:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
1899:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1900:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1901:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1902:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1903:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
1904:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1905:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1906:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
1907:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1908:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
1909:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1910:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1911:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1912:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1913:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1914:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
1915:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1916:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1917:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
1918:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1919:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1920:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
1921:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1922:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
1923:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
1924:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1925:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1926:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
1927:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1928:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1929:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1930:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
1931:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
1932:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1933:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1934:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1935:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1936:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
1937:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1938:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1939:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1940:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
1941:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1942:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
1944:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1945:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
1946:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1947:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1948:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1949:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1950:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
1951:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
1952:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1953:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1954:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
1955:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1956:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
1958:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1959:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1960:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
1961:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
1962:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1963:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1964:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
1965:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1966:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
1967:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1968:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
1969:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
1970:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1971:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1972:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1973:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
1974:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1975:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1976:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1977:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1978:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1979:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
1980:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
1981:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1982:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
1983:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1984:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1985:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1986:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1987:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1988:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1989:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1990:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1991:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
1992:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1993:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1994:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1995:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1996:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1997:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1998:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1999:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2000:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2001:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2002:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2003:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2004:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2005:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2006:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2007:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2008:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2009:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2010:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2011:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2012:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2013:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2014:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2015:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2016:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2017:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2018:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2019:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2020:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2021:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2022:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2023:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2024:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2025:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2026:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2027:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2028:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2029:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2030:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2031:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2032:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2033:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2034:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2035:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2036:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2037:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2038:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2039:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2040:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2041:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2042:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2043:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2044:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2045:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2046:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2047:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2048:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2049:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2050:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2051:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2052:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2053:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2054:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2055:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2056:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2057:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2058:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2059:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2060:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2061:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2062:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2063:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2064:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2065:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2066:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2067:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2069:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2071:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2072:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2073:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2074:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2075:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2076:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2077:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2078:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2079:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2080:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2081:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2082:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2083:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2084:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 217              	 .loc 1 2084 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222 0000 80B4     	 push {r7}
 223              	.LCFI24:
 224              	 .cfi_def_cfa_offset 4
 225              	 .cfi_offset 7,-4
 226 0002 83B0     	 sub sp,sp,#12
 227              	.LCFI25:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI26:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
 233 0008 3960     	 str r1,[r7]
2085:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2086:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 234              	 .loc 1 2086 0
 235 000a 7B68     	 ldr r3,[r7,#4]
 236 000c 3A68     	 ldr r2,[r7]
 237 000e 1A61     	 str r2,[r3,#16]
2087:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 238              	 .loc 1 2087 0
 239 0010 0C37     	 adds r7,r7,#12
 240              	.LCFI27:
 241              	 .cfi_def_cfa_offset 4
 242 0012 BD46     	 mov sp,r7
 243              	.LCFI28:
 244              	 .cfi_def_cfa_register 13
 245              	 
 246 0014 5DF8047B 	 ldr r7,[sp],#4
 247              	.LCFI29:
 248              	 .cfi_restore 7
 249              	 .cfi_def_cfa_offset 0
 250 0018 7047     	 bx lr
 251              	 .cfi_endproc
 252              	.LFE153:
 254 001a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerValue,"ax",%progbits
 255              	 .align 2
 256              	 .thumb
 257              	 .thumb_func
 259              	XMC_CCU8_SLICE_SetTimerValue:
 260              	.LFB155:
2088:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2089:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2090:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2091:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2092:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2093:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2094:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2095:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2096:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2097:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2098:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2099:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 261              	 .loc 1 2123 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265              	 
 266 0000 80B4     	 push {r7}
 267              	.LCFI30:
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 83B0     	 sub sp,sp,#12
 271              	.LCFI31:
 272              	 .cfi_def_cfa_offset 16
 273 0004 00AF     	 add r7,sp,#0
 274              	.LCFI32:
 275              	 .cfi_def_cfa_register 7
 276 0006 7860     	 str r0,[r7,#4]
 277 0008 0B46     	 mov r3,r1
 278 000a 7B80     	 strh r3,[r7,#2]
2124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
 279              	 .loc 1 2125 0
 280 000c 7A88     	 ldrh r2,[r7,#2]
 281 000e 7B68     	 ldr r3,[r7,#4]
 282 0010 1A67     	 str r2,[r3,#112]
2126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 283              	 .loc 1 2126 0
 284 0012 0C37     	 adds r7,r7,#12
 285              	.LCFI33:
 286              	 .cfi_def_cfa_offset 4
 287 0014 BD46     	 mov sp,r7
 288              	.LCFI34:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 0016 5DF8047B 	 ldr r7,[sp],#4
 292              	.LCFI35:
 293              	 .cfi_restore 7
 294              	 .cfi_def_cfa_offset 0
 295 001a 7047     	 bx lr
 296              	 .cfi_endproc
 297              	.LFE155:
 299              	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 300              	 .align 2
 301              	 .thumb
 302              	 .thumb_func
 304              	XMC_CCU8_SLICE_EnableEvent:
 305              	.LFB163:
2127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2288:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2289:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2290:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2291:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2292:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2293:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2294:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2295:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2296:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2297:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2298:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2299:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2300:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2301:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2302:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2303:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2304:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2305:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2306:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2307:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2308:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2309:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2310:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2311:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2312:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2313:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2314:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2315:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2316:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2317:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2318:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2319:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2320:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2321:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2322:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2323:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2324:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2325:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2326:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2327:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2328:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2329:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2330:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2331:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2332:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2333:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2334:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2335:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2336:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2337:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2338:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2339:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2340:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2341:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2342:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2343:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2344:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2345:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2346:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2347:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2348:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2349:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2350:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2351:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2352:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2353:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2354:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2355:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2356:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2357:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2358:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2359:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2360:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2361:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2362:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2363:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2364:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2365:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2366:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2367:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2368:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2369:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2370:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2371:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2372:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2373:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2374:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2375:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2376:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2377:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2378:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2379:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2380:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2381:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2382:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2383:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2384:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2385:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2386:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2387:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2388:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2389:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2390:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2391:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2392:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2393:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2394:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2395:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2396:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2397:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2398:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2399:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2400:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2401:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2402:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2403:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2404:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2405:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2406:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2407:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2408:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 306              	 .loc 1 2408 0
 307              	 .cfi_startproc
 308              	 
 309              	 
 310              	 
 311 0000 80B4     	 push {r7}
 312              	.LCFI36:
 313              	 .cfi_def_cfa_offset 4
 314              	 .cfi_offset 7,-4
 315 0002 83B0     	 sub sp,sp,#12
 316              	.LCFI37:
 317              	 .cfi_def_cfa_offset 16
 318 0004 00AF     	 add r7,sp,#0
 319              	.LCFI38:
 320              	 .cfi_def_cfa_register 7
 321 0006 7860     	 str r0,[r7,#4]
 322 0008 0B46     	 mov r3,r1
 323 000a FB70     	 strb r3,[r7,#3]
2409:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2410:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2411:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2412:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 324              	 .loc 1 2412 0
 325 000c 7B68     	 ldr r3,[r7,#4]
 326 000e D3F8A420 	 ldr r2,[r3,#164]
 327 0012 FB78     	 ldrb r3,[r7,#3]
 328 0014 0121     	 movs r1,#1
 329 0016 01FA03F3 	 lsl r3,r1,r3
 330 001a 1A43     	 orrs r2,r2,r3
 331 001c 7B68     	 ldr r3,[r7,#4]
 332 001e C3F8A420 	 str r2,[r3,#164]
2413:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 333              	 .loc 1 2413 0
 334 0022 0C37     	 adds r7,r7,#12
 335              	.LCFI39:
 336              	 .cfi_def_cfa_offset 4
 337 0024 BD46     	 mov sp,r7
 338              	.LCFI40:
 339              	 .cfi_def_cfa_register 13
 340              	 
 341 0026 5DF8047B 	 ldr r7,[sp],#4
 342              	.LCFI41:
 343              	 .cfi_restore 7
 344              	 .cfi_def_cfa_offset 0
 345 002a 7047     	 bx lr
 346              	 .cfi_endproc
 347              	.LFE163:
 349              	 .section .text.XMC_CCU8_SLICE_DisableEvent,"ax",%progbits
 350              	 .align 2
 351              	 .thumb
 352              	 .thumb_func
 354              	XMC_CCU8_SLICE_DisableEvent:
 355              	.LFB165:
2414:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2415:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2416:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2417:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2418:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2419:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2420:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2421:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2422:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2423:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2424:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2425:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2426:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2427:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2428:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2429:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2430:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2431:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2432:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2433:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2434:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2435:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2436:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2437:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2438:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2439:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2440:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2441:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2442:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2443:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2444:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2445:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2446:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2447:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2448:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2449:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2450:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2451:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2452:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2453:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 356              	 .loc 1 2453 0
 357              	 .cfi_startproc
 358              	 
 359              	 
 360              	 
 361 0000 80B4     	 push {r7}
 362              	.LCFI42:
 363              	 .cfi_def_cfa_offset 4
 364              	 .cfi_offset 7,-4
 365 0002 83B0     	 sub sp,sp,#12
 366              	.LCFI43:
 367              	 .cfi_def_cfa_offset 16
 368 0004 00AF     	 add r7,sp,#0
 369              	.LCFI44:
 370              	 .cfi_def_cfa_register 7
 371 0006 7860     	 str r0,[r7,#4]
 372 0008 0B46     	 mov r3,r1
 373 000a FB70     	 strb r3,[r7,#3]
2454:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2455:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2456:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2457:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
 374              	 .loc 1 2457 0
 375 000c 7B68     	 ldr r3,[r7,#4]
 376 000e D3F8A420 	 ldr r2,[r3,#164]
 377 0012 FB78     	 ldrb r3,[r7,#3]
 378 0014 0121     	 movs r1,#1
 379 0016 01FA03F3 	 lsl r3,r1,r3
 380 001a DB43     	 mvns r3,r3
 381 001c 1A40     	 ands r2,r2,r3
 382 001e 7B68     	 ldr r3,[r7,#4]
 383 0020 C3F8A420 	 str r2,[r3,#164]
2458:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 384              	 .loc 1 2458 0
 385 0024 0C37     	 adds r7,r7,#12
 386              	.LCFI45:
 387              	 .cfi_def_cfa_offset 4
 388 0026 BD46     	 mov sp,r7
 389              	.LCFI46:
 390              	 .cfi_def_cfa_register 13
 391              	 
 392 0028 5DF8047B 	 ldr r7,[sp],#4
 393              	.LCFI47:
 394              	 .cfi_restore 7
 395              	 .cfi_def_cfa_offset 0
 396 002c 7047     	 bx lr
 397              	 .cfi_endproc
 398              	.LFE165:
 400 002e 00BF     	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 401              	 .align 2
 402              	 .thumb
 403              	 .thumb_func
 405              	XMC_CCU8_SLICE_ClearEvent:
 406              	.LFB168:
2459:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2460:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2461:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2462:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2463:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2464:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2465:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2466:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2467:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2468:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2469:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2470:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2471:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2472:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2473:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2474:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2475:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2476:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2477:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2478:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2479:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2480:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2481:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2482:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2483:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2484:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2485:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2486:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2487:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2488:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2489:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2490:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2491:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2492:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2493:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2494:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2495:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2496:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2497:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2498:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2499:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2500:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2501:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2502:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2503:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2504:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2505:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2506:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2507:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2508:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2509:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2510:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2511:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2512:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2513:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2514:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2515:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2516:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2517:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2518:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 407              	 .loc 1 2518 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412 0000 80B4     	 push {r7}
 413              	.LCFI48:
 414              	 .cfi_def_cfa_offset 4
 415              	 .cfi_offset 7,-4
 416 0002 83B0     	 sub sp,sp,#12
 417              	.LCFI49:
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	.LCFI50:
 421              	 .cfi_def_cfa_register 7
 422 0006 7860     	 str r0,[r7,#4]
 423 0008 0B46     	 mov r3,r1
 424 000a FB70     	 strb r3,[r7,#3]
2519:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2520:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2521:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 425              	 .loc 1 2521 0
 426 000c 7B68     	 ldr r3,[r7,#4]
 427 000e D3F8B020 	 ldr r2,[r3,#176]
 428 0012 FB78     	 ldrb r3,[r7,#3]
 429 0014 0121     	 movs r1,#1
 430 0016 01FA03F3 	 lsl r3,r1,r3
 431 001a 1A43     	 orrs r2,r2,r3
 432 001c 7B68     	 ldr r3,[r7,#4]
 433 001e C3F8B020 	 str r2,[r3,#176]
2522:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 434              	 .loc 1 2522 0
 435 0022 0C37     	 adds r7,r7,#12
 436              	.LCFI51:
 437              	 .cfi_def_cfa_offset 4
 438 0024 BD46     	 mov sp,r7
 439              	.LCFI52:
 440              	 .cfi_def_cfa_register 13
 441              	 
 442 0026 5DF8047B 	 ldr r7,[sp],#4
 443              	.LCFI53:
 444              	 .cfi_restore 7
 445              	 .cfi_def_cfa_offset 0
 446 002a 7047     	 bx lr
 447              	 .cfi_endproc
 448              	.LFE168:
 450              	 .section .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode,"ax",%progbits
 451              	 .align 2
 452              	 .thumb
 453              	 .thumb_func
 455              	XMC_CCU8_SLICE_EnableAsymmetricCompareMode:
 456              	.LFB170:
2523:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2524:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2525:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2526:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2527:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2528:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2529:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2530:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2531:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2532:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2533:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2534:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2535:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2536:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2537:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2538:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2539:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2540:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2541:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2542:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2543:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
2544:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
2545:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2546:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2547:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2548:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2549:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2550:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2551:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2552:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2553:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2554:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2555:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2556:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2557:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2558:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2559:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2560:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2561:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2562:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2563:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2564:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2565:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2566:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2567:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2568:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2569:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2570:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2571:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2572:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2573:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2574:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2575:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2576:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2577:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2578:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2579:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2580:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2581:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2582:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2583:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2584:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2585:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2586:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2587:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2588:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2589:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2590:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2591:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2592:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2593:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2594:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2595:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2596:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2597:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2598:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2599:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2600:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2601:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2602:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2603:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2604:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2605:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2606:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2607:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2608:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2609:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2610:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2611:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2612:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2613:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2614:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2615:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2616:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2617:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2618:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2619:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2620:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2621:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2622:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR> 
2623:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2624:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2625:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 457              	 .loc 1 2625 0
 458              	 .cfi_startproc
 459              	 
 460              	 
 461              	 
 462 0000 80B4     	 push {r7}
 463              	.LCFI54:
 464              	 .cfi_def_cfa_offset 4
 465              	 .cfi_offset 7,-4
 466 0002 83B0     	 sub sp,sp,#12
 467              	.LCFI55:
 468              	 .cfi_def_cfa_offset 16
 469 0004 00AF     	 add r7,sp,#0
 470              	.LCFI56:
 471              	 .cfi_def_cfa_register 7
 472 0006 7860     	 str r0,[r7,#4]
2626:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2627:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
 473              	 .loc 1 2627 0
 474 0008 7B68     	 ldr r3,[r7,#4]
 475 000a 9B6C     	 ldr r3,[r3,#72]
 476 000c 43F00102 	 orr r2,r3,#1
 477 0010 7B68     	 ldr r3,[r7,#4]
 478 0012 9A64     	 str r2,[r3,#72]
2628:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 479              	 .loc 1 2628 0
 480 0014 0C37     	 adds r7,r7,#12
 481              	.LCFI57:
 482              	 .cfi_def_cfa_offset 4
 483 0016 BD46     	 mov sp,r7
 484              	.LCFI58:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 0018 5DF8047B 	 ldr r7,[sp],#4
 488              	.LCFI59:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 001c 7047     	 bx lr
 492              	 .cfi_endproc
 493              	.LFE170:
 495 001e 00BF     	 .section .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode,"ax",%progbits
 496              	 .align 2
 497              	 .thumb
 498              	 .thumb_func
 500              	XMC_CCU8_SLICE_EnableSymmetricCompareMode:
 501              	.LFB171:
2629:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2630:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2631:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2632:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2633:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2634:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2635:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2636:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2637:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2638:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2639:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2640:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2641:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2642:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2643:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2644:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 502              	 .loc 1 2644 0
 503              	 .cfi_startproc
 504              	 
 505              	 
 506              	 
 507 0000 80B4     	 push {r7}
 508              	.LCFI60:
 509              	 .cfi_def_cfa_offset 4
 510              	 .cfi_offset 7,-4
 511 0002 83B0     	 sub sp,sp,#12
 512              	.LCFI61:
 513              	 .cfi_def_cfa_offset 16
 514 0004 00AF     	 add r7,sp,#0
 515              	.LCFI62:
 516              	 .cfi_def_cfa_register 7
 517 0006 7860     	 str r0,[r7,#4]
2645:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2646:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
 518              	 .loc 1 2646 0
 519 0008 7B68     	 ldr r3,[r7,#4]
 520 000a 9B6C     	 ldr r3,[r3,#72]
 521 000c 23F00102 	 bic r2,r3,#1
 522 0010 7B68     	 ldr r3,[r7,#4]
 523 0012 9A64     	 str r2,[r3,#72]
2647:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 524              	 .loc 1 2647 0
 525 0014 0C37     	 adds r7,r7,#12
 526              	.LCFI63:
 527              	 .cfi_def_cfa_offset 4
 528 0016 BD46     	 mov sp,r7
 529              	.LCFI64:
 530              	 .cfi_def_cfa_register 13
 531              	 
 532 0018 5DF8047B 	 ldr r7,[sp],#4
 533              	.LCFI65:
 534              	 .cfi_restore 7
 535              	 .cfi_def_cfa_offset 0
 536 001c 7047     	 bx lr
 537              	 .cfi_endproc
 538              	.LFE171:
 540 001e 00BF     	 .section .text.XMC_SCU_SetCcuTriggerHigh,"ax",%progbits
 541              	 .align 2
 542              	 .thumb
 543              	 .thumb_func
 545              	XMC_SCU_SetCcuTriggerHigh:
 546              	.LFB200:
 547              	 .file 2 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** {
 548              	 .loc 2 231 0
 549              	 .cfi_startproc
 550              	 
 551              	 
 552              	 
 553 0000 80B4     	 push {r7}
 554              	.LCFI66:
 555              	 .cfi_def_cfa_offset 4
 556              	 .cfi_offset 7,-4
 557 0002 83B0     	 sub sp,sp,#12
 558              	.LCFI67:
 559              	 .cfi_def_cfa_offset 16
 560 0004 00AF     	 add r7,sp,#0
 561              	.LCFI68:
 562              	 .cfi_def_cfa_register 7
 563 0006 7860     	 str r0,[r7,#4]
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 564              	 .loc 2 232 0
 565 0008 0549     	 ldr r1,.L13
 566 000a 054B     	 ldr r3,.L13
 567 000c DA6C     	 ldr r2,[r3,#76]
 568 000e 7B68     	 ldr r3,[r7,#4]
 569 0010 1343     	 orrs r3,r3,r2
 570 0012 CB64     	 str r3,[r1,#76]
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** }
 571              	 .loc 2 233 0
 572 0014 0C37     	 adds r7,r7,#12
 573              	.LCFI69:
 574              	 .cfi_def_cfa_offset 4
 575 0016 BD46     	 mov sp,r7
 576              	.LCFI70:
 577              	 .cfi_def_cfa_register 13
 578              	 
 579 0018 5DF8047B 	 ldr r7,[sp],#4
 580              	.LCFI71:
 581              	 .cfi_restore 7
 582              	 .cfi_def_cfa_offset 0
 583 001c 7047     	 bx lr
 584              	.L14:
 585 001e 00BF     	 .align 2
 586              	.L13:
 587 0020 00400050 	 .word 1342193664
 588              	 .cfi_endproc
 589              	.LFE200:
 591              	 .section .text.XMC_SCU_SetCcuTriggerLow,"ax",%progbits
 592              	 .align 2
 593              	 .thumb
 594              	 .thumb_func
 596              	XMC_SCU_SetCcuTriggerLow:
 597              	.LFB201:
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** {
 598              	 .loc 2 256 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI72:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 83B0     	 sub sp,sp,#12
 608              	.LCFI73:
 609              	 .cfi_def_cfa_offset 16
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI74:
 612              	 .cfi_def_cfa_register 7
 613 0006 7860     	 str r0,[r7,#4]
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 614              	 .loc 2 257 0
 615 0008 0549     	 ldr r1,.L16
 616 000a 054B     	 ldr r3,.L16
 617 000c DA6C     	 ldr r2,[r3,#76]
 618 000e 7B68     	 ldr r3,[r7,#4]
 619 0010 DB43     	 mvns r3,r3
 620 0012 1340     	 ands r3,r3,r2
 621 0014 CB64     	 str r3,[r1,#76]
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_scu.h **** }
 622              	 .loc 2 258 0
 623 0016 0C37     	 adds r7,r7,#12
 624              	.LCFI75:
 625              	 .cfi_def_cfa_offset 4
 626 0018 BD46     	 mov sp,r7
 627              	.LCFI76:
 628              	 .cfi_def_cfa_register 13
 629              	 
 630 001a 5DF8047B 	 ldr r7,[sp],#4
 631              	.LCFI77:
 632              	 .cfi_restore 7
 633              	 .cfi_def_cfa_offset 0
 634 001e 7047     	 bx lr
 635              	.L17:
 636              	 .align 2
 637              	.L16:
 638 0020 00400050 	 .word 1342193664
 639              	 .cfi_endproc
 640              	.LFE201:
 642              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 643              	 .align 2
 644              	 .thumb
 645              	 .thumb_func
 647              	XMC_GPIO_SetOutputHigh:
 648              	.LFB210:
 649              	 .file 3 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 650              	 .loc 3 257 0
 651              	 .cfi_startproc
 652              	 
 653              	 
 654              	 
 655 0000 80B4     	 push {r7}
 656              	.LCFI78:
 657              	 .cfi_def_cfa_offset 4
 658              	 .cfi_offset 7,-4
 659 0002 83B0     	 sub sp,sp,#12
 660              	.LCFI79:
 661              	 .cfi_def_cfa_offset 16
 662 0004 00AF     	 add r7,sp,#0
 663              	.LCFI80:
 664              	 .cfi_def_cfa_register 7
 665 0006 7860     	 str r0,[r7,#4]
 666 0008 0B46     	 mov r3,r1
 667 000a FB70     	 strb r3,[r7,#3]
 258:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 668              	 .loc 3 260 0
 669 000c FB78     	 ldrb r3,[r7,#3]
 670 000e 0122     	 movs r2,#1
 671 0010 9A40     	 lsls r2,r2,r3
 672 0012 7B68     	 ldr r3,[r7,#4]
 673 0014 5A60     	 str r2,[r3,#4]
 261:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
 674              	 .loc 3 261 0
 675 0016 0C37     	 adds r7,r7,#12
 676              	.LCFI81:
 677              	 .cfi_def_cfa_offset 4
 678 0018 BD46     	 mov sp,r7
 679              	.LCFI82:
 680              	 .cfi_def_cfa_register 13
 681              	 
 682 001a 5DF8047B 	 ldr r7,[sp],#4
 683              	.LCFI83:
 684              	 .cfi_restore 7
 685              	 .cfi_def_cfa_offset 0
 686 001e 7047     	 bx lr
 687              	 .cfi_endproc
 688              	.LFE210:
 690              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 691              	 .align 2
 692              	 .thumb
 693              	 .thumb_func
 695              	XMC_GPIO_SetOutputLow:
 696              	.LFB211:
 262:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** {
 697              	 .loc 3 283 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701              	 
 702 0000 80B4     	 push {r7}
 703              	.LCFI84:
 704              	 .cfi_def_cfa_offset 4
 705              	 .cfi_offset 7,-4
 706 0002 83B0     	 sub sp,sp,#12
 707              	.LCFI85:
 708              	 .cfi_def_cfa_offset 16
 709 0004 00AF     	 add r7,sp,#0
 710              	.LCFI86:
 711              	 .cfi_def_cfa_register 7
 712 0006 7860     	 str r0,[r7,#4]
 713 0008 0B46     	 mov r3,r1
 714 000a FB70     	 strb r3,[r7,#3]
 284:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 715              	 .loc 3 286 0
 716 000c FB78     	 ldrb r3,[r7,#3]
 717 000e 4FF48032 	 mov r2,#65536
 718 0012 9A40     	 lsls r2,r2,r3
 719 0014 7B68     	 ldr r3,[r7,#4]
 720 0016 5A60     	 str r2,[r3,#4]
 287:C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc\xmc_gpio.h **** }
 721              	 .loc 3 287 0
 722 0018 0C37     	 adds r7,r7,#12
 723              	.LCFI87:
 724              	 .cfi_def_cfa_offset 4
 725 001a BD46     	 mov sp,r7
 726              	.LCFI88:
 727              	 .cfi_def_cfa_register 13
 728              	 
 729 001c 5DF8047B 	 ldr r7,[sp],#4
 730              	.LCFI89:
 731              	 .cfi_restore 7
 732              	 .cfi_def_cfa_offset 0
 733 0020 7047     	 bx lr
 734              	 .cfi_endproc
 735              	.LFE211:
 737 0022 00BF     	 .section .text.PWM_SVM_lEnableEvent,"ax",%progbits
 738              	 .align 2
 739              	 .global PWM_SVM_lEnableEvent
 740              	 .thumb
 741              	 .thumb_func
 743              	PWM_SVM_lEnableEvent:
 744              	.LFB218:
 745              	 .file 4 "../Dave/Generated/PWM_SVM/pwm_svm.c"
   1:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
   2:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @file pwm_svm.c
   3:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @date 2015-10-21
   4:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  *
   5:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * NOTE:
   6:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
   8:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @cond
   9:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * PWM_SVM v4.0.20 - Generates 3-phase space vector pulse width modulated outputs using CCU8.
  11:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It supports symmetric/asymmetric and 7-segment/5-segment SVM algorithm.
  12:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  13:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  16:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  19:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  22:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  25:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  28:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  36:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  40:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Change History
  41:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * --------------
  42:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  43:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-02-20:
  44:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - Initial version
  45:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  46:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-06-20:
  47:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - DC link current trigger is updated. <br>
  48:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - max_amplitude updated when PWM scheme is changed
  49:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  50:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @endcond
  51:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  52:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  53:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  54:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * HEADER FILES
  55:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  56:../Dave/Generated/PWM_SVM/pwm_svm.c **** #include "pwm_svm.h"
  57:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  58:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  59:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * MACROS
  60:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  61:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  62:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  63:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
  64:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  65:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  66:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  67:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL ROUTINES
  68:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  69:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  70:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Symmetric
  71:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  72:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  73:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  74:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  75:../Dave/Generated/PWM_SVM/pwm_svm.c **** RAM_ATTRIBUTE static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr);
  76:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  77:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Asymmetric
  78:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  79:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  80:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  81:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  82:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr);
  83:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  84:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  85:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  86:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the compare register values based on the sector
  87:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  88:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  89:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  90:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  91:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr);
  92:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  93:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme dynamically while pwm is running
  94:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  95:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  96:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
  97:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  98:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  99:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 100:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 101:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme when pwm is stopped
 102:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 103:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 104:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
 105:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 106:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 107:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 108:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 109:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 110:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the current trigger ccu8 slice
 111:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 112:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 113:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 114:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 115:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr);
 116:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 117:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 118:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for Centre aligned PWM when switching from
 119:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         Edge aligned PWM
 120:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 121:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 122:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 123:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 124:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 125:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for edge aligned PWM when switching from
 126:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         centre aligned PWM
 127:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 128:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 129:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 130:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 131:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 132:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Function enables configured events.
 133:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 134:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr);
 135:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_OVERMODULATION_ENABLE)
 136:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 137:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using Look up table.
 138:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 139:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 140:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 141:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 142:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 143:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 144:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 145:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using CORDIC and Lookup table.
 146:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 147:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 148:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 149:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 150:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 151:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation_Cordic(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 152:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 153:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 154:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 155:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
 156:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
 157:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 158:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 159:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the sine table used for SVM algorithm.
 160:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 161:../Dave/Generated/PWM_SVM/pwm_svm.c **** extern const uint16_t Sinus60_tab[];
 162:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 163:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 164:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 165:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 166:../Dave/Generated/PWM_SVM/pwm_svm.c **** * API IMPLEMENTATION
 167:../Dave/Generated/PWM_SVM/pwm_svm.c **** ***************************************************************************************************
 168:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr)
 169:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 746              	 .loc 4 169 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750 0000 80B5     	 push {r7,lr}
 751              	.LCFI90:
 752              	 .cfi_def_cfa_offset 8
 753              	 .cfi_offset 7,-8
 754              	 .cfi_offset 14,-4
 755 0002 82B0     	 sub sp,sp,#8
 756              	.LCFI91:
 757              	 .cfi_def_cfa_offset 16
 758 0004 00AF     	 add r7,sp,#0
 759              	.LCFI92:
 760              	 .cfi_def_cfa_register 7
 761 0006 7860     	 str r0,[r7,#4]
 170:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 period match interrupt */
 171:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_periodmatch)
 762              	 .loc 4 171 0
 763 0008 7B68     	 ldr r3,[r7,#4]
 764 000a 1B68     	 ldr r3,[r3]
 765 000c 93F84430 	 ldrb r3,[r3,#68]
 766 0010 012B     	 cmp r3,#1
 767 0012 06D1     	 bne .L21
 172:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 173:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 768              	 .loc 4 173 0
 769 0014 7B68     	 ldr r3,[r7,#4]
 770 0016 9B68     	 ldr r3,[r3,#8]
 771 0018 1B68     	 ldr r3,[r3]
 772 001a 1846     	 mov r0,r3
 773 001c 0021     	 movs r1,#0
 774 001e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 775              	.L21:
 174:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 175:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 176:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 trap interrupt */
 177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_trapevent)
 776              	 .loc 4 177 0
 777 0022 7B68     	 ldr r3,[r7,#4]
 778 0024 1B68     	 ldr r3,[r3]
 779 0026 93F84530 	 ldrb r3,[r3,#69]
 780 002a 012B     	 cmp r3,#1
 781 002c 06D1     	 bne .L20
 178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 179:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 782              	 .loc 4 179 0
 783 002e 7B68     	 ldr r3,[r7,#4]
 784 0030 9B68     	 ldr r3,[r3,#8]
 785 0032 1B68     	 ldr r3,[r3]
 786 0034 1846     	 mov r0,r3
 787 0036 0A21     	 movs r1,#10
 788 0038 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 789              	.L20:
 180:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 181:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 182:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 790              	 .loc 4 182 0
 791 003c 0837     	 adds r7,r7,#8
 792              	.LCFI93:
 793              	 .cfi_def_cfa_offset 8
 794 003e BD46     	 mov sp,r7
 795              	.LCFI94:
 796              	 .cfi_def_cfa_register 13
 797              	 
 798 0040 80BD     	 pop {r7,pc}
 799              	 .cfi_endproc
 800              	.LFE218:
 802 0042 00BF     	 .section .text.PWM_SVM_InverterDisable,"ax",%progbits
 803              	 .align 2
 804              	 .global PWM_SVM_InverterDisable
 805              	 .thumb
 806              	 .thumb_func
 808              	PWM_SVM_InverterDisable:
 809              	.LFB219:
 183:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 184:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function disables the inverter
 185:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 186:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterDisable(PWM_SVM_t* const HandlePtr)
 187:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 810              	 .loc 4 187 0
 811              	 .cfi_startproc
 812              	 
 813              	 
 814 0000 80B5     	 push {r7,lr}
 815              	.LCFI95:
 816              	 .cfi_def_cfa_offset 8
 817              	 .cfi_offset 7,-8
 818              	 .cfi_offset 14,-4
 819 0002 82B0     	 sub sp,sp,#8
 820              	.LCFI96:
 821              	 .cfi_def_cfa_offset 16
 822 0004 00AF     	 add r7,sp,#0
 823              	.LCFI97:
 824              	 .cfi_def_cfa_register 7
 825 0006 7860     	 str r0,[r7,#4]
 188:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_InverterDisable:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 189:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 190:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 826              	 .loc 4 190 0
 827 0008 7B68     	 ldr r3,[r7,#4]
 828 000a 1B68     	 ldr r3,[r3]
 829 000c DB7C     	 ldrb r3,[r3,#19]
 830 000e 012B     	 cmp r3,#1
 831 0010 09D1     	 bne .L24
 191:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 193:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 832              	 .loc 4 193 0
 833 0012 7B68     	 ldr r3,[r7,#4]
 834 0014 9B6D     	 ldr r3,[r3,#88]
 835 0016 1A68     	 ldr r2,[r3]
 836 0018 7B68     	 ldr r3,[r7,#4]
 837 001a 9B6D     	 ldr r3,[r3,#88]
 838 001c 1B79     	 ldrb r3,[r3,#4]
 839 001e 1046     	 mov r0,r2
 840 0020 1946     	 mov r1,r3
 841 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 842              	.L24:
 194:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 195:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 843              	 .loc 4 195 0
 844 0026 7B68     	 ldr r3,[r7,#4]
 845 0028 1B68     	 ldr r3,[r3]
 846 002a DB7C     	 ldrb r3,[r3,#19]
 847 002c 022B     	 cmp r3,#2
 848 002e 09D1     	 bne .L23
 196:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 849              	 .loc 4 198 0
 850 0030 7B68     	 ldr r3,[r7,#4]
 851 0032 9B6D     	 ldr r3,[r3,#88]
 852 0034 1A68     	 ldr r2,[r3]
 853 0036 7B68     	 ldr r3,[r7,#4]
 854 0038 9B6D     	 ldr r3,[r3,#88]
 855 003a 1B79     	 ldrb r3,[r3,#4]
 856 003c 1046     	 mov r0,r2
 857 003e 1946     	 mov r1,r3
 858 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 859              	.L23:
 199:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 200:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 860              	 .loc 4 200 0
 861 0044 0837     	 adds r7,r7,#8
 862              	.LCFI98:
 863              	 .cfi_def_cfa_offset 8
 864 0046 BD46     	 mov sp,r7
 865              	.LCFI99:
 866              	 .cfi_def_cfa_register 13
 867              	 
 868 0048 80BD     	 pop {r7,pc}
 869              	 .cfi_endproc
 870              	.LFE219:
 872 004a 00BF     	 .section .text.PWM_SVM_InverterEnable,"ax",%progbits
 873              	 .align 2
 874              	 .global PWM_SVM_InverterEnable
 875              	 .thumb
 876              	 .thumb_func
 878              	PWM_SVM_InverterEnable:
 879              	.LFB220:
 201:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 202:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function Enables the inverter
 203:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 204:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterEnable(PWM_SVM_t* const HandlePtr)
 205:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 880              	 .loc 4 205 0
 881              	 .cfi_startproc
 882              	 
 883              	 
 884 0000 80B5     	 push {r7,lr}
 885              	.LCFI100:
 886              	 .cfi_def_cfa_offset 8
 887              	 .cfi_offset 7,-8
 888              	 .cfi_offset 14,-4
 889 0002 82B0     	 sub sp,sp,#8
 890              	.LCFI101:
 891              	 .cfi_def_cfa_offset 16
 892 0004 00AF     	 add r7,sp,#0
 893              	.LCFI102:
 894              	 .cfi_def_cfa_register 7
 895 0006 7860     	 str r0,[r7,#4]
 206:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 207:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 208:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 896              	 .loc 4 208 0
 897 0008 7B68     	 ldr r3,[r7,#4]
 898 000a 1B68     	 ldr r3,[r3]
 899 000c DB7C     	 ldrb r3,[r3,#19]
 900 000e 012B     	 cmp r3,#1
 901 0010 09D1     	 bne .L27
 209:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 211:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 902              	 .loc 4 211 0
 903 0012 7B68     	 ldr r3,[r7,#4]
 904 0014 9B6D     	 ldr r3,[r3,#88]
 905 0016 1A68     	 ldr r2,[r3]
 906 0018 7B68     	 ldr r3,[r7,#4]
 907 001a 9B6D     	 ldr r3,[r3,#88]
 908 001c 1B79     	 ldrb r3,[r3,#4]
 909 001e 1046     	 mov r0,r2
 910 0020 1946     	 mov r1,r3
 911 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 912              	.L27:
 212:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 213:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 913              	 .loc 4 213 0
 914 0026 7B68     	 ldr r3,[r7,#4]
 915 0028 1B68     	 ldr r3,[r3]
 916 002a DB7C     	 ldrb r3,[r3,#19]
 917 002c 022B     	 cmp r3,#2
 918 002e 09D1     	 bne .L26
 214:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 215:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 216:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 919              	 .loc 4 216 0
 920 0030 7B68     	 ldr r3,[r7,#4]
 921 0032 9B6D     	 ldr r3,[r3,#88]
 922 0034 1A68     	 ldr r2,[r3]
 923 0036 7B68     	 ldr r3,[r7,#4]
 924 0038 9B6D     	 ldr r3,[r3,#88]
 925 003a 1B79     	 ldrb r3,[r3,#4]
 926 003c 1046     	 mov r0,r2
 927 003e 1946     	 mov r1,r3
 928 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 929              	.L26:
 217:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 218:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 930              	 .loc 4 218 0
 931 0044 0837     	 adds r7,r7,#8
 932              	.LCFI103:
 933              	 .cfi_def_cfa_offset 8
 934 0046 BD46     	 mov sp,r7
 935              	.LCFI104:
 936              	 .cfi_def_cfa_register 13
 937              	 
 938 0048 80BD     	 pop {r7,pc}
 939              	 .cfi_endproc
 940              	.LFE220:
 942 004a 00BF     	 .section .text.PWM_SVM_lCurrentTrigSliceInit,"ax",%progbits
 943              	 .align 2
 944              	 .global PWM_SVM_lCurrentTrigSliceInit
 945              	 .thumb
 946              	 .thumb_func
 948              	PWM_SVM_lCurrentTrigSliceInit:
 949              	.LFB221:
 219:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 220:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 221:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function configures the current trigger slice
 222:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 223:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr)
 224:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 950              	 .loc 4 224 0
 951              	 .cfi_startproc
 952              	 
 953              	 
 954 0000 80B5     	 push {r7,lr}
 955              	.LCFI105:
 956              	 .cfi_def_cfa_offset 8
 957              	 .cfi_offset 7,-8
 958              	 .cfi_offset 14,-4
 959 0002 82B0     	 sub sp,sp,#8
 960              	.LCFI106:
 961              	 .cfi_def_cfa_offset 16
 962 0004 00AF     	 add r7,sp,#0
 963              	.LCFI107:
 964              	 .cfi_def_cfa_register 7
 965 0006 7860     	 str r0,[r7,#4]
 225:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->current_configinit_ptr)
 966              	 .loc 4 225 0
 967 0008 7B68     	 ldr r3,[r7,#4]
 968 000a 5B69     	 ldr r3,[r3,#20]
 969 000c 1A68     	 ldr r2,[r3]
 970 000e 7B68     	 ldr r3,[r7,#4]
 971 0010 DB69     	 ldr r3,[r3,#28]
 972 0012 1046     	 mov r0,r2
 973 0014 1946     	 mov r1,r3
 974 0016 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 226:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->peri
 975              	 .loc 4 226 0
 976 001a 7B68     	 ldr r3,[r7,#4]
 977 001c 5B69     	 ldr r3,[r3,#20]
 978 001e 1A68     	 ldr r2,[r3]
 979 0020 7B68     	 ldr r3,[r7,#4]
 980 0022 D3F89C30 	 ldr r3,[r3,#156]
 981 0026 9BB2     	 uxth r3,r3
 982 0028 1046     	 mov r0,r2
 983 002a 1946     	 mov r1,r3
 984 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 227:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Configure external start to event 0 */
 228:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[3]->slice_ptr,(XMC_CCU8_SLICE_EVENT_t)XMC_CCU8
 985              	 .loc 4 228 0
 986 0030 7B68     	 ldr r3,[r7,#4]
 987 0032 5B69     	 ldr r3,[r3,#20]
 988 0034 1A68     	 ldr r2,[r3]
 989 0036 7B68     	 ldr r3,[r7,#4]
 990 0038 5B6E     	 ldr r3,[r3,#100]
 991 003a 1046     	 mov r0,r2
 992 003c 0121     	 movs r1,#1
 993 003e 1A46     	 mov r2,r3
 994 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 229:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->startconfig_ptr);
 230:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_EnableClock(HandlePtr->global_ptr,HandlePtr->phase_ptr[3]->slice_number);
 995              	 .loc 4 230 0
 996 0044 7B68     	 ldr r3,[r7,#4]
 997 0046 5A68     	 ldr r2,[r3,#4]
 998 0048 7B68     	 ldr r3,[r7,#4]
 999 004a 5B69     	 ldr r3,[r3,#20]
 1000 004c 1B79     	 ldrb r3,[r3,#4]
 1001 004e 1046     	 mov r0,r2
 1002 0050 1946     	 mov r1,r3
 1003 0052 FFF7FEFF 	 bl XMC_CCU8_EnableClock
 231:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 232:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Phase current measurement */
 233:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_PHASECM )
 1004              	 .loc 4 233 0
 1005 0056 7B68     	 ldr r3,[r7,#4]
 1006 0058 1B68     	 ldr r3,[r3]
 1007 005a 1B7C     	 ldrb r3,[r3,#16]
 1008 005c 022B     	 cmp r3,#2
 1009 005e 18D1     	 bne .L30
 234:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 235:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 236:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->confighandle
 1010              	 .loc 4 236 0
 1011 0060 7B68     	 ldr r3,[r7,#4]
 1012 0062 5B69     	 ldr r3,[r3,#20]
 1013 0064 1968     	 ldr r1,[r3]
 1014 0066 7B68     	 ldr r3,[r7,#4]
 1015 0068 1B68     	 ldr r3,[r3]
 1016 006a DA7A     	 ldrb r2,[r3,#11]
 237:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 1017              	 .loc 4 237 0
 1018 006c 7B68     	 ldr r3,[r7,#4]
 1019 006e D3F89C30 	 ldr r3,[r3,#156]
 1020 0072 9BB2     	 uxth r3,r3
 236:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 1021              	 .loc 4 236 0
 1022 0074 5B08     	 lsrs r3,r3,#1
 1023 0076 9BB2     	 uxth r3,r3
 1024 0078 0846     	 mov r0,r1
 1025 007a 1146     	 mov r1,r2
 1026 007c 1A46     	 mov r2,r3
 1027 007e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 238:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer one match event  */
 239:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CC
 1028              	 .loc 4 239 0
 1029 0082 7B68     	 ldr r3,[r7,#4]
 1030 0084 5B69     	 ldr r3,[r3,#20]
 1031 0086 1B68     	 ldr r3,[r3]
 1032 0088 1846     	 mov r0,r3
 1033 008a 0121     	 movs r1,#1
 1034 008c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1035 0090 50E0     	 b .L31
 1036              	.L30:
 240:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 241:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_DCLINKCM )/* DC Link current
 1037              	 .loc 4 241 0
 1038 0092 7B68     	 ldr r3,[r7,#4]
 1039 0094 1B68     	 ldr r3,[r3]
 1040 0096 1B7C     	 ldrb r3,[r3,#16]
 1041 0098 012B     	 cmp r3,#1
 1042 009a 4BD1     	 bne .L31
 242:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 243:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 244:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 1043              	 .loc 4 244 0
 1044 009c 7B68     	 ldr r3,[r7,#4]
 1045 009e 5B69     	 ldr r3,[r3,#20]
 1046 00a0 1A68     	 ldr r2,[r3]
 245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 246:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 2U));
 1047              	 .loc 4 246 0
 1048 00a2 7B68     	 ldr r3,[r7,#4]
 1049 00a4 D3F89C30 	 ldr r3,[r3,#156]
 1050 00a8 9BB2     	 uxth r3,r3
 244:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 1051              	 .loc 4 244 0
 1052 00aa 9B08     	 lsrs r3,r3,#2
 1053 00ac 9BB2     	 uxth r3,r3
 1054 00ae 1046     	 mov r0,r2
 1055 00b0 0021     	 movs r1,#0
 1056 00b2 1A46     	 mov r2,r3
 1057 00b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 247:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 1058              	 .loc 4 247 0
 1059 00b8 7B68     	 ldr r3,[r7,#4]
 1060 00ba 5B69     	 ldr r3,[r3,#20]
 1061 00bc 1A68     	 ldr r2,[r3]
 248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 249:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 1062              	 .loc 4 249 0
 1063 00be 7B68     	 ldr r3,[r7,#4]
 1064 00c0 D3F89C30 	 ldr r3,[r3,#156]
 1065 00c4 9BB2     	 uxth r3,r3
 247:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 1066              	 .loc 4 247 0
 1067 00c6 5B08     	 lsrs r3,r3,#1
 1068 00c8 9BB2     	 uxth r3,r3
 1069 00ca 1046     	 mov r0,r2
 1070 00cc 0121     	 movs r1,#1
 1071 00ce 1A46     	 mov r2,r3
 1072 00d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 250:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer compare match event based on svm scheme */
 251:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_SVMCONFIG_t)PWM_SVM_7SEG_SYMM == HandlePtr->svm_config)
 1073              	 .loc 4 251 0
 1074 00d4 7B68     	 ldr r3,[r7,#4]
 1075 00d6 93F89230 	 ldrb r3,[r3,#146]
 1076 00da 002B     	 cmp r3,#0
 1077 00dc 1CD1     	 bne .L32
 252:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 253:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1078              	 .loc 4 253 0
 1079 00de 7B68     	 ldr r3,[r7,#4]
 1080 00e0 5B69     	 ldr r3,[r3,#20]
 1081 00e2 1B68     	 ldr r3,[r3]
 1082 00e4 1846     	 mov r0,r3
 1083 00e6 0221     	 movs r1,#2
 1084 00e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 254:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 255:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1085              	 .loc 4 255 0
 1086 00ec 7B68     	 ldr r3,[r7,#4]
 1087 00ee 5B69     	 ldr r3,[r3,#20]
 1088 00f0 1B68     	 ldr r3,[r3]
 1089 00f2 1846     	 mov r0,r3
 1090 00f4 0321     	 movs r1,#3
 1091 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 256:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
 257:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1092              	 .loc 4 257 0
 1093 00fa 7B68     	 ldr r3,[r7,#4]
 1094 00fc 5B69     	 ldr r3,[r3,#20]
 1095 00fe 1B68     	 ldr r3,[r3]
 1096 0100 1846     	 mov r0,r3
 1097 0102 0421     	 movs r1,#4
 1098 0104 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 258:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 259:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1099              	 .loc 4 259 0
 1100 0108 7B68     	 ldr r3,[r7,#4]
 1101 010a 5B69     	 ldr r3,[r3,#20]
 1102 010c 1B68     	 ldr r3,[r3]
 1103 010e 1846     	 mov r0,r3
 1104 0110 0521     	 movs r1,#5
 1105 0112 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1106 0116 0DE0     	 b .L31
 1107              	.L32:
 260:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
 261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 262:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
 263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 264:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1108              	 .loc 4 264 0
 1109 0118 7B68     	 ldr r3,[r7,#4]
 1110 011a 5B69     	 ldr r3,[r3,#20]
 1111 011c 1B68     	 ldr r3,[r3]
 1112 011e 1846     	 mov r0,r3
 1113 0120 0221     	 movs r1,#2
 1114 0122 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 265:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 266:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 1115              	 .loc 4 266 0
 1116 0126 7B68     	 ldr r3,[r7,#4]
 1117 0128 5B69     	 ldr r3,[r3,#20]
 1118 012a 1B68     	 ldr r3,[r3]
 1119 012c 1846     	 mov r0,r3
 1120 012e 0421     	 movs r1,#4
 1121 0130 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1122              	.L31:
 267:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 269:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 270:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 271:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 272:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*do nothing*/
 273:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 274:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 275:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->phase_ptr[3]->slice_ptr->SRS |= HandlePtr->confighandle_ptr->event_sr_selector[3];
 1123              	 .loc 4 275 0
 1124 0134 7B68     	 ldr r3,[r7,#4]
 1125 0136 5B69     	 ldr r3,[r3,#20]
 1126 0138 1B68     	 ldr r3,[r3]
 1127 013a 7A68     	 ldr r2,[r7,#4]
 1128 013c 5269     	 ldr r2,[r2,#20]
 1129 013e 1268     	 ldr r2,[r2]
 1130 0140 D2F8A810 	 ldr r1,[r2,#168]
 1131 0144 7A68     	 ldr r2,[r7,#4]
 1132 0146 1268     	 ldr r2,[r2]
 1133 0148 526B     	 ldr r2,[r2,#52]
 1134 014a 0A43     	 orrs r2,r2,r1
 1135 014c C3F8A820 	 str r2,[r3,#168]
 276:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1136              	 .loc 4 276 0
 1137 0150 0837     	 adds r7,r7,#8
 1138              	.LCFI108:
 1139              	 .cfi_def_cfa_offset 8
 1140 0152 BD46     	 mov sp,r7
 1141              	.LCFI109:
 1142              	 .cfi_def_cfa_register 13
 1143              	 
 1144 0154 80BD     	 pop {r7,pc}
 1145              	 .cfi_endproc
 1146              	.LFE221:
 1148 0156 00BF     	 .section .ram_code,"ax",%progbits
 1149              	 .align 2
 1150              	 .thumb
 1151              	 .thumb_func
 1153              	PWM_SVM_lSymCompValUpdate:
 1154              	.LFB223:
 277:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 278:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 279:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* This function updates the compare register values for DC link current measurement */
 280:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr)
 281:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 282:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 283:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 284:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 285:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)(HandlePtr->ta >> (uint16_t) 1)));
 286:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 287:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 288:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)((uint16_t) HandlePtr->tb >> (uint16_t) 1) + (uint16
 289:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 290:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 291:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr)
 292:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1155              	 .loc 4 292 0
 1156              	 .cfi_startproc
 1157              	 
 1158              	 
 1159              	 
 1160 0000 80B4     	 push {r7}
 1161              	.LCFI110:
 1162              	 .cfi_def_cfa_offset 4
 1163              	 .cfi_offset 7,-4
 1164 0002 83B0     	 sub sp,sp,#12
 1165              	.LCFI111:
 1166              	 .cfi_def_cfa_offset 16
 1167 0004 00AF     	 add r7,sp,#0
 1168              	.LCFI112:
 1169              	 .cfi_def_cfa_register 7
 1170 0006 7860     	 str r0,[r7,#4]
 293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare register with appropriate value  based on sector*/
 294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch ((HandlePtr->sector & 7U))
 1171              	 .loc 4 294 0
 1172 0008 7B68     	 ldr r3,[r7,#4]
 1173 000a D3F8A430 	 ldr r3,[r3,#164]
 1174 000e 03F00703 	 and r3,r3,#7
 1175 0012 042B     	 cmp r3,#4
 1176 0014 00F28680 	 bhi .L35
 1177 0018 01A2     	 adr r2,.L37
 1178 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1179 001e 00BF     	 .p2align 2
 1180              	.L37:
 1181 0020 35000000 	 .word .L36+1
 1182 0024 65000000 	 .word .L38+1
 1183 0028 95000000 	 .word .L39+1
 1184 002c C5000000 	 .word .L40+1
 1185 0030 F5000000 	 .word .L41+1
 1186              	 .p2align 1
 1187              	.L36:
 295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 297:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1188              	 .loc 4 297 0
 1189 0034 7B68     	 ldr r3,[r7,#4]
 1190 0036 1B6F     	 ldr r3,[r3,#112]
 1191 0038 7A68     	 ldr r2,[r7,#4]
 1192 003a B2F8B820 	 ldrh r2,[r2,#184]
 1193 003e 1A60     	 str r2,[r3]
 298:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 1194              	 .loc 4 298 0
 1195 0040 7B68     	 ldr r3,[r7,#4]
 1196 0042 5B6F     	 ldr r3,[r3,#116]
 1197 0044 7A68     	 ldr r2,[r7,#4]
 1198 0046 B2F8B820 	 ldrh r2,[r2,#184]
 1199 004a 1146     	 mov r1,r2
 1200 004c 7A68     	 ldr r2,[r7,#4]
 1201 004e B2F8B020 	 ldrh r2,[r2,#176]
 1202 0052 0A44     	 add r2,r2,r1
 1203 0054 1A60     	 str r2,[r3]
 299:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1204              	 .loc 4 299 0
 1205 0056 7B68     	 ldr r3,[r7,#4]
 1206 0058 9B6F     	 ldr r3,[r3,#120]
 1207 005a 7A68     	 ldr r2,[r7,#4]
 1208 005c B2F8B620 	 ldrh r2,[r2,#182]
 1209 0060 1A60     	 str r2,[r3]
 300:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1210              	 .loc 4 300 0
 1211 0062 77E0     	 b .L34
 1212              	.L38:
 301:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 302:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->ta);
 1213              	 .loc 4 302 0
 1214 0064 7B68     	 ldr r3,[r7,#4]
 1215 0066 1B6F     	 ldr r3,[r3,#112]
 1216 0068 7A68     	 ldr r2,[r7,#4]
 1217 006a B2F8B820 	 ldrh r2,[r2,#184]
 1218 006e 1146     	 mov r1,r2
 1219 0070 7A68     	 ldr r2,[r7,#4]
 1220 0072 B2F8AE20 	 ldrh r2,[r2,#174]
 1221 0076 0A44     	 add r2,r2,r1
 1222 0078 1A60     	 str r2,[r3]
 303:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb);
 1223              	 .loc 4 303 0
 1224 007a 7B68     	 ldr r3,[r7,#4]
 1225 007c 5B6F     	 ldr r3,[r3,#116]
 1226 007e 7A68     	 ldr r2,[r7,#4]
 1227 0080 B2F8B820 	 ldrh r2,[r2,#184]
 1228 0084 1A60     	 str r2,[r3]
 304:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1229              	 .loc 4 304 0
 1230 0086 7B68     	 ldr r3,[r7,#4]
 1231 0088 9B6F     	 ldr r3,[r3,#120]
 1232 008a 7A68     	 ldr r2,[r7,#4]
 1233 008c B2F8B620 	 ldrh r2,[r2,#182]
 1234 0090 1A60     	 str r2,[r3]
 305:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1235              	 .loc 4 305 0
 1236 0092 5FE0     	 b .L34
 1237              	.L39:
 306:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 307:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1238              	 .loc 4 307 0
 1239 0094 7B68     	 ldr r3,[r7,#4]
 1240 0096 1B6F     	 ldr r3,[r3,#112]
 1241 0098 7A68     	 ldr r2,[r7,#4]
 1242 009a B2F8B620 	 ldrh r2,[r2,#182]
 1243 009e 1A60     	 str r2,[r3]
 308:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb;
 1244              	 .loc 4 308 0
 1245 00a0 7B68     	 ldr r3,[r7,#4]
 1246 00a2 5B6F     	 ldr r3,[r3,#116]
 1247 00a4 7A68     	 ldr r2,[r7,#4]
 1248 00a6 B2F8B820 	 ldrh r2,[r2,#184]
 1249 00aa 1A60     	 str r2,[r3]
 309:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 1250              	 .loc 4 309 0
 1251 00ac 7B68     	 ldr r3,[r7,#4]
 1252 00ae 9B6F     	 ldr r3,[r3,#120]
 1253 00b0 7A68     	 ldr r2,[r7,#4]
 1254 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1255 00b6 1146     	 mov r1,r2
 1256 00b8 7A68     	 ldr r2,[r7,#4]
 1257 00ba B2F8B020 	 ldrh r2,[r2,#176]
 1258 00be 0A44     	 add r2,r2,r1
 1259 00c0 1A60     	 str r2,[r3]
 310:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1260              	 .loc 4 310 0
 1261 00c2 47E0     	 b .L34
 1262              	.L40:
 311:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 312:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1263              	 .loc 4 312 0
 1264 00c4 7B68     	 ldr r3,[r7,#4]
 1265 00c6 1B6F     	 ldr r3,[r3,#112]
 1266 00c8 7A68     	 ldr r2,[r7,#4]
 1267 00ca B2F8B620 	 ldrh r2,[r2,#182]
 1268 00ce 1A60     	 str r2,[r3]
 313:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t)( HandlePtr->v_tb+ HandlePtr->ta);
 1269              	 .loc 4 313 0
 1270 00d0 7B68     	 ldr r3,[r7,#4]
 1271 00d2 5B6F     	 ldr r3,[r3,#116]
 1272 00d4 7A68     	 ldr r2,[r7,#4]
 1273 00d6 B2F8B820 	 ldrh r2,[r2,#184]
 1274 00da 1146     	 mov r1,r2
 1275 00dc 7A68     	 ldr r2,[r7,#4]
 1276 00de B2F8AE20 	 ldrh r2,[r2,#174]
 1277 00e2 0A44     	 add r2,r2,r1
 1278 00e4 1A60     	 str r2,[r3]
 314:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1279              	 .loc 4 314 0
 1280 00e6 7B68     	 ldr r3,[r7,#4]
 1281 00e8 9B6F     	 ldr r3,[r3,#120]
 1282 00ea 7A68     	 ldr r2,[r7,#4]
 1283 00ec B2F8B820 	 ldrh r2,[r2,#184]
 1284 00f0 1A60     	 str r2,[r3]
 315:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1285              	 .loc 4 315 0
 1286 00f2 2FE0     	 b .L34
 1287              	.L41:
 316:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 317:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->tb;
 1288              	 .loc 4 317 0
 1289 00f4 7B68     	 ldr r3,[r7,#4]
 1290 00f6 1B6F     	 ldr r3,[r3,#112]
 1291 00f8 7A68     	 ldr r2,[r7,#4]
 1292 00fa B2F8B820 	 ldrh r2,[r2,#184]
 1293 00fe 1146     	 mov r1,r2
 1294 0100 7A68     	 ldr r2,[r7,#4]
 1295 0102 B2F8B020 	 ldrh r2,[r2,#176]
 1296 0106 0A44     	 add r2,r2,r1
 1297 0108 1A60     	 str r2,[r3]
 318:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1298              	 .loc 4 318 0
 1299 010a 7B68     	 ldr r3,[r7,#4]
 1300 010c 5B6F     	 ldr r3,[r3,#116]
 1301 010e 7A68     	 ldr r2,[r7,#4]
 1302 0110 B2F8B620 	 ldrh r2,[r2,#182]
 1303 0114 1A60     	 str r2,[r3]
 319:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1304              	 .loc 4 319 0
 1305 0116 7B68     	 ldr r3,[r7,#4]
 1306 0118 9B6F     	 ldr r3,[r3,#120]
 1307 011a 7A68     	 ldr r2,[r7,#4]
 1308 011c B2F8B820 	 ldrh r2,[r2,#184]
 1309 0120 1A60     	 str r2,[r3]
 320:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1310              	 .loc 4 320 0
 1311 0122 17E0     	 b .L34
 1312              	.L35:
 321:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 322:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1313              	 .loc 4 322 0
 1314 0124 7B68     	 ldr r3,[r7,#4]
 1315 0126 1B6F     	 ldr r3,[r3,#112]
 1316 0128 7A68     	 ldr r2,[r7,#4]
 1317 012a B2F8B820 	 ldrh r2,[r2,#184]
 1318 012e 1A60     	 str r2,[r3]
 323:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1319              	 .loc 4 323 0
 1320 0130 7B68     	 ldr r3,[r7,#4]
 1321 0132 5B6F     	 ldr r3,[r3,#116]
 1322 0134 7A68     	 ldr r2,[r7,#4]
 1323 0136 B2F8B620 	 ldrh r2,[r2,#182]
 1324 013a 1A60     	 str r2,[r3]
 324:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->ta;
 1325              	 .loc 4 324 0
 1326 013c 7B68     	 ldr r3,[r7,#4]
 1327 013e 9B6F     	 ldr r3,[r3,#120]
 1328 0140 7A68     	 ldr r2,[r7,#4]
 1329 0142 B2F8B820 	 ldrh r2,[r2,#184]
 1330 0146 1146     	 mov r1,r2
 1331 0148 7A68     	 ldr r2,[r7,#4]
 1332 014a B2F8AE20 	 ldrh r2,[r2,#174]
 1333 014e 0A44     	 add r2,r2,r1
 1334 0150 1A60     	 str r2,[r3]
 325:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1335              	 .loc 4 325 0
 1336 0152 00BF     	 nop
 1337              	.L34:
 326:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 327:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1338              	 .loc 4 327 0
 1339 0154 0C37     	 adds r7,r7,#12
 1340              	.LCFI113:
 1341              	 .cfi_def_cfa_offset 4
 1342 0156 BD46     	 mov sp,r7
 1343              	.LCFI114:
 1344              	 .cfi_def_cfa_register 13
 1345              	 
 1346 0158 5DF8047B 	 ldr r7,[sp],#4
 1347              	.LCFI115:
 1348              	 .cfi_restore 7
 1349              	 .cfi_def_cfa_offset 0
 1350 015c 7047     	 bx lr
 1351              	 .cfi_endproc
 1352              	.LFE223:
 1354              	 .section .text.PWM_SVM_lAsymCompValUpdate,"ax",%progbits
 1355              	 .align 2
 1356              	 .thumb
 1357              	 .thumb_func
 1359              	PWM_SVM_lAsymCompValUpdate:
 1360              	.LFB224:
 328:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 329:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr)
 330:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1361              	 .loc 4 330 0
 1362              	 .cfi_startproc
 1363              	 
 1364              	 
 1365              	 
 1366 0000 80B4     	 push {r7}
 1367              	.LCFI116:
 1368              	 .cfi_def_cfa_offset 4
 1369              	 .cfi_offset 7,-4
 1370 0002 83B0     	 sub sp,sp,#12
 1371              	.LCFI117:
 1372              	 .cfi_def_cfa_offset 16
 1373 0004 00AF     	 add r7,sp,#0
 1374              	.LCFI118:
 1375              	 .cfi_def_cfa_register 7
 1376 0006 7860     	 str r0,[r7,#4]
 331:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 332:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 1377              	 .loc 4 332 0
 1378 0008 7B68     	 ldr r3,[r7,#4]
 1379 000a D3F8A430 	 ldr r3,[r3,#164]
 1380 000e 03F00703 	 and r3,r3,#7
 1381 0012 042B     	 cmp r3,#4
 1382 0014 00F20381 	 bhi .L44
 1383 0018 01A2     	 adr r2,.L46
 1384 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1385 001e 00BF     	 .p2align 2
 1386              	.L46:
 1387 0020 35000000 	 .word .L45+1
 1388 0024 97000000 	 .word .L47+1
 1389 0028 F9000000 	 .word .L48+1
 1390 002c 5B010000 	 .word .L49+1
 1391 0030 BD010000 	 .word .L50+1
 1392              	 .p2align 1
 1393              	.L45:
 333:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 334:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 335:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1394              	 .loc 4 335 0
 1395 0034 7B68     	 ldr r3,[r7,#4]
 1396 0036 1B6F     	 ldr r3,[r3,#112]
 1397 0038 7A68     	 ldr r2,[r7,#4]
 1398 003a B2F8B820 	 ldrh r2,[r2,#184]
 1399 003e 1A60     	 str r2,[r3]
 336:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb2;
 1400              	 .loc 4 336 0
 1401 0040 7B68     	 ldr r3,[r7,#4]
 1402 0042 DB6F     	 ldr r3,[r3,#124]
 1403 0044 7A68     	 ldr r2,[r7,#4]
 1404 0046 B2F8BC20 	 ldrh r2,[r2,#188]
 1405 004a 1A60     	 str r2,[r3]
 337:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 338:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1406              	 .loc 4 338 0
 1407 004c 7B68     	 ldr r3,[r7,#4]
 1408 004e 5B6F     	 ldr r3,[r3,#116]
 1409 0050 7A68     	 ldr r2,[r7,#4]
 1410 0052 B2F8B820 	 ldrh r2,[r2,#184]
 1411 0056 1146     	 mov r1,r2
 1412 0058 7A68     	 ldr r2,[r7,#4]
 1413 005a B2F8B020 	 ldrh r2,[r2,#176]
 1414 005e 0A44     	 add r2,r2,r1
 1415 0060 1A60     	 str r2,[r3]
 339:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1416              	 .loc 4 339 0
 1417 0062 7B68     	 ldr r3,[r7,#4]
 1418 0064 D3F88030 	 ldr r3,[r3,#128]
 1419 0068 7A68     	 ldr r2,[r7,#4]
 1420 006a B2F8B820 	 ldrh r2,[r2,#184]
 1421 006e 1146     	 mov r1,r2
 1422 0070 7A68     	 ldr r2,[r7,#4]
 1423 0072 B2F8B020 	 ldrh r2,[r2,#176]
 1424 0076 0A44     	 add r2,r2,r1
 1425 0078 1A60     	 str r2,[r3]
 340:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 341:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1426              	 .loc 4 341 0
 1427 007a 7B68     	 ldr r3,[r7,#4]
 1428 007c 9B6F     	 ldr r3,[r3,#120]
 1429 007e 7A68     	 ldr r2,[r7,#4]
 1430 0080 B2F8B620 	 ldrh r2,[r2,#182]
 1431 0084 1A60     	 str r2,[r3]
 342:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1432              	 .loc 4 342 0
 1433 0086 7B68     	 ldr r3,[r7,#4]
 1434 0088 D3F88430 	 ldr r3,[r3,#132]
 1435 008c 7A68     	 ldr r2,[r7,#4]
 1436 008e B2F8BA20 	 ldrh r2,[r2,#186]
 1437 0092 1A60     	 str r2,[r3]
 343:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1438              	 .loc 4 343 0
 1439 0094 F4E0     	 b .L43
 1440              	.L47:
 344:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 345:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1441              	 .loc 4 345 0
 1442 0096 7B68     	 ldr r3,[r7,#4]
 1443 0098 1B6F     	 ldr r3,[r3,#112]
 1444 009a 7A68     	 ldr r2,[r7,#4]
 1445 009c B2F8B820 	 ldrh r2,[r2,#184]
 1446 00a0 1146     	 mov r1,r2
 1447 00a2 7A68     	 ldr r2,[r7,#4]
 1448 00a4 B2F8AE20 	 ldrh r2,[r2,#174]
 1449 00a8 0A44     	 add r2,r2,r1
 1450 00aa 1A60     	 str r2,[r3]
 346:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1451              	 .loc 4 346 0
 1452 00ac 7B68     	 ldr r3,[r7,#4]
 1453 00ae DB6F     	 ldr r3,[r3,#124]
 1454 00b0 7A68     	 ldr r2,[r7,#4]
 1455 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1456 00b6 1146     	 mov r1,r2
 1457 00b8 7A68     	 ldr r2,[r7,#4]
 1458 00ba B2F8AE20 	 ldrh r2,[r2,#174]
 1459 00be 0A44     	 add r2,r2,r1
 1460 00c0 1A60     	 str r2,[r3]
 347:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 348:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1461              	 .loc 4 348 0
 1462 00c2 7B68     	 ldr r3,[r7,#4]
 1463 00c4 5B6F     	 ldr r3,[r3,#116]
 1464 00c6 7A68     	 ldr r2,[r7,#4]
 1465 00c8 B2F8B820 	 ldrh r2,[r2,#184]
 1466 00cc 1A60     	 str r2,[r3]
 349:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1467              	 .loc 4 349 0
 1468 00ce 7B68     	 ldr r3,[r7,#4]
 1469 00d0 D3F88030 	 ldr r3,[r3,#128]
 1470 00d4 7A68     	 ldr r2,[r7,#4]
 1471 00d6 B2F8BC20 	 ldrh r2,[r2,#188]
 1472 00da 1A60     	 str r2,[r3]
 350:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 351:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1473              	 .loc 4 351 0
 1474 00dc 7B68     	 ldr r3,[r7,#4]
 1475 00de 9B6F     	 ldr r3,[r3,#120]
 1476 00e0 7A68     	 ldr r2,[r7,#4]
 1477 00e2 B2F8B620 	 ldrh r2,[r2,#182]
 1478 00e6 1A60     	 str r2,[r3]
 352:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1479              	 .loc 4 352 0
 1480 00e8 7B68     	 ldr r3,[r7,#4]
 1481 00ea D3F88430 	 ldr r3,[r3,#132]
 1482 00ee 7A68     	 ldr r2,[r7,#4]
 1483 00f0 B2F8BA20 	 ldrh r2,[r2,#186]
 1484 00f4 1A60     	 str r2,[r3]
 353:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1485              	 .loc 4 353 0
 1486 00f6 C3E0     	 b .L43
 1487              	.L48:
 354:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 355:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1488              	 .loc 4 355 0
 1489 00f8 7B68     	 ldr r3,[r7,#4]
 1490 00fa 1B6F     	 ldr r3,[r3,#112]
 1491 00fc 7A68     	 ldr r2,[r7,#4]
 1492 00fe B2F8B620 	 ldrh r2,[r2,#182]
 1493 0102 1A60     	 str r2,[r3]
 356:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1494              	 .loc 4 356 0
 1495 0104 7B68     	 ldr r3,[r7,#4]
 1496 0106 DB6F     	 ldr r3,[r3,#124]
 1497 0108 7A68     	 ldr r2,[r7,#4]
 1498 010a B2F8BA20 	 ldrh r2,[r2,#186]
 1499 010e 1A60     	 str r2,[r3]
 357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 358:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1500              	 .loc 4 358 0
 1501 0110 7B68     	 ldr r3,[r7,#4]
 1502 0112 5B6F     	 ldr r3,[r3,#116]
 1503 0114 7A68     	 ldr r2,[r7,#4]
 1504 0116 B2F8B820 	 ldrh r2,[r2,#184]
 1505 011a 1A60     	 str r2,[r3]
 359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1506              	 .loc 4 359 0
 1507 011c 7B68     	 ldr r3,[r7,#4]
 1508 011e D3F88030 	 ldr r3,[r3,#128]
 1509 0122 7A68     	 ldr r2,[r7,#4]
 1510 0124 B2F8BC20 	 ldrh r2,[r2,#188]
 1511 0128 1A60     	 str r2,[r3]
 360:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 361:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1512              	 .loc 4 361 0
 1513 012a 7B68     	 ldr r3,[r7,#4]
 1514 012c 9B6F     	 ldr r3,[r3,#120]
 1515 012e 7A68     	 ldr r2,[r7,#4]
 1516 0130 B2F8B820 	 ldrh r2,[r2,#184]
 1517 0134 1146     	 mov r1,r2
 1518 0136 7A68     	 ldr r2,[r7,#4]
 1519 0138 B2F8B020 	 ldrh r2,[r2,#176]
 1520 013c 0A44     	 add r2,r2,r1
 1521 013e 1A60     	 str r2,[r3]
 362:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1522              	 .loc 4 362 0
 1523 0140 7B68     	 ldr r3,[r7,#4]
 1524 0142 D3F88430 	 ldr r3,[r3,#132]
 1525 0146 7A68     	 ldr r2,[r7,#4]
 1526 0148 B2F8B820 	 ldrh r2,[r2,#184]
 1527 014c 1146     	 mov r1,r2
 1528 014e 7A68     	 ldr r2,[r7,#4]
 1529 0150 B2F8B020 	 ldrh r2,[r2,#176]
 1530 0154 0A44     	 add r2,r2,r1
 1531 0156 1A60     	 str r2,[r3]
 363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1532              	 .loc 4 363 0
 1533 0158 92E0     	 b .L43
 1534              	.L49:
 364:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1535              	 .loc 4 365 0
 1536 015a 7B68     	 ldr r3,[r7,#4]
 1537 015c 1B6F     	 ldr r3,[r3,#112]
 1538 015e 7A68     	 ldr r2,[r7,#4]
 1539 0160 B2F8B620 	 ldrh r2,[r2,#182]
 1540 0164 1A60     	 str r2,[r3]
 366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1541              	 .loc 4 366 0
 1542 0166 7B68     	 ldr r3,[r7,#4]
 1543 0168 DB6F     	 ldr r3,[r3,#124]
 1544 016a 7A68     	 ldr r2,[r7,#4]
 1545 016c B2F8BA20 	 ldrh r2,[r2,#186]
 1546 0170 1A60     	 str r2,[r3]
 367:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1547              	 .loc 4 368 0
 1548 0172 7B68     	 ldr r3,[r7,#4]
 1549 0174 5B6F     	 ldr r3,[r3,#116]
 1550 0176 7A68     	 ldr r2,[r7,#4]
 1551 0178 B2F8B820 	 ldrh r2,[r2,#184]
 1552 017c 1146     	 mov r1,r2
 1553 017e 7A68     	 ldr r2,[r7,#4]
 1554 0180 B2F8AE20 	 ldrh r2,[r2,#174]
 1555 0184 0A44     	 add r2,r2,r1
 1556 0186 1A60     	 str r2,[r3]
 369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1557              	 .loc 4 369 0
 1558 0188 7B68     	 ldr r3,[r7,#4]
 1559 018a D3F88030 	 ldr r3,[r3,#128]
 1560 018e 7A68     	 ldr r2,[r7,#4]
 1561 0190 B2F8B820 	 ldrh r2,[r2,#184]
 1562 0194 1146     	 mov r1,r2
 1563 0196 7A68     	 ldr r2,[r7,#4]
 1564 0198 B2F8AE20 	 ldrh r2,[r2,#174]
 1565 019c 0A44     	 add r2,r2,r1
 1566 019e 1A60     	 str r2,[r3]
 370:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 371:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1567              	 .loc 4 371 0
 1568 01a0 7B68     	 ldr r3,[r7,#4]
 1569 01a2 9B6F     	 ldr r3,[r3,#120]
 1570 01a4 7A68     	 ldr r2,[r7,#4]
 1571 01a6 B2F8B820 	 ldrh r2,[r2,#184]
 1572 01aa 1A60     	 str r2,[r3]
 372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1573              	 .loc 4 372 0
 1574 01ac 7B68     	 ldr r3,[r7,#4]
 1575 01ae D3F88430 	 ldr r3,[r3,#132]
 1576 01b2 7A68     	 ldr r2,[r7,#4]
 1577 01b4 B2F8BC20 	 ldrh r2,[r2,#188]
 1578 01b8 1A60     	 str r2,[r3]
 373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1579              	 .loc 4 373 0
 1580 01ba 61E0     	 b .L43
 1581              	.L50:
 374:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1582              	 .loc 4 375 0
 1583 01bc 7B68     	 ldr r3,[r7,#4]
 1584 01be 1B6F     	 ldr r3,[r3,#112]
 1585 01c0 7A68     	 ldr r2,[r7,#4]
 1586 01c2 B2F8B820 	 ldrh r2,[r2,#184]
 1587 01c6 1146     	 mov r1,r2
 1588 01c8 7A68     	 ldr r2,[r7,#4]
 1589 01ca B2F8B020 	 ldrh r2,[r2,#176]
 1590 01ce 0A44     	 add r2,r2,r1
 1591 01d0 1A60     	 str r2,[r3]
 376:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1592              	 .loc 4 376 0
 1593 01d2 7B68     	 ldr r3,[r7,#4]
 1594 01d4 DB6F     	 ldr r3,[r3,#124]
 1595 01d6 7A68     	 ldr r2,[r7,#4]
 1596 01d8 B2F8B820 	 ldrh r2,[r2,#184]
 1597 01dc 1146     	 mov r1,r2
 1598 01de 7A68     	 ldr r2,[r7,#4]
 1599 01e0 B2F8B020 	 ldrh r2,[r2,#176]
 1600 01e4 0A44     	 add r2,r2,r1
 1601 01e6 1A60     	 str r2,[r3]
 377:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1602              	 .loc 4 378 0
 1603 01e8 7B68     	 ldr r3,[r7,#4]
 1604 01ea 5B6F     	 ldr r3,[r3,#116]
 1605 01ec 7A68     	 ldr r2,[r7,#4]
 1606 01ee B2F8B620 	 ldrh r2,[r2,#182]
 1607 01f2 1A60     	 str r2,[r3]
 379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1608              	 .loc 4 379 0
 1609 01f4 7B68     	 ldr r3,[r7,#4]
 1610 01f6 D3F88030 	 ldr r3,[r3,#128]
 1611 01fa 7A68     	 ldr r2,[r7,#4]
 1612 01fc B2F8BA20 	 ldrh r2,[r2,#186]
 1613 0200 1A60     	 str r2,[r3]
 380:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1614              	 .loc 4 381 0
 1615 0202 7B68     	 ldr r3,[r7,#4]
 1616 0204 9B6F     	 ldr r3,[r3,#120]
 1617 0206 7A68     	 ldr r2,[r7,#4]
 1618 0208 B2F8B820 	 ldrh r2,[r2,#184]
 1619 020c 1A60     	 str r2,[r3]
 382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1620              	 .loc 4 382 0
 1621 020e 7B68     	 ldr r3,[r7,#4]
 1622 0210 D3F88430 	 ldr r3,[r3,#132]
 1623 0214 7A68     	 ldr r2,[r7,#4]
 1624 0216 B2F8BC20 	 ldrh r2,[r2,#188]
 1625 021a 1A60     	 str r2,[r3]
 383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1626              	 .loc 4 383 0
 1627 021c 30E0     	 b .L43
 1628              	.L44:
 384:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1629              	 .loc 4 385 0
 1630 021e 7B68     	 ldr r3,[r7,#4]
 1631 0220 1B6F     	 ldr r3,[r3,#112]
 1632 0222 7A68     	 ldr r2,[r7,#4]
 1633 0224 B2F8B820 	 ldrh r2,[r2,#184]
 1634 0228 1A60     	 str r2,[r3]
 386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1635              	 .loc 4 386 0
 1636 022a 7B68     	 ldr r3,[r7,#4]
 1637 022c DB6F     	 ldr r3,[r3,#124]
 1638 022e 7A68     	 ldr r2,[r7,#4]
 1639 0230 B2F8BC20 	 ldrh r2,[r2,#188]
 1640 0234 1A60     	 str r2,[r3]
 387:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1641              	 .loc 4 388 0
 1642 0236 7B68     	 ldr r3,[r7,#4]
 1643 0238 5B6F     	 ldr r3,[r3,#116]
 1644 023a 7A68     	 ldr r2,[r7,#4]
 1645 023c B2F8B620 	 ldrh r2,[r2,#182]
 1646 0240 1A60     	 str r2,[r3]
 389:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1647              	 .loc 4 389 0
 1648 0242 7B68     	 ldr r3,[r7,#4]
 1649 0244 D3F88030 	 ldr r3,[r3,#128]
 1650 0248 7A68     	 ldr r2,[r7,#4]
 1651 024a B2F8BA20 	 ldrh r2,[r2,#186]
 1652 024e 1A60     	 str r2,[r3]
 390:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1653              	 .loc 4 391 0
 1654 0250 7B68     	 ldr r3,[r7,#4]
 1655 0252 9B6F     	 ldr r3,[r3,#120]
 1656 0254 7A68     	 ldr r2,[r7,#4]
 1657 0256 B2F8B820 	 ldrh r2,[r2,#184]
 1658 025a 1146     	 mov r1,r2
 1659 025c 7A68     	 ldr r2,[r7,#4]
 1660 025e B2F8AE20 	 ldrh r2,[r2,#174]
 1661 0262 0A44     	 add r2,r2,r1
 1662 0264 1A60     	 str r2,[r3]
 392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1663              	 .loc 4 392 0
 1664 0266 7B68     	 ldr r3,[r7,#4]
 1665 0268 D3F88430 	 ldr r3,[r3,#132]
 1666 026c 7A68     	 ldr r2,[r7,#4]
 1667 026e B2F8B820 	 ldrh r2,[r2,#184]
 1668 0272 1146     	 mov r1,r2
 1669 0274 7A68     	 ldr r2,[r7,#4]
 1670 0276 B2F8AE20 	 ldrh r2,[r2,#174]
 1671 027a 0A44     	 add r2,r2,r1
 1672 027c 1A60     	 str r2,[r3]
 393:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1673              	 .loc 4 394 0
 1674 027e 00BF     	 nop
 1675              	.L43:
 395:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 396:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1676              	 .loc 4 396 0
 1677 0280 0C37     	 adds r7,r7,#12
 1678              	.LCFI119:
 1679              	 .cfi_def_cfa_offset 4
 1680 0282 BD46     	 mov sp,r7
 1681              	.LCFI120:
 1682              	 .cfi_def_cfa_register 13
 1683              	 
 1684 0284 5DF8047B 	 ldr r7,[sp],#4
 1685              	.LCFI121:
 1686              	 .cfi_restore 7
 1687              	 .cfi_def_cfa_offset 0
 1688 0288 7047     	 bx lr
 1689              	 .cfi_endproc
 1690              	.LFE224:
 1692 028a 00BF     	 .section .ram_code
 1693 015e 00BF     	 .align 2
 1694              	 .global PWM_SVM_CalCmpValueSym7
 1695              	 .thumb
 1696              	 .thumb_func
 1698              	PWM_SVM_CalCmpValueSym7:
 1699              	.LFB225:
 397:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 398:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 399:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare valuefor Symmetric 7-segment SVM.
 400:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 401:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym7(PWM_SVM_t* const HandlePtr)
 402:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1700              	 .loc 4 402 0
 1701              	 .cfi_startproc
 1702              	 
 1703              	 
 1704 0160 80B5     	 push {r7,lr}
 1705              	.LCFI122:
 1706              	 .cfi_def_cfa_offset 8
 1707              	 .cfi_offset 7,-8
 1708              	 .cfi_offset 14,-4
 1709 0162 82B0     	 sub sp,sp,#8
 1710              	.LCFI123:
 1711              	 .cfi_def_cfa_offset 16
 1712 0164 00AF     	 add r7,sp,#0
 1713              	.LCFI124:
 1714              	 .cfi_def_cfa_register 7
 1715 0166 7860     	 str r0,[r7,#4]
 403:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 404:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < (uint16_t) HandlePtr->tmin)
 1716              	 .loc 4 404 0
 1717 0168 7B68     	 ldr r3,[r7,#4]
 1718 016a B3F8AE20 	 ldrh r2,[r3,#174]
 1719 016e 7B68     	 ldr r3,[r7,#4]
 1720 0170 B3F8C230 	 ldrh r3,[r3,#194]
 1721 0174 9A42     	 cmp r2,r3
 1722 0176 05D2     	 bcs .L53
 405:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t) HandlePtr->tmin;
 1723              	 .loc 4 406 0
 1724 0178 7B68     	 ldr r3,[r7,#4]
 1725 017a B3F8C220 	 ldrh r2,[r3,#194]
 1726 017e 7B68     	 ldr r3,[r7,#4]
 1727 0180 A3F8AE20 	 strh r2,[r3,#174]
 1728              	.L53:
 407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 409:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < (uint16_t) HandlePtr->tmin)
 1729              	 .loc 4 409 0
 1730 0184 7B68     	 ldr r3,[r7,#4]
 1731 0186 B3F8B020 	 ldrh r2,[r3,#176]
 1732 018a 7B68     	 ldr r3,[r7,#4]
 1733 018c B3F8C230 	 ldrh r3,[r3,#194]
 1734 0190 9A42     	 cmp r2,r3
 1735 0192 05D2     	 bcs .L54
 410:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 411:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t) HandlePtr->tmin;
 1736              	 .loc 4 411 0
 1737 0194 7B68     	 ldr r3,[r7,#4]
 1738 0196 B3F8C220 	 ldrh r2,[r3,#194]
 1739 019a 7B68     	 ldr r3,[r7,#4]
 1740 019c A3F8B020 	 strh r2,[r3,#176]
 1741              	.L54:
 412:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 413:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t)(((uint32_t) HandlePtr->period + (uint16_t) HandlePtr->ta) + (uint16_
 1742              	 .loc 4 414 0
 1743 01a0 7B68     	 ldr r3,[r7,#4]
 1744 01a2 D3F89C30 	 ldr r3,[r3,#156]
 1745 01a6 9AB2     	 uxth r2,r3
 1746 01a8 7B68     	 ldr r3,[r7,#4]
 1747 01aa B3F8AE30 	 ldrh r3,[r3,#174]
 1748 01ae 1344     	 add r3,r3,r2
 1749 01b0 9AB2     	 uxth r2,r3
 1750 01b2 7B68     	 ldr r3,[r7,#4]
 1751 01b4 B3F8B030 	 ldrh r3,[r3,#176]
 1752 01b8 1344     	 add r3,r3,r2
 1753 01ba 9BB2     	 uxth r3,r3
 1754 01bc 5B08     	 lsrs r3,r3,#1
 1755 01be 9AB2     	 uxth r2,r3
 1756 01c0 7B68     	 ldr r3,[r7,#4]
 1757 01c2 A3F8B620 	 strh r2,[r3,#182]
 415:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1758              	 .loc 4 416 0
 1759 01c6 7B68     	 ldr r3,[r7,#4]
 1760 01c8 D3F89C30 	 ldr r3,[r3,#156]
 1761 01cc 9AB2     	 uxth r2,r3
 1762 01ce 7B68     	 ldr r3,[r7,#4]
 1763 01d0 B3F8AE10 	 ldrh r1,[r3,#174]
 1764 01d4 7B68     	 ldr r3,[r7,#4]
 1765 01d6 B3F8B030 	 ldrh r3,[r3,#176]
 1766 01da 0B44     	 add r3,r3,r1
 1767 01dc 9BB2     	 uxth r3,r3
 1768 01de D31A     	 subs r3,r2,r3
 1769 01e0 9BB2     	 uxth r3,r3
 1770 01e2 5B08     	 lsrs r3,r3,#1
 1771 01e4 9AB2     	 uxth r2,r3
 1772 01e6 7B68     	 ldr r3,[r7,#4]
 1773 01e8 A3F8B820 	 strh r2,[r3,#184]
 417:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 418:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 422:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 424:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 425:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1774              	 .loc 4 426 0
 1775 01ec 7868     	 ldr r0,[r7,#4]
 1776 01ee FFF707FF 	 bl PWM_SVM_lSymCompValUpdate
 427:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 428:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1777              	 .loc 4 428 0
 1778 01f2 0837     	 adds r7,r7,#8
 1779              	.LCFI125:
 1780              	 .cfi_def_cfa_offset 8
 1781 01f4 BD46     	 mov sp,r7
 1782              	.LCFI126:
 1783              	 .cfi_def_cfa_register 13
 1784              	 
 1785 01f6 80BD     	 pop {r7,pc}
 1786              	 .cfi_endproc
 1787              	.LFE225:
 1789              	 .align 2
 1790              	 .global PWM_SVM_CalCmpValueSym5
 1791              	 .thumb
 1792              	 .thumb_func
 1794              	PWM_SVM_CalCmpValueSym5:
 1795              	.LFB226:
 429:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 430:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 431:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Symmetric 5-segment SVM.
 432:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 433:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym5(PWM_SVM_t* const HandlePtr)
 434:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1796              	 .loc 4 434 0
 1797              	 .cfi_startproc
 1798              	 
 1799              	 
 1800 01f8 80B5     	 push {r7,lr}
 1801              	.LCFI127:
 1802              	 .cfi_def_cfa_offset 8
 1803              	 .cfi_offset 7,-8
 1804              	 .cfi_offset 14,-4
 1805 01fa 82B0     	 sub sp,sp,#8
 1806              	.LCFI128:
 1807              	 .cfi_def_cfa_offset 16
 1808 01fc 00AF     	 add r7,sp,#0
 1809              	.LCFI129:
 1810              	 .cfi_def_cfa_register 7
 1811 01fe 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1812              	 .loc 4 436 0
 1813 0200 7B68     	 ldr r3,[r7,#4]
 1814 0202 B3F8AE20 	 ldrh r2,[r3,#174]
 1815 0206 7B68     	 ldr r3,[r7,#4]
 1816 0208 B3F8C230 	 ldrh r3,[r3,#194]
 1817 020c 9A42     	 cmp r2,r3
 1818 020e 05D2     	 bcs .L56
 437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 438:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->tmin;
 1819              	 .loc 4 438 0
 1820 0210 7B68     	 ldr r3,[r7,#4]
 1821 0212 B3F8C220 	 ldrh r2,[r3,#194]
 1822 0216 7B68     	 ldr r3,[r7,#4]
 1823 0218 A3F8AE20 	 strh r2,[r3,#174]
 1824              	.L56:
 439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1825              	 .loc 4 441 0
 1826 021c 7B68     	 ldr r3,[r7,#4]
 1827 021e B3F8B020 	 ldrh r2,[r3,#176]
 1828 0222 7B68     	 ldr r3,[r7,#4]
 1829 0224 B3F8C230 	 ldrh r3,[r3,#194]
 1830 0228 9A42     	 cmp r2,r3
 1831 022a 05D2     	 bcs .L57
 442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 443:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 1832              	 .loc 4 443 0
 1833 022c 7B68     	 ldr r3,[r7,#4]
 1834 022e B3F8C220 	 ldrh r2,[r3,#194]
 1835 0232 7B68     	 ldr r3,[r7,#4]
 1836 0234 A3F8B020 	 strh r2,[r3,#176]
 1837              	.L57:
 444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 1838              	 .loc 4 445 0
 1839 0238 7B68     	 ldr r3,[r7,#4]
 1840 023a D3F89C30 	 ldr r3,[r3,#156]
 1841 023e 9BB2     	 uxth r3,r3
 1842 0240 0133     	 adds r3,r3,#1
 1843 0242 9AB2     	 uxth r2,r3
 1844 0244 7B68     	 ldr r3,[r7,#4]
 1845 0246 A3F8B620 	 strh r2,[r3,#182]
 446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 1846              	 .loc 4 446 0
 1847 024a 7B68     	 ldr r3,[r7,#4]
 1848 024c D3F89C30 	 ldr r3,[r3,#156]
 1849 0250 9AB2     	 uxth r2,r3
 1850 0252 7B68     	 ldr r3,[r7,#4]
 1851 0254 B3F8AE30 	 ldrh r3,[r3,#174]
 1852 0258 D31A     	 subs r3,r2,r3
 1853 025a 9AB2     	 uxth r2,r3
 1854 025c 7B68     	 ldr r3,[r7,#4]
 1855 025e B3F8B030 	 ldrh r3,[r3,#176]
 1856 0262 D31A     	 subs r3,r2,r3
 1857 0264 9AB2     	 uxth r2,r3
 1858 0266 7B68     	 ldr r3,[r7,#4]
 1859 0268 A3F8B820 	 strh r2,[r3,#184]
 447:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 450:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 453:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 455:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1860              	 .loc 4 455 0
 1861 026c 7868     	 ldr r0,[r7,#4]
 1862 026e FFF7C7FE 	 bl PWM_SVM_lSymCompValUpdate
 456:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1863              	 .loc 4 456 0
 1864 0272 0837     	 adds r7,r7,#8
 1865              	.LCFI130:
 1866              	 .cfi_def_cfa_offset 8
 1867 0274 BD46     	 mov sp,r7
 1868              	.LCFI131:
 1869              	 .cfi_def_cfa_register 13
 1870              	 
 1871 0276 80BD     	 pop {r7,pc}
 1872              	 .cfi_endproc
 1873              	.LFE226:
 1875              	 .section .text.PWM_SVM_CalCmpValueAsym7,"ax",%progbits
 1876              	 .align 2
 1877              	 .global PWM_SVM_CalCmpValueAsym7
 1878              	 .thumb
 1879              	 .thumb_func
 1881              	PWM_SVM_CalCmpValueAsym7:
 1882              	.LFB227:
 457:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 458:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 459:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment SVM.
 460:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 461:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym7(PWM_SVM_t* const HandlePtr)
 462:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1883              	 .loc 4 462 0
 1884              	 .cfi_startproc
 1885              	 
 1886              	 
 1887 0000 80B5     	 push {r7,lr}
 1888              	.LCFI132:
 1889              	 .cfi_def_cfa_offset 8
 1890              	 .cfi_offset 7,-8
 1891              	 .cfi_offset 14,-4
 1892 0002 82B0     	 sub sp,sp,#8
 1893              	.LCFI133:
 1894              	 .cfi_def_cfa_offset 16
 1895 0004 00AF     	 add r7,sp,#0
 1896              	.LCFI134:
 1897              	 .cfi_def_cfa_register 7
 1898 0006 7860     	 str r0,[r7,#4]
 463:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 464:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1899              	 .loc 4 464 0
 1900 0008 7B68     	 ldr r3,[r7,#4]
 1901 000a B3F8AE20 	 ldrh r2,[r3,#174]
 1902 000e 7B68     	 ldr r3,[r7,#4]
 1903 0010 B3F8C230 	 ldrh r3,[r3,#194]
 1904 0014 9A42     	 cmp r2,r3
 1905 0016 1CD2     	 bcs .L59
 465:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 466:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 1906              	 .loc 4 466 0
 1907 0018 7B68     	 ldr r3,[r7,#4]
 1908 001a B3F8AE30 	 ldrh r3,[r3,#174]
 1909 001e 5B00     	 lsls r3,r3,#1
 1910 0020 9AB2     	 uxth r2,r3
 1911 0022 7B68     	 ldr r3,[r7,#4]
 1912 0024 A3F8AE20 	 strh r2,[r3,#174]
 467:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 1913              	 .loc 4 467 0
 1914 0028 7B68     	 ldr r3,[r7,#4]
 1915 002a B3F8AE20 	 ldrh r2,[r3,#174]
 1916 002e 7B68     	 ldr r3,[r7,#4]
 1917 0030 B3F8C230 	 ldrh r3,[r3,#194]
 1918 0034 9A42     	 cmp r2,r3
 1919 0036 05D2     	 bcs .L60
 468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 469:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 1920              	 .loc 4 469 0
 1921 0038 7B68     	 ldr r3,[r7,#4]
 1922 003a B3F8C220 	 ldrh r2,[r3,#194]
 1923 003e 7B68     	 ldr r3,[r7,#4]
 1924 0040 A3F8AE20 	 strh r2,[r3,#174]
 1925              	.L60:
 470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 471:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 1926              	 .loc 4 471 0
 1927 0044 7B68     	 ldr r3,[r7,#4]
 1928 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 1929 004a 7B68     	 ldr r3,[r7,#4]
 1930 004c A3F8B220 	 strh r2,[r3,#178]
 1931 0050 03E0     	 b .L61
 1932              	.L59:
 472:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 473:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 474:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 1933              	 .loc 4 475 0
 1934 0052 7B68     	 ldr r3,[r7,#4]
 1935 0054 0022     	 movs r2,#0
 1936 0056 A3F8B220 	 strh r2,[r3,#178]
 1937              	.L61:
 476:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 477:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  7 -Segment tb value Calcuation */
 478:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1938              	 .loc 4 478 0
 1939 005a 7B68     	 ldr r3,[r7,#4]
 1940 005c B3F8B020 	 ldrh r2,[r3,#176]
 1941 0060 7B68     	 ldr r3,[r7,#4]
 1942 0062 B3F8C230 	 ldrh r3,[r3,#194]
 1943 0066 9A42     	 cmp r2,r3
 1944 0068 1CD2     	 bcs .L62
 479:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 480:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t)(2U * (HandlePtr->tb));
 1945              	 .loc 4 480 0
 1946 006a 7B68     	 ldr r3,[r7,#4]
 1947 006c B3F8B030 	 ldrh r3,[r3,#176]
 1948 0070 5B00     	 lsls r3,r3,#1
 1949 0072 9AB2     	 uxth r2,r3
 1950 0074 7B68     	 ldr r3,[r7,#4]
 1951 0076 A3F8B020 	 strh r2,[r3,#176]
 481:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->tb < HandlePtr->tmin)
 1952              	 .loc 4 481 0
 1953 007a 7B68     	 ldr r3,[r7,#4]
 1954 007c B3F8B020 	 ldrh r2,[r3,#176]
 1955 0080 7B68     	 ldr r3,[r7,#4]
 1956 0082 B3F8C230 	 ldrh r3,[r3,#194]
 1957 0086 9A42     	 cmp r2,r3
 1958 0088 05D2     	 bcs .L63
 482:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 483:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->tmin;
 1959              	 .loc 4 483 0
 1960 008a 7B68     	 ldr r3,[r7,#4]
 1961 008c B3F8C220 	 ldrh r2,[r3,#194]
 1962 0090 7B68     	 ldr r3,[r7,#4]
 1963 0092 A3F8B020 	 strh r2,[r3,#176]
 1964              	.L63:
 484:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = HandlePtr->tb;
 1965              	 .loc 4 485 0
 1966 0096 7B68     	 ldr r3,[r7,#4]
 1967 0098 B3F8B020 	 ldrh r2,[r3,#176]
 1968 009c 7B68     	 ldr r3,[r7,#4]
 1969 009e A3F8B420 	 strh r2,[r3,#180]
 1970 00a2 03E0     	 b .L64
 1971              	.L62:
 486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 1972              	 .loc 4 489 0
 1973 00a4 7B68     	 ldr r3,[r7,#4]
 1974 00a6 0022     	 movs r2,#0
 1975 00a8 A3F8B420 	 strh r2,[r3,#180]
 1976              	.L64:
 490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = ((uint16_t) HandlePtr->period + HandlePtr->ta + HandlePtr->tb) >> 1U;
 1977              	 .loc 4 491 0
 1978 00ac 7B68     	 ldr r3,[r7,#4]
 1979 00ae D3F89C30 	 ldr r3,[r3,#156]
 1980 00b2 9BB2     	 uxth r3,r3
 1981 00b4 1A46     	 mov r2,r3
 1982 00b6 7B68     	 ldr r3,[r7,#4]
 1983 00b8 B3F8AE30 	 ldrh r3,[r3,#174]
 1984 00bc 1344     	 add r3,r3,r2
 1985 00be 7A68     	 ldr r2,[r7,#4]
 1986 00c0 B2F8B020 	 ldrh r2,[r2,#176]
 1987 00c4 1344     	 add r3,r3,r2
 1988 00c6 5B10     	 asrs r3,r3,#1
 1989 00c8 9AB2     	 uxth r2,r3
 1990 00ca 7B68     	 ldr r3,[r7,#4]
 1991 00cc A3F8B620 	 strh r2,[r3,#182]
 492:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1992              	 .loc 4 492 0
 1993 00d0 7B68     	 ldr r3,[r7,#4]
 1994 00d2 D3F89C30 	 ldr r3,[r3,#156]
 1995 00d6 9AB2     	 uxth r2,r3
 1996 00d8 7B68     	 ldr r3,[r7,#4]
 1997 00da B3F8AE10 	 ldrh r1,[r3,#174]
 1998 00de 7B68     	 ldr r3,[r7,#4]
 1999 00e0 B3F8B030 	 ldrh r3,[r3,#176]
 2000 00e4 0B44     	 add r3,r3,r1
 2001 00e6 9BB2     	 uxth r3,r3
 2002 00e8 D31A     	 subs r3,r2,r3
 2003 00ea 9BB2     	 uxth r3,r3
 2004 00ec 5B08     	 lsrs r3,r3,#1
 2005 00ee 9AB2     	 uxth r2,r3
 2006 00f0 7B68     	 ldr r3,[r7,#4]
 2007 00f2 A3F8B820 	 strh r2,[r3,#184]
 493:../Dave/Generated/PWM_SVM/pwm_svm.c ****                       >> 1U;
 494:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 495:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta - HandlePtr->tb2;
 2008              	 .loc 4 495 0
 2009 00f6 7B68     	 ldr r3,[r7,#4]
 2010 00f8 B3F8B620 	 ldrh r2,[r3,#182]
 2011 00fc 7B68     	 ldr r3,[r7,#4]
 2012 00fe B3F8B430 	 ldrh r3,[r3,#180]
 2013 0102 D31A     	 subs r3,r2,r3
 2014 0104 9AB2     	 uxth r2,r3
 2015 0106 7B68     	 ldr r3,[r7,#4]
 2016 0108 A3F8BA20 	 strh r2,[r3,#186]
 496:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 2017              	 .loc 4 496 0
 2018 010c 7B68     	 ldr r3,[r7,#4]
 2019 010e B3F8B820 	 ldrh r2,[r3,#184]
 2020 0112 7B68     	 ldr r3,[r7,#4]
 2021 0114 B3F8B230 	 ldrh r3,[r3,#178]
 2022 0118 1344     	 add r3,r3,r2
 2023 011a 9AB2     	 uxth r2,r3
 2024 011c 7B68     	 ldr r3,[r7,#4]
 2025 011e A3F8BC20 	 strh r2,[r3,#188]
 497:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 499:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 500:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 501:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 503:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 504:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare registers*/
 505:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 2026              	 .loc 4 505 0
 2027 0122 7868     	 ldr r0,[r7,#4]
 2028 0124 FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 506:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 507:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 2029              	 .loc 4 507 0
 2030 0128 0837     	 adds r7,r7,#8
 2031              	.LCFI135:
 2032              	 .cfi_def_cfa_offset 8
 2033 012a BD46     	 mov sp,r7
 2034              	.LCFI136:
 2035              	 .cfi_def_cfa_register 13
 2036              	 
 2037 012c 80BD     	 pop {r7,pc}
 2038              	 .cfi_endproc
 2039              	.LFE227:
 2041 012e 00BF     	 .section .text.PWM_SVM_CalCmpValueAsym5,"ax",%progbits
 2042              	 .align 2
 2043              	 .global PWM_SVM_CalCmpValueAsym5
 2044              	 .thumb
 2045              	 .thumb_func
 2047              	PWM_SVM_CalCmpValueAsym5:
 2048              	.LFB228:
 508:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 509:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 510:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment SVM.
 511:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 512:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym5(PWM_SVM_t* const HandlePtr)
 513:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 2049              	 .loc 4 513 0
 2050              	 .cfi_startproc
 2051              	 
 2052              	 
 2053 0000 80B5     	 push {r7,lr}
 2054              	.LCFI137:
 2055              	 .cfi_def_cfa_offset 8
 2056              	 .cfi_offset 7,-8
 2057              	 .cfi_offset 14,-4
 2058 0002 82B0     	 sub sp,sp,#8
 2059              	.LCFI138:
 2060              	 .cfi_def_cfa_offset 16
 2061 0004 00AF     	 add r7,sp,#0
 2062              	.LCFI139:
 2063              	 .cfi_def_cfa_register 7
 2064 0006 7860     	 str r0,[r7,#4]
 514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 2065              	 .loc 4 515 0
 2066 0008 7B68     	 ldr r3,[r7,#4]
 2067 000a B3F8AE20 	 ldrh r2,[r3,#174]
 2068 000e 7B68     	 ldr r3,[r7,#4]
 2069 0010 B3F8C230 	 ldrh r3,[r3,#194]
 2070 0014 9A42     	 cmp r2,r3
 2071 0016 1CD2     	 bcs .L66
 516:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 517:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 2072              	 .loc 4 517 0
 2073 0018 7B68     	 ldr r3,[r7,#4]
 2074 001a B3F8AE30 	 ldrh r3,[r3,#174]
 2075 001e 5B00     	 lsls r3,r3,#1
 2076 0020 9AB2     	 uxth r2,r3
 2077 0022 7B68     	 ldr r3,[r7,#4]
 2078 0024 A3F8AE20 	 strh r2,[r3,#174]
 518:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 2079              	 .loc 4 518 0
 2080 0028 7B68     	 ldr r3,[r7,#4]
 2081 002a B3F8AE20 	 ldrh r2,[r3,#174]
 2082 002e 7B68     	 ldr r3,[r7,#4]
 2083 0030 B3F8C230 	 ldrh r3,[r3,#194]
 2084 0034 9A42     	 cmp r2,r3
 2085 0036 05D2     	 bcs .L67
 519:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 520:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 2086              	 .loc 4 520 0
 2087 0038 7B68     	 ldr r3,[r7,#4]
 2088 003a B3F8C220 	 ldrh r2,[r3,#194]
 2089 003e 7B68     	 ldr r3,[r7,#4]
 2090 0040 A3F8AE20 	 strh r2,[r3,#174]
 2091              	.L67:
 521:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 522:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 2092              	 .loc 4 522 0
 2093 0044 7B68     	 ldr r3,[r7,#4]
 2094 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 2095 004a 7B68     	 ldr r3,[r7,#4]
 2096 004c A3F8B220 	 strh r2,[r3,#178]
 2097 0050 03E0     	 b .L68
 2098              	.L66:
 523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 2099              	 .loc 4 526 0
 2100 0052 7B68     	 ldr r3,[r7,#4]
 2101 0054 0022     	 movs r2,#0
 2102 0056 A3F8B220 	 strh r2,[r3,#178]
 2103              	.L68:
 527:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  5 -Segment tb value Calcuation */
 529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 2104              	 .loc 4 529 0
 2105 005a 7B68     	 ldr r3,[r7,#4]
 2106 005c B3F8B020 	 ldrh r2,[r3,#176]
 2107 0060 7B68     	 ldr r3,[r7,#4]
 2108 0062 B3F8C230 	 ldrh r3,[r3,#194]
 2109 0066 9A42     	 cmp r2,r3
 2110 0068 05D2     	 bcs .L69
 530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 2111              	 .loc 4 531 0
 2112 006a 7B68     	 ldr r3,[r7,#4]
 2113 006c B3F8C220 	 ldrh r2,[r3,#194]
 2114 0070 7B68     	 ldr r3,[r7,#4]
 2115 0072 A3F8B020 	 strh r2,[r3,#176]
 2116              	.L69:
 532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 2117              	 .loc 4 533 0
 2118 0076 7B68     	 ldr r3,[r7,#4]
 2119 0078 D3F89C30 	 ldr r3,[r3,#156]
 2120 007c 9BB2     	 uxth r3,r3
 2121 007e 0133     	 adds r3,r3,#1
 2122 0080 9AB2     	 uxth r2,r3
 2123 0082 7B68     	 ldr r3,[r7,#4]
 2124 0084 A3F8B620 	 strh r2,[r3,#182]
 534:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 2125              	 .loc 4 534 0
 2126 0088 7B68     	 ldr r3,[r7,#4]
 2127 008a D3F89C30 	 ldr r3,[r3,#156]
 2128 008e 9AB2     	 uxth r2,r3
 2129 0090 7B68     	 ldr r3,[r7,#4]
 2130 0092 B3F8AE30 	 ldrh r3,[r3,#174]
 2131 0096 D31A     	 subs r3,r2,r3
 2132 0098 9AB2     	 uxth r2,r3
 2133 009a 7B68     	 ldr r3,[r7,#4]
 2134 009c B3F8B030 	 ldrh r3,[r3,#176]
 2135 00a0 D31A     	 subs r3,r2,r3
 2136 00a2 9AB2     	 uxth r2,r3
 2137 00a4 7B68     	 ldr r3,[r7,#4]
 2138 00a6 A3F8B820 	 strh r2,[r3,#184]
 535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 536:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta;
 2139              	 .loc 4 536 0
 2140 00aa 7B68     	 ldr r3,[r7,#4]
 2141 00ac B3F8B620 	 ldrh r2,[r3,#182]
 2142 00b0 7B68     	 ldr r3,[r7,#4]
 2143 00b2 A3F8BA20 	 strh r2,[r3,#186]
 537:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 2144              	 .loc 4 537 0
 2145 00b6 7B68     	 ldr r3,[r7,#4]
 2146 00b8 B3F8B820 	 ldrh r2,[r3,#184]
 2147 00bc 7B68     	 ldr r3,[r7,#4]
 2148 00be B3F8B230 	 ldrh r3,[r3,#178]
 2149 00c2 1344     	 add r3,r3,r2
 2150 00c4 9AB2     	 uxth r2,r3
 2151 00c6 7B68     	 ldr r3,[r7,#4]
 2152 00c8 A3F8BC20 	 strh r2,[r3,#188]
 538:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 541:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 542:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 543:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 544:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 545:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 546:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 2153              	 .loc 4 546 0
 2154 00cc 7868     	 ldr r0,[r7,#4]
 2155 00ce FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 547:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 548:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 2156              	 .loc 4 548 0
 2157 00d2 0837     	 adds r7,r7,#8
 2158              	.LCFI140:
 2159              	 .cfi_def_cfa_offset 8
 2160 00d4 BD46     	 mov sp,r7
 2161              	.LCFI141:
 2162              	 .cfi_def_cfa_register 13
 2163              	 
 2164 00d6 80BD     	 pop {r7,pc}
 2165              	 .cfi_endproc
 2166              	.LFE228:
 2168              	 .section .text.PWM_SVM_Calc3av5segmentCompVal,"ax",%progbits
 2169              	 .align 2
 2170              	 .global PWM_SVM_Calc3av5segmentCompVal
 2171              	 .thumb
 2172              	 .thumb_func
 2174              	PWM_SVM_Calc3av5segmentCompVal:
 2175              	.LFB229:
 549:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 550:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment of Pseudo zero ve
 551:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 552:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc3av5segmentCompVal(PWM_SVM_t* const HandlePtr)
 553:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 2176              	 .loc 4 553 0
 2177              	 .cfi_startproc
 2178              	 
 2179              	 
 2180 0000 80B5     	 push {r7,lr}
 2181              	.LCFI142:
 2182              	 .cfi_def_cfa_offset 8
 2183              	 .cfi_offset 7,-8
 2184              	 .cfi_offset 14,-4
 2185 0002 84B0     	 sub sp,sp,#16
 2186              	.LCFI143:
 2187              	 .cfi_def_cfa_offset 24
 2188 0004 00AF     	 add r7,sp,#0
 2189              	.LCFI144:
 2190              	 .cfi_def_cfa_register 7
 2191 0006 7860     	 str r0,[r7,#4]
 554:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr1s;
 555:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr2s;
 556:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate compare value intermediate parameters based on subsector*/
 557:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->subsector == (uint32_t) 0)
 2192              	 .loc 4 557 0
 2193 0008 7B68     	 ldr r3,[r7,#4]
 2194 000a B3F8C030 	 ldrh r3,[r3,#192]
 2195 000e 002B     	 cmp r3,#0
 2196 0010 3BD1     	 bne .L71
 558:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 559:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 2197              	 .loc 4 559 0
 2198 0012 7B68     	 ldr r3,[r7,#4]
 2199 0014 B3F8B020 	 ldrh r2,[r3,#176]
 2200 0018 7B68     	 ldr r3,[r7,#4]
 2201 001a B3F8C230 	 ldrh r3,[r3,#194]
 2202 001e 1344     	 add r3,r3,r2
 2203 0020 9AB2     	 uxth r2,r3
 2204 0022 7B68     	 ldr r3,[r7,#4]
 2205 0024 A3F8B020 	 strh r2,[r3,#176]
 560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 2206              	 .loc 4 560 0
 2207 0028 7B68     	 ldr r3,[r7,#4]
 2208 002a D3F89C30 	 ldr r3,[r3,#156]
 2209 002e 9AB2     	 uxth r2,r3
 2210 0030 7B68     	 ldr r3,[r7,#4]
 2211 0032 B3F8AE10 	 ldrh r1,[r3,#174]
 2212 0036 7B68     	 ldr r3,[r7,#4]
 2213 0038 B3F8B030 	 ldrh r3,[r3,#176]
 2214 003c 0B44     	 add r3,r3,r1
 2215 003e 99B2     	 uxth r1,r3
 2216 0040 7B68     	 ldr r3,[r7,#4]
 2217 0042 B3F8C230 	 ldrh r3,[r3,#194]
 2218 0046 0B44     	 add r3,r3,r1
 2219 0048 9BB2     	 uxth r3,r3
 2220 004a D31A     	 subs r3,r2,r3
 2221 004c 9AB2     	 uxth r2,r3
 2222 004e 7B68     	 ldr r3,[r7,#4]
 2223 0050 A3F8BC20 	 strh r2,[r3,#188]
 561:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2224              	 .loc 4 561 0
 2225 0054 7B68     	 ldr r3,[r7,#4]
 2226 0056 B3F8BC30 	 ldrh r3,[r3,#188]
 2227 005a 5B08     	 lsrs r3,r3,#1
 2228 005c 9AB2     	 uxth r2,r3
 2229 005e 7B68     	 ldr r3,[r7,#4]
 2230 0060 A3F8B820 	 strh r2,[r3,#184]
 562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2231              	 .loc 4 562 0
 2232 0064 7B68     	 ldr r3,[r7,#4]
 2233 0066 D3F89C30 	 ldr r3,[r3,#156]
 2234 006a 9AB2     	 uxth r2,r3
 2235 006c 7B68     	 ldr r3,[r7,#4]
 2236 006e A3F8B620 	 strh r2,[r3,#182]
 563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb + HandlePtr->tmin;
 2237              	 .loc 4 563 0
 2238 0072 7B68     	 ldr r3,[r7,#4]
 2239 0074 B3F8B820 	 ldrh r2,[r3,#184]
 2240 0078 7B68     	 ldr r3,[r7,#4]
 2241 007a B3F8C230 	 ldrh r3,[r3,#194]
 2242 007e 1344     	 add r3,r3,r2
 2243 0080 9AB2     	 uxth r2,r3
 2244 0082 7B68     	 ldr r3,[r7,#4]
 2245 0084 A3F8BE20 	 strh r2,[r3,#190]
 2246 0088 35E0     	 b .L72
 2247              	.L71:
 564:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 565:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 566:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 567:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2248              	 .loc 4 567 0
 2249 008a 7B68     	 ldr r3,[r7,#4]
 2250 008c B3F8AE20 	 ldrh r2,[r3,#174]
 2251 0090 7B68     	 ldr r3,[r7,#4]
 2252 0092 B3F8C230 	 ldrh r3,[r3,#194]
 2253 0096 1344     	 add r3,r3,r2
 2254 0098 9AB2     	 uxth r2,r3
 2255 009a 7B68     	 ldr r3,[r7,#4]
 2256 009c A3F8AE20 	 strh r2,[r3,#174]
 568:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 2257              	 .loc 4 568 0
 2258 00a0 7B68     	 ldr r3,[r7,#4]
 2259 00a2 D3F89C30 	 ldr r3,[r3,#156]
 2260 00a6 9AB2     	 uxth r2,r3
 2261 00a8 7B68     	 ldr r3,[r7,#4]
 2262 00aa B3F8AE10 	 ldrh r1,[r3,#174]
 2263 00ae 7B68     	 ldr r3,[r7,#4]
 2264 00b0 B3F8B030 	 ldrh r3,[r3,#176]
 2265 00b4 0B44     	 add r3,r3,r1
 2266 00b6 99B2     	 uxth r1,r3
 2267 00b8 7B68     	 ldr r3,[r7,#4]
 2268 00ba B3F8C230 	 ldrh r3,[r3,#194]
 2269 00be 0B44     	 add r3,r3,r1
 2270 00c0 9BB2     	 uxth r3,r3
 2271 00c2 D31A     	 subs r3,r2,r3
 2272 00c4 9AB2     	 uxth r2,r3
 2273 00c6 7B68     	 ldr r3,[r7,#4]
 2274 00c8 A3F8BC20 	 strh r2,[r3,#188]
 569:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2275              	 .loc 4 569 0
 2276 00cc 7B68     	 ldr r3,[r7,#4]
 2277 00ce B3F8BC30 	 ldrh r3,[r3,#188]
 2278 00d2 5B08     	 lsrs r3,r3,#1
 2279 00d4 9AB2     	 uxth r2,r3
 2280 00d6 7B68     	 ldr r3,[r7,#4]
 2281 00d8 A3F8B820 	 strh r2,[r3,#184]
 570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2282              	 .loc 4 570 0
 2283 00dc 7B68     	 ldr r3,[r7,#4]
 2284 00de D3F89C30 	 ldr r3,[r3,#156]
 2285 00e2 9AB2     	 uxth r2,r3
 2286 00e4 7B68     	 ldr r3,[r7,#4]
 2287 00e6 A3F8B620 	 strh r2,[r3,#182]
 571:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb;
 2288              	 .loc 4 571 0
 2289 00ea 7B68     	 ldr r3,[r7,#4]
 2290 00ec B3F8B820 	 ldrh r2,[r3,#184]
 2291 00f0 7B68     	 ldr r3,[r7,#4]
 2292 00f2 A3F8BE20 	 strh r2,[r3,#190]
 2293              	.L72:
 572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 573:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 574:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2294              	 .loc 4 574 0
 2295 00f6 7B68     	 ldr r3,[r7,#4]
 2296 00f8 1B68     	 ldr r3,[r3]
 2297 00fa 1B7C     	 ldrb r3,[r3,#16]
 2298 00fc 012B     	 cmp r3,#1
 2299 00fe 2AD1     	 bne .L73
 575:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 576:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta + (HandlePtr->tb >> (uint16_t) 1))
 2300              	 .loc 4 576 0
 2301 0100 7B68     	 ldr r3,[r7,#4]
 2302 0102 B3F8B620 	 ldrh r2,[r3,#182]
 2303 0106 7B68     	 ldr r3,[r7,#4]
 2304 0108 B3F8AE10 	 ldrh r1,[r3,#174]
 2305 010c 7B68     	 ldr r3,[r7,#4]
 2306 010e B3F8B030 	 ldrh r3,[r3,#176]
 2307 0112 5B08     	 lsrs r3,r3,#1
 2308 0114 9BB2     	 uxth r3,r3
 2309 0116 0B44     	 add r3,r3,r1
 2310 0118 9BB2     	 uxth r3,r3
 2311 011a D31A     	 subs r3,r2,r3
 2312 011c FB81     	 strh r3,[r7,#14]
 577:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta >> (uint16_t) 1);
 2313              	 .loc 4 577 0
 2314 011e 7B68     	 ldr r3,[r7,#4]
 2315 0120 B3F8B620 	 ldrh r2,[r3,#182]
 2316 0124 7B68     	 ldr r3,[r7,#4]
 2317 0126 B3F8AE30 	 ldrh r3,[r3,#174]
 2318 012a 5B08     	 lsrs r3,r3,#1
 2319 012c 9BB2     	 uxth r3,r3
 2320 012e D31A     	 subs r3,r2,r3
 2321 0130 BB81     	 strh r3,[r7,#12]
 578:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2322              	 .loc 4 578 0
 2323 0132 7B68     	 ldr r3,[r7,#4]
 2324 0134 5B69     	 ldr r3,[r3,#20]
 2325 0136 1A68     	 ldr r2,[r3]
 2326 0138 FB89     	 ldrh r3,[r7,#14]
 2327 013a 1046     	 mov r0,r2
 2328 013c 0021     	 movs r1,#0
 2329 013e 1A46     	 mov r2,r3
 2330 0140 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 579:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 580:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2331              	 .loc 4 580 0
 2332 0144 7B68     	 ldr r3,[r7,#4]
 2333 0146 5B69     	 ldr r3,[r3,#20]
 2334 0148 1A68     	 ldr r2,[r3]
 2335 014a BB89     	 ldrh r3,[r7,#12]
 2336 014c 1046     	 mov r0,r2
 2337 014e 0121     	 movs r1,#1
 2338 0150 1A46     	 mov r2,r3
 2339 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 2340              	.L73:
 581:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 582:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 583:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 584:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 2341              	 .loc 4 584 0
 2342 0156 7B68     	 ldr r3,[r7,#4]
 2343 0158 D3F8A430 	 ldr r3,[r3,#164]
 2344 015c 03F00703 	 and r3,r3,#7
 2345 0160 042B     	 cmp r3,#4
 2346 0162 00F2A781 	 bhi .L74
 2347 0166 01A2     	 adr r2,.L76
 2348 0168 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2349              	 .p2align 2
 2350              	.L76:
 2351 016c 81010000 	 .word .L75+1
 2352 0170 25020000 	 .word .L77+1
 2353 0174 C9020000 	 .word .L78+1
 2354 0178 6D030000 	 .word .L79+1
 2355 017c 11040000 	 .word .L80+1
 2356              	 .p2align 1
 2357              	.L75:
 585:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 586:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2358              	 .loc 4 587 0
 2359 0180 7B68     	 ldr r3,[r7,#4]
 2360 0182 9B68     	 ldr r3,[r3,#8]
 2361 0184 1968     	 ldr r1,[r3]
 588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 589:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2362              	 .loc 4 589 0
 2363 0186 7B68     	 ldr r3,[r7,#4]
 2364 0188 B3F8B820 	 ldrh r2,[r3,#184]
 2365 018c 7B68     	 ldr r3,[r7,#4]
 2366 018e B3F8C230 	 ldrh r3,[r3,#194]
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2367              	 .loc 4 587 0
 2368 0192 1344     	 add r3,r3,r2
 2369 0194 9BB2     	 uxth r3,r3
 2370 0196 0846     	 mov r0,r1
 2371 0198 0021     	 movs r1,#0
 2372 019a 1A46     	 mov r2,r3
 2373 019c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 590:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2374              	 .loc 4 590 0
 2375 01a0 7B68     	 ldr r3,[r7,#4]
 2376 01a2 9B68     	 ldr r3,[r3,#8]
 2377 01a4 1A68     	 ldr r2,[r3]
 2378 01a6 7B68     	 ldr r3,[r7,#4]
 2379 01a8 B3F8B630 	 ldrh r3,[r3,#182]
 2380 01ac 1046     	 mov r0,r2
 2381 01ae 0121     	 movs r1,#1
 2382 01b0 1A46     	 mov r2,r3
 2383 01b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 591:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 592:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 593:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2384              	 .loc 4 593 0
 2385 01b6 7B68     	 ldr r3,[r7,#4]
 2386 01b8 DB68     	 ldr r3,[r3,#12]
 2387 01ba 1A68     	 ldr r2,[r3]
 2388 01bc 7B68     	 ldr r3,[r7,#4]
 2389 01be B3F8BE30 	 ldrh r3,[r3,#190]
 2390 01c2 1046     	 mov r0,r2
 2391 01c4 0021     	 movs r1,#0
 2392 01c6 1A46     	 mov r2,r3
 2393 01c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2394              	 .loc 4 595 0
 2395 01cc 7B68     	 ldr r3,[r7,#4]
 2396 01ce DB68     	 ldr r3,[r3,#12]
 2397 01d0 1968     	 ldr r1,[r3]
 596:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 597:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2398              	 .loc 4 597 0
 2399 01d2 7B68     	 ldr r3,[r7,#4]
 2400 01d4 B3F8B620 	 ldrh r2,[r3,#182]
 2401 01d8 7B68     	 ldr r3,[r7,#4]
 2402 01da B3F8AE30 	 ldrh r3,[r3,#174]
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2403              	 .loc 4 595 0
 2404 01de D31A     	 subs r3,r2,r3
 2405 01e0 9BB2     	 uxth r3,r3
 2406 01e2 0846     	 mov r0,r1
 2407 01e4 0121     	 movs r1,#1
 2408 01e6 1A46     	 mov r2,r3
 2409 01e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 598:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 599:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2410              	 .loc 4 599 0
 2411 01ec 7B68     	 ldr r3,[r7,#4]
 2412 01ee 1B69     	 ldr r3,[r3,#16]
 2413 01f0 1A68     	 ldr r2,[r3]
 2414 01f2 7B68     	 ldr r3,[r7,#4]
 2415 01f4 B3F8B830 	 ldrh r3,[r3,#184]
 2416 01f8 1046     	 mov r0,r2
 2417 01fa 0021     	 movs r1,#0
 2418 01fc 1A46     	 mov r2,r3
 2419 01fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 600:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2420              	 .loc 4 601 0
 2421 0202 7B68     	 ldr r3,[r7,#4]
 2422 0204 1B69     	 ldr r3,[r3,#16]
 2423 0206 1968     	 ldr r1,[r3]
 602:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 603:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2424              	 .loc 4 603 0
 2425 0208 7B68     	 ldr r3,[r7,#4]
 2426 020a B3F8BC20 	 ldrh r2,[r3,#188]
 2427 020e 7B68     	 ldr r3,[r7,#4]
 2428 0210 B3F8C230 	 ldrh r3,[r3,#194]
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2429              	 .loc 4 601 0
 2430 0214 1344     	 add r3,r3,r2
 2431 0216 9BB2     	 uxth r3,r3
 2432 0218 0846     	 mov r0,r1
 2433 021a 0121     	 movs r1,#1
 2434 021c 1A46     	 mov r2,r3
 2435 021e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 604:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2436              	 .loc 4 604 0
 2437 0222 99E1     	 b .L70
 2438              	.L77:
 605:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2439              	 .loc 4 606 0
 2440 0224 7B68     	 ldr r3,[r7,#4]
 2441 0226 9B68     	 ldr r3,[r3,#8]
 2442 0228 1A68     	 ldr r2,[r3]
 2443 022a 7B68     	 ldr r3,[r7,#4]
 2444 022c B3F8BE30 	 ldrh r3,[r3,#190]
 2445 0230 1046     	 mov r0,r2
 2446 0232 0021     	 movs r1,#0
 2447 0234 1A46     	 mov r2,r3
 2448 0236 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 607:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2449              	 .loc 4 608 0
 2450 023a 7B68     	 ldr r3,[r7,#4]
 2451 023c 9B68     	 ldr r3,[r3,#8]
 2452 023e 1968     	 ldr r1,[r3]
 609:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 610:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2453              	 .loc 4 610 0
 2454 0240 7B68     	 ldr r3,[r7,#4]
 2455 0242 B3F8B620 	 ldrh r2,[r3,#182]
 2456 0246 7B68     	 ldr r3,[r7,#4]
 2457 0248 B3F8AE30 	 ldrh r3,[r3,#174]
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2458              	 .loc 4 608 0
 2459 024c D31A     	 subs r3,r2,r3
 2460 024e 9BB2     	 uxth r3,r3
 2461 0250 0846     	 mov r0,r1
 2462 0252 0121     	 movs r1,#1
 2463 0254 1A46     	 mov r2,r3
 2464 0256 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2465              	 .loc 4 612 0
 2466 025a 7B68     	 ldr r3,[r7,#4]
 2467 025c DB68     	 ldr r3,[r3,#12]
 2468 025e 1968     	 ldr r1,[r3]
 613:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 614:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2469              	 .loc 4 614 0
 2470 0260 7B68     	 ldr r3,[r7,#4]
 2471 0262 B3F8B820 	 ldrh r2,[r3,#184]
 2472 0266 7B68     	 ldr r3,[r7,#4]
 2473 0268 B3F8C230 	 ldrh r3,[r3,#194]
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2474              	 .loc 4 612 0
 2475 026c 1344     	 add r3,r3,r2
 2476 026e 9BB2     	 uxth r3,r3
 2477 0270 0846     	 mov r0,r1
 2478 0272 0021     	 movs r1,#0
 2479 0274 1A46     	 mov r2,r3
 2480 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2481              	 .loc 4 615 0
 2482 027a 7B68     	 ldr r3,[r7,#4]
 2483 027c DB68     	 ldr r3,[r3,#12]
 2484 027e 1A68     	 ldr r2,[r3]
 2485 0280 7B68     	 ldr r3,[r7,#4]
 2486 0282 B3F8B630 	 ldrh r3,[r3,#182]
 2487 0286 1046     	 mov r0,r2
 2488 0288 0121     	 movs r1,#1
 2489 028a 1A46     	 mov r2,r3
 2490 028c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 616:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 617:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 618:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2491              	 .loc 4 618 0
 2492 0290 7B68     	 ldr r3,[r7,#4]
 2493 0292 1B69     	 ldr r3,[r3,#16]
 2494 0294 1A68     	 ldr r2,[r3]
 2495 0296 7B68     	 ldr r3,[r7,#4]
 2496 0298 B3F8B830 	 ldrh r3,[r3,#184]
 2497 029c 1046     	 mov r0,r2
 2498 029e 0021     	 movs r1,#0
 2499 02a0 1A46     	 mov r2,r3
 2500 02a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 619:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2501              	 .loc 4 620 0
 2502 02a6 7B68     	 ldr r3,[r7,#4]
 2503 02a8 1B69     	 ldr r3,[r3,#16]
 2504 02aa 1968     	 ldr r1,[r3]
 621:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 622:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2505              	 .loc 4 622 0
 2506 02ac 7B68     	 ldr r3,[r7,#4]
 2507 02ae B3F8BC20 	 ldrh r2,[r3,#188]
 2508 02b2 7B68     	 ldr r3,[r7,#4]
 2509 02b4 B3F8C230 	 ldrh r3,[r3,#194]
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2510              	 .loc 4 620 0
 2511 02b8 1344     	 add r3,r3,r2
 2512 02ba 9BB2     	 uxth r3,r3
 2513 02bc 0846     	 mov r0,r1
 2514 02be 0121     	 movs r1,#1
 2515 02c0 1A46     	 mov r2,r3
 2516 02c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2517              	 .loc 4 623 0
 2518 02c6 47E1     	 b .L70
 2519              	.L78:
 624:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 625:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2520              	 .loc 4 625 0
 2521 02c8 7B68     	 ldr r3,[r7,#4]
 2522 02ca 9B68     	 ldr r3,[r3,#8]
 2523 02cc 1A68     	 ldr r2,[r3]
 2524 02ce 7B68     	 ldr r3,[r7,#4]
 2525 02d0 B3F8B830 	 ldrh r3,[r3,#184]
 2526 02d4 1046     	 mov r0,r2
 2527 02d6 0021     	 movs r1,#0
 2528 02d8 1A46     	 mov r2,r3
 2529 02da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 626:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2530              	 .loc 4 627 0
 2531 02de 7B68     	 ldr r3,[r7,#4]
 2532 02e0 9B68     	 ldr r3,[r3,#8]
 2533 02e2 1968     	 ldr r1,[r3]
 628:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 629:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2534              	 .loc 4 629 0
 2535 02e4 7B68     	 ldr r3,[r7,#4]
 2536 02e6 B3F8BC20 	 ldrh r2,[r3,#188]
 2537 02ea 7B68     	 ldr r3,[r7,#4]
 2538 02ec B3F8C230 	 ldrh r3,[r3,#194]
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2539              	 .loc 4 627 0
 2540 02f0 1344     	 add r3,r3,r2
 2541 02f2 9BB2     	 uxth r3,r3
 2542 02f4 0846     	 mov r0,r1
 2543 02f6 0121     	 movs r1,#1
 2544 02f8 1A46     	 mov r2,r3
 2545 02fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 630:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2546              	 .loc 4 631 0
 2547 02fe 7B68     	 ldr r3,[r7,#4]
 2548 0300 DB68     	 ldr r3,[r3,#12]
 2549 0302 1968     	 ldr r1,[r3]
 632:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 633:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2550              	 .loc 4 633 0
 2551 0304 7B68     	 ldr r3,[r7,#4]
 2552 0306 B3F8B820 	 ldrh r2,[r3,#184]
 2553 030a 7B68     	 ldr r3,[r7,#4]
 2554 030c B3F8C230 	 ldrh r3,[r3,#194]
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2555              	 .loc 4 631 0
 2556 0310 1344     	 add r3,r3,r2
 2557 0312 9BB2     	 uxth r3,r3
 2558 0314 0846     	 mov r0,r1
 2559 0316 0021     	 movs r1,#0
 2560 0318 1A46     	 mov r2,r3
 2561 031a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 634:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2562              	 .loc 4 634 0
 2563 031e 7B68     	 ldr r3,[r7,#4]
 2564 0320 DB68     	 ldr r3,[r3,#12]
 2565 0322 1A68     	 ldr r2,[r3]
 2566 0324 7B68     	 ldr r3,[r7,#4]
 2567 0326 B3F8B630 	 ldrh r3,[r3,#182]
 2568 032a 1046     	 mov r0,r2
 2569 032c 0121     	 movs r1,#1
 2570 032e 1A46     	 mov r2,r3
 2571 0330 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 635:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 636:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2572              	 .loc 4 637 0
 2573 0334 7B68     	 ldr r3,[r7,#4]
 2574 0336 1B69     	 ldr r3,[r3,#16]
 2575 0338 1A68     	 ldr r2,[r3]
 2576 033a 7B68     	 ldr r3,[r7,#4]
 2577 033c B3F8BE30 	 ldrh r3,[r3,#190]
 2578 0340 1046     	 mov r0,r2
 2579 0342 0021     	 movs r1,#0
 2580 0344 1A46     	 mov r2,r3
 2581 0346 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 638:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2582              	 .loc 4 639 0
 2583 034a 7B68     	 ldr r3,[r7,#4]
 2584 034c 1B69     	 ldr r3,[r3,#16]
 2585 034e 1968     	 ldr r1,[r3]
 640:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 641:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2586              	 .loc 4 641 0
 2587 0350 7B68     	 ldr r3,[r7,#4]
 2588 0352 B3F8B620 	 ldrh r2,[r3,#182]
 2589 0356 7B68     	 ldr r3,[r7,#4]
 2590 0358 B3F8AE30 	 ldrh r3,[r3,#174]
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2591              	 .loc 4 639 0
 2592 035c D31A     	 subs r3,r2,r3
 2593 035e 9BB2     	 uxth r3,r3
 2594 0360 0846     	 mov r0,r1
 2595 0362 0121     	 movs r1,#1
 2596 0364 1A46     	 mov r2,r3
 2597 0366 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 642:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2598              	 .loc 4 642 0
 2599 036a F5E0     	 b .L70
 2600              	.L79:
 643:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2601              	 .loc 4 644 0
 2602 036c 7B68     	 ldr r3,[r7,#4]
 2603 036e 9B68     	 ldr r3,[r3,#8]
 2604 0370 1A68     	 ldr r2,[r3]
 2605 0372 7B68     	 ldr r3,[r7,#4]
 2606 0374 B3F8B830 	 ldrh r3,[r3,#184]
 2607 0378 1046     	 mov r0,r2
 2608 037a 0021     	 movs r1,#0
 2609 037c 1A46     	 mov r2,r3
 2610 037e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 645:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2611              	 .loc 4 646 0
 2612 0382 7B68     	 ldr r3,[r7,#4]
 2613 0384 9B68     	 ldr r3,[r3,#8]
 2614 0386 1968     	 ldr r1,[r3]
 647:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 648:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2615              	 .loc 4 648 0
 2616 0388 7B68     	 ldr r3,[r7,#4]
 2617 038a B3F8BC20 	 ldrh r2,[r3,#188]
 2618 038e 7B68     	 ldr r3,[r7,#4]
 2619 0390 B3F8C230 	 ldrh r3,[r3,#194]
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2620              	 .loc 4 646 0
 2621 0394 1344     	 add r3,r3,r2
 2622 0396 9BB2     	 uxth r3,r3
 2623 0398 0846     	 mov r0,r1
 2624 039a 0121     	 movs r1,#1
 2625 039c 1A46     	 mov r2,r3
 2626 039e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 649:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 650:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2627              	 .loc 4 650 0
 2628 03a2 7B68     	 ldr r3,[r7,#4]
 2629 03a4 DB68     	 ldr r3,[r3,#12]
 2630 03a6 1A68     	 ldr r2,[r3]
 2631 03a8 7B68     	 ldr r3,[r7,#4]
 2632 03aa B3F8BE30 	 ldrh r3,[r3,#190]
 2633 03ae 1046     	 mov r0,r2
 2634 03b0 0021     	 movs r1,#0
 2635 03b2 1A46     	 mov r2,r3
 2636 03b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 651:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2637              	 .loc 4 652 0
 2638 03b8 7B68     	 ldr r3,[r7,#4]
 2639 03ba DB68     	 ldr r3,[r3,#12]
 2640 03bc 1968     	 ldr r1,[r3]
 653:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 654:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2641              	 .loc 4 654 0
 2642 03be 7B68     	 ldr r3,[r7,#4]
 2643 03c0 B3F8B620 	 ldrh r2,[r3,#182]
 2644 03c4 7B68     	 ldr r3,[r7,#4]
 2645 03c6 B3F8AE30 	 ldrh r3,[r3,#174]
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2646              	 .loc 4 652 0
 2647 03ca D31A     	 subs r3,r2,r3
 2648 03cc 9BB2     	 uxth r3,r3
 2649 03ce 0846     	 mov r0,r1
 2650 03d0 0121     	 movs r1,#1
 2651 03d2 1A46     	 mov r2,r3
 2652 03d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 655:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2653              	 .loc 4 656 0
 2654 03d8 7B68     	 ldr r3,[r7,#4]
 2655 03da 1B69     	 ldr r3,[r3,#16]
 2656 03dc 1968     	 ldr r1,[r3]
 657:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 658:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2657              	 .loc 4 658 0
 2658 03de 7B68     	 ldr r3,[r7,#4]
 2659 03e0 B3F8B820 	 ldrh r2,[r3,#184]
 2660 03e4 7B68     	 ldr r3,[r7,#4]
 2661 03e6 B3F8C230 	 ldrh r3,[r3,#194]
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2662              	 .loc 4 656 0
 2663 03ea 1344     	 add r3,r3,r2
 2664 03ec 9BB2     	 uxth r3,r3
 2665 03ee 0846     	 mov r0,r1
 2666 03f0 0021     	 movs r1,#0
 2667 03f2 1A46     	 mov r2,r3
 2668 03f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 659:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2669              	 .loc 4 659 0
 2670 03f8 7B68     	 ldr r3,[r7,#4]
 2671 03fa 1B69     	 ldr r3,[r3,#16]
 2672 03fc 1A68     	 ldr r2,[r3]
 2673 03fe 7B68     	 ldr r3,[r7,#4]
 2674 0400 B3F8B630 	 ldrh r3,[r3,#182]
 2675 0404 1046     	 mov r0,r2
 2676 0406 0121     	 movs r1,#1
 2677 0408 1A46     	 mov r2,r3
 2678 040a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 660:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 661:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2679              	 .loc 4 661 0
 2680 040e A3E0     	 b .L70
 2681              	.L80:
 662:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 663:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2682              	 .loc 4 663 0
 2683 0410 7B68     	 ldr r3,[r7,#4]
 2684 0412 9B68     	 ldr r3,[r3,#8]
 2685 0414 1A68     	 ldr r2,[r3]
 2686 0416 7B68     	 ldr r3,[r7,#4]
 2687 0418 B3F8BE30 	 ldrh r3,[r3,#190]
 2688 041c 1046     	 mov r0,r2
 2689 041e 0021     	 movs r1,#0
 2690 0420 1A46     	 mov r2,r3
 2691 0422 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 664:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2692              	 .loc 4 665 0
 2693 0426 7B68     	 ldr r3,[r7,#4]
 2694 0428 9B68     	 ldr r3,[r3,#8]
 2695 042a 1968     	 ldr r1,[r3]
 666:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 667:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2696              	 .loc 4 667 0
 2697 042c 7B68     	 ldr r3,[r7,#4]
 2698 042e B3F8B620 	 ldrh r2,[r3,#182]
 2699 0432 7B68     	 ldr r3,[r7,#4]
 2700 0434 B3F8AE30 	 ldrh r3,[r3,#174]
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2701              	 .loc 4 665 0
 2702 0438 D31A     	 subs r3,r2,r3
 2703 043a 9BB2     	 uxth r3,r3
 2704 043c 0846     	 mov r0,r1
 2705 043e 0121     	 movs r1,#1
 2706 0440 1A46     	 mov r2,r3
 2707 0442 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 668:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2708              	 .loc 4 669 0
 2709 0446 7B68     	 ldr r3,[r7,#4]
 2710 0448 DB68     	 ldr r3,[r3,#12]
 2711 044a 1A68     	 ldr r2,[r3]
 2712 044c 7B68     	 ldr r3,[r7,#4]
 2713 044e B3F8B830 	 ldrh r3,[r3,#184]
 2714 0452 1046     	 mov r0,r2
 2715 0454 0021     	 movs r1,#0
 2716 0456 1A46     	 mov r2,r3
 2717 0458 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 670:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2718              	 .loc 4 671 0
 2719 045c 7B68     	 ldr r3,[r7,#4]
 2720 045e DB68     	 ldr r3,[r3,#12]
 2721 0460 1968     	 ldr r1,[r3]
 672:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 673:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2722              	 .loc 4 673 0
 2723 0462 7B68     	 ldr r3,[r7,#4]
 2724 0464 B3F8BC20 	 ldrh r2,[r3,#188]
 2725 0468 7B68     	 ldr r3,[r7,#4]
 2726 046a B3F8C230 	 ldrh r3,[r3,#194]
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2727              	 .loc 4 671 0
 2728 046e 1344     	 add r3,r3,r2
 2729 0470 9BB2     	 uxth r3,r3
 2730 0472 0846     	 mov r0,r1
 2731 0474 0121     	 movs r1,#1
 2732 0476 1A46     	 mov r2,r3
 2733 0478 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 674:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2734              	 .loc 4 675 0
 2735 047c 7B68     	 ldr r3,[r7,#4]
 2736 047e 1B69     	 ldr r3,[r3,#16]
 2737 0480 1968     	 ldr r1,[r3]
 676:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 677:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2738              	 .loc 4 677 0
 2739 0482 7B68     	 ldr r3,[r7,#4]
 2740 0484 B3F8B820 	 ldrh r2,[r3,#184]
 2741 0488 7B68     	 ldr r3,[r7,#4]
 2742 048a B3F8C230 	 ldrh r3,[r3,#194]
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2743              	 .loc 4 675 0
 2744 048e 1344     	 add r3,r3,r2
 2745 0490 9BB2     	 uxth r3,r3
 2746 0492 0846     	 mov r0,r1
 2747 0494 0021     	 movs r1,#0
 2748 0496 1A46     	 mov r2,r3
 2749 0498 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 678:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2750              	 .loc 4 678 0
 2751 049c 7B68     	 ldr r3,[r7,#4]
 2752 049e 1B69     	 ldr r3,[r3,#16]
 2753 04a0 1A68     	 ldr r2,[r3]
 2754 04a2 7B68     	 ldr r3,[r7,#4]
 2755 04a4 B3F8B630 	 ldrh r3,[r3,#182]
 2756 04a8 1046     	 mov r0,r2
 2757 04aa 0121     	 movs r1,#1
 2758 04ac 1A46     	 mov r2,r3
 2759 04ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 679:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 680:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2760              	 .loc 4 680 0
 2761 04b2 51E0     	 b .L70
 2762              	.L74:
 681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2763              	 .loc 4 682 0
 2764 04b4 7B68     	 ldr r3,[r7,#4]
 2765 04b6 9B68     	 ldr r3,[r3,#8]
 2766 04b8 1968     	 ldr r1,[r3]
 683:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 684:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2767              	 .loc 4 684 0
 2768 04ba 7B68     	 ldr r3,[r7,#4]
 2769 04bc B3F8B820 	 ldrh r2,[r3,#184]
 2770 04c0 7B68     	 ldr r3,[r7,#4]
 2771 04c2 B3F8C230 	 ldrh r3,[r3,#194]
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2772              	 .loc 4 682 0
 2773 04c6 1344     	 add r3,r3,r2
 2774 04c8 9BB2     	 uxth r3,r3
 2775 04ca 0846     	 mov r0,r1
 2776 04cc 0021     	 movs r1,#0
 2777 04ce 1A46     	 mov r2,r3
 2778 04d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 685:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2779              	 .loc 4 685 0
 2780 04d4 7B68     	 ldr r3,[r7,#4]
 2781 04d6 9B68     	 ldr r3,[r3,#8]
 2782 04d8 1A68     	 ldr r2,[r3]
 2783 04da 7B68     	 ldr r3,[r7,#4]
 2784 04dc B3F8B630 	 ldrh r3,[r3,#182]
 2785 04e0 1046     	 mov r0,r2
 2786 04e2 0121     	 movs r1,#1
 2787 04e4 1A46     	 mov r2,r3
 2788 04e6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 686:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 687:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 688:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2789              	 .loc 4 688 0
 2790 04ea 7B68     	 ldr r3,[r7,#4]
 2791 04ec DB68     	 ldr r3,[r3,#12]
 2792 04ee 1A68     	 ldr r2,[r3]
 2793 04f0 7B68     	 ldr r3,[r7,#4]
 2794 04f2 B3F8B830 	 ldrh r3,[r3,#184]
 2795 04f6 1046     	 mov r0,r2
 2796 04f8 0021     	 movs r1,#0
 2797 04fa 1A46     	 mov r2,r3
 2798 04fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 689:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2799              	 .loc 4 690 0
 2800 0500 7B68     	 ldr r3,[r7,#4]
 2801 0502 DB68     	 ldr r3,[r3,#12]
 2802 0504 1968     	 ldr r1,[r3]
 691:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 692:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2803              	 .loc 4 692 0
 2804 0506 7B68     	 ldr r3,[r7,#4]
 2805 0508 B3F8BC20 	 ldrh r2,[r3,#188]
 2806 050c 7B68     	 ldr r3,[r7,#4]
 2807 050e B3F8C230 	 ldrh r3,[r3,#194]
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2808              	 .loc 4 690 0
 2809 0512 1344     	 add r3,r3,r2
 2810 0514 9BB2     	 uxth r3,r3
 2811 0516 0846     	 mov r0,r1
 2812 0518 0121     	 movs r1,#1
 2813 051a 1A46     	 mov r2,r3
 2814 051c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 694:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2815              	 .loc 4 694 0
 2816 0520 7B68     	 ldr r3,[r7,#4]
 2817 0522 1B69     	 ldr r3,[r3,#16]
 2818 0524 1A68     	 ldr r2,[r3]
 2819 0526 7B68     	 ldr r3,[r7,#4]
 2820 0528 B3F8BE30 	 ldrh r3,[r3,#190]
 2821 052c 1046     	 mov r0,r2
 2822 052e 0021     	 movs r1,#0
 2823 0530 1A46     	 mov r2,r3
 2824 0532 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 695:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2825              	 .loc 4 696 0
 2826 0536 7B68     	 ldr r3,[r7,#4]
 2827 0538 1B69     	 ldr r3,[r3,#16]
 2828 053a 1968     	 ldr r1,[r3]
 697:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 698:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2829              	 .loc 4 698 0
 2830 053c 7B68     	 ldr r3,[r7,#4]
 2831 053e B3F8B620 	 ldrh r2,[r3,#182]
 2832 0542 7B68     	 ldr r3,[r7,#4]
 2833 0544 B3F8AE30 	 ldrh r3,[r3,#174]
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2834              	 .loc 4 696 0
 2835 0548 D31A     	 subs r3,r2,r3
 2836 054a 9BB2     	 uxth r3,r3
 2837 054c 0846     	 mov r0,r1
 2838 054e 0121     	 movs r1,#1
 2839 0550 1A46     	 mov r2,r3
 2840 0552 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 699:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2841              	 .loc 4 699 0
 2842 0556 00BF     	 nop
 2843              	.L70:
 700:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 701:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 702:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 2844              	 .loc 4 702 0
 2845 0558 1037     	 adds r7,r7,#16
 2846              	.LCFI145:
 2847              	 .cfi_def_cfa_offset 8
 2848 055a BD46     	 mov sp,r7
 2849              	.LCFI146:
 2850              	 .cfi_def_cfa_register 13
 2851              	 
 2852 055c 80BD     	 pop {r7,pc}
 2853              	 .cfi_endproc
 2854              	.LFE229:
 2856 055e 00BF     	 .section .text.PWM_SVM_Calc4av7segmentCompVal,"ax",%progbits
 2857              	 .align 2
 2858              	 .global PWM_SVM_Calc4av7segmentCompVal
 2859              	 .thumb
 2860              	 .thumb_func
 2862              	PWM_SVM_Calc4av7segmentCompVal:
 2863              	.LFB230:
 703:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 704:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment of Pseudo zero ve
 705:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 706:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc4av7segmentCompVal(PWM_SVM_t* const HandlePtr)
 707:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 2864              	 .loc 4 707 0
 2865              	 .cfi_startproc
 2866              	 
 2867              	 
 2868 0000 80B5     	 push {r7,lr}
 2869              	.LCFI147:
 2870              	 .cfi_def_cfa_offset 8
 2871              	 .cfi_offset 7,-8
 2872              	 .cfi_offset 14,-4
 2873 0002 84B0     	 sub sp,sp,#16
 2874              	.LCFI148:
 2875              	 .cfi_def_cfa_offset 24
 2876 0004 00AF     	 add r7,sp,#0
 2877              	.LCFI149:
 2878              	 .cfi_def_cfa_register 7
 2879 0006 7860     	 str r0,[r7,#4]
 708:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr1s;
 709:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr2s;
 710:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2880              	 .loc 4 710 0
 2881 0008 7B68     	 ldr r3,[r7,#4]
 2882 000a B3F8AE20 	 ldrh r2,[r3,#174]
 2883 000e 7B68     	 ldr r3,[r7,#4]
 2884 0010 B3F8C230 	 ldrh r3,[r3,#194]
 2885 0014 1344     	 add r3,r3,r2
 2886 0016 9AB2     	 uxth r2,r3
 2887 0018 7B68     	 ldr r3,[r7,#4]
 2888 001a A3F8AE20 	 strh r2,[r3,#174]
 711:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 2889              	 .loc 4 711 0
 2890 001e 7B68     	 ldr r3,[r7,#4]
 2891 0020 B3F8B020 	 ldrh r2,[r3,#176]
 2892 0024 7B68     	 ldr r3,[r7,#4]
 2893 0026 B3F8C230 	 ldrh r3,[r3,#194]
 2894 002a 1344     	 add r3,r3,r2
 2895 002c 9AB2     	 uxth r2,r3
 2896 002e 7B68     	 ldr r3,[r7,#4]
 2897 0030 A3F8B020 	 strh r2,[r3,#176]
 712:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 713:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculation of intermediate compare value parameters*/
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = (uint16_t)(
 715:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2898              	 .loc 4 715 0
 2899 0034 7B68     	 ldr r3,[r7,#4]
 2900 0036 D3F89C30 	 ldr r3,[r3,#156]
 2901 003a 9AB2     	 uxth r2,r3
 2902 003c 7B68     	 ldr r3,[r7,#4]
 2903 003e B3F8AE10 	 ldrh r1,[r3,#174]
 716:../Dave/Generated/PWM_SVM/pwm_svm.c ****  (uint16_t) HandlePtr->tb + (2U * HandlePtr->tmin)));
 2904              	 .loc 4 716 0
 2905 0042 7B68     	 ldr r3,[r7,#4]
 2906 0044 B3F8B030 	 ldrh r3,[r3,#176]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2907              	 .loc 4 714 0
 2908 0048 0B44     	 add r3,r3,r1
 2909 004a 99B2     	 uxth r1,r3
 2910              	 .loc 4 716 0
 2911 004c 7B68     	 ldr r3,[r7,#4]
 2912 004e B3F8C230 	 ldrh r3,[r3,#194]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2913              	 .loc 4 714 0
 2914 0052 5B00     	 lsls r3,r3,#1
 2915 0054 9BB2     	 uxth r3,r3
 2916 0056 0B44     	 add r3,r3,r1
 2917 0058 9BB2     	 uxth r3,r3
 2918 005a D31A     	 subs r3,r2,r3
 2919 005c 9AB2     	 uxth r2,r3
 2920 005e 7B68     	 ldr r3,[r7,#4]
 2921 0060 A3F8BC20 	 strh r2,[r3,#188]
 717:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 718:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t) HandlePtr->v_tb2 >> 2U;
 2922              	 .loc 4 718 0
 2923 0064 7B68     	 ldr r3,[r7,#4]
 2924 0066 B3F8BC30 	 ldrh r3,[r3,#188]
 2925 006a 9B08     	 lsrs r3,r3,#2
 2926 006c 9AB2     	 uxth r2,r3
 2927 006e 7B68     	 ldr r3,[r7,#4]
 2928 0070 A3F8B820 	 strh r2,[r3,#184]
 719:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = (uint16_t)(HandlePtr->v_tb2 + (2U * HandlePtr->tmin));
 2929              	 .loc 4 719 0
 2930 0074 7B68     	 ldr r3,[r7,#4]
 2931 0076 B3F8BC20 	 ldrh r2,[r3,#188]
 2932 007a 7B68     	 ldr r3,[r7,#4]
 2933 007c B3F8C230 	 ldrh r3,[r3,#194]
 2934 0080 5B00     	 lsls r3,r3,#1
 2935 0082 9BB2     	 uxth r3,r3
 2936 0084 1344     	 add r3,r3,r2
 2937 0086 9AB2     	 uxth r2,r3
 2938 0088 7B68     	 ldr r3,[r7,#4]
 2939 008a A3F8BA20 	 strh r2,[r3,#186]
 720:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period - (uint16_t) HandlePtr->v_tb;
 2940              	 .loc 4 720 0
 2941 008e 7B68     	 ldr r3,[r7,#4]
 2942 0090 D3F89C30 	 ldr r3,[r3,#156]
 2943 0094 9AB2     	 uxth r2,r3
 2944 0096 7B68     	 ldr r3,[r7,#4]
 2945 0098 B3F8B830 	 ldrh r3,[r3,#184]
 2946 009c D31A     	 subs r3,r2,r3
 2947 009e 9AB2     	 uxth r2,r3
 2948 00a0 7B68     	 ldr r3,[r7,#4]
 2949 00a2 A3F8B620 	 strh r2,[r3,#182]
 721:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 722:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 723:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2950              	 .loc 4 723 0
 2951 00a6 7B68     	 ldr r3,[r7,#4]
 2952 00a8 1B68     	 ldr r3,[r3]
 2953 00aa 1B7C     	 ldrb r3,[r3,#16]
 2954 00ac 012B     	 cmp r3,#1
 2955 00ae 2ED1     	 bne .L83
 724:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 725:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint32_t) HandlePtr->v_ta - ((uint32_t)(HandlePtr->ta) + ((uint32_t) HandlePtr->tb >> 1
 2956              	 .loc 4 725 0
 2957 00b0 7B68     	 ldr r3,[r7,#4]
 2958 00b2 B3F8B630 	 ldrh r3,[r3,#182]
 2959 00b6 1A46     	 mov r2,r3
 2960 00b8 7B68     	 ldr r3,[r7,#4]
 2961 00ba B3F8AE30 	 ldrh r3,[r3,#174]
 2962 00be 1946     	 mov r1,r3
 2963 00c0 7B68     	 ldr r3,[r7,#4]
 2964 00c2 B3F8B030 	 ldrh r3,[r3,#176]
 2965 00c6 5B08     	 lsrs r3,r3,#1
 2966 00c8 9BB2     	 uxth r3,r3
 2967 00ca 0B44     	 add r3,r3,r1
 2968 00cc D31A     	 subs r3,r2,r3
 2969 00ce FB60     	 str r3,[r7,#12]
 726:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint32_t) HandlePtr->v_ta - ((uint32_t) HandlePtr->ta >> 1U);
 2970              	 .loc 4 726 0
 2971 00d0 7B68     	 ldr r3,[r7,#4]
 2972 00d2 B3F8B630 	 ldrh r3,[r3,#182]
 2973 00d6 1A46     	 mov r2,r3
 2974 00d8 7B68     	 ldr r3,[r7,#4]
 2975 00da B3F8AE30 	 ldrh r3,[r3,#174]
 2976 00de 5B08     	 lsrs r3,r3,#1
 2977 00e0 9BB2     	 uxth r3,r3
 2978 00e2 D31A     	 subs r3,r2,r3
 2979 00e4 BB60     	 str r3,[r7,#8]
 727:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2980              	 .loc 4 727 0
 2981 00e6 7B68     	 ldr r3,[r7,#4]
 2982 00e8 5B69     	 ldr r3,[r3,#20]
 2983 00ea 1A68     	 ldr r2,[r3]
 2984 00ec FB68     	 ldr r3,[r7,#12]
 2985 00ee 9BB2     	 uxth r3,r3
 2986 00f0 1046     	 mov r0,r2
 2987 00f2 0021     	 movs r1,#0
 2988 00f4 1A46     	 mov r2,r3
 2989 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 729:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2990              	 .loc 4 729 0
 2991 00fa 7B68     	 ldr r3,[r7,#4]
 2992 00fc 5B69     	 ldr r3,[r3,#20]
 2993 00fe 1A68     	 ldr r2,[r3]
 2994 0100 BB68     	 ldr r3,[r7,#8]
 2995 0102 9BB2     	 uxth r3,r3
 2996 0104 1046     	 mov r0,r2
 2997 0106 0121     	 movs r1,#1
 2998 0108 1A46     	 mov r2,r3
 2999 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 3000              	.L83:
 730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 731:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 732:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 733:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 3001              	 .loc 4 733 0
 3002 010e 7B68     	 ldr r3,[r7,#4]
 3003 0110 D3F8A430 	 ldr r3,[r3,#164]
 3004 0114 03F00703 	 and r3,r3,#7
 3005 0118 042B     	 cmp r3,#4
 3006 011a 00F2CA81 	 bhi .L84
 3007 011e 01A2     	 adr r2,.L86
 3008 0120 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 3009              	 .p2align 2
 3010              	.L86:
 3011 0124 39010000 	 .word .L85+1
 3012 0128 EB010000 	 .word .L87+1
 3013 012c 9D020000 	 .word .L88+1
 3014 0130 4F030000 	 .word .L89+1
 3015 0134 01040000 	 .word .L90+1
 3016              	 .p2align 1
 3017              	.L85:
 734:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 735:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3018              	 .loc 4 736 0
 3019 0138 7B68     	 ldr r3,[r7,#4]
 3020 013a 9B68     	 ldr r3,[r3,#8]
 3021 013c 1968     	 ldr r1,[r3]
 737:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 738:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3022              	 .loc 4 738 0
 3023 013e 7B68     	 ldr r3,[r7,#4]
 3024 0140 B3F8B820 	 ldrh r2,[r3,#184]
 3025 0144 7B68     	 ldr r3,[r7,#4]
 3026 0146 B3F8C230 	 ldrh r3,[r3,#194]
 3027 014a 5B00     	 lsls r3,r3,#1
 3028 014c 9BB2     	 uxth r3,r3
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3029              	 .loc 4 736 0
 3030 014e 1344     	 add r3,r3,r2
 3031 0150 9BB2     	 uxth r3,r3
 3032 0152 0846     	 mov r0,r1
 3033 0154 0021     	 movs r1,#0
 3034 0156 1A46     	 mov r2,r3
 3035 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 739:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3036              	 .loc 4 739 0
 3037 015c 7B68     	 ldr r3,[r7,#4]
 3038 015e 9B68     	 ldr r3,[r3,#8]
 3039 0160 1A68     	 ldr r2,[r3]
 3040 0162 7B68     	 ldr r3,[r7,#4]
 3041 0164 B3F8B630 	 ldrh r3,[r3,#182]
 3042 0168 1046     	 mov r0,r2
 3043 016a 0121     	 movs r1,#1
 3044 016c 1A46     	 mov r2,r3
 3045 016e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 740:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 741:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3046              	 .loc 4 742 0
 3047 0172 7B68     	 ldr r3,[r7,#4]
 3048 0174 DB68     	 ldr r3,[r3,#12]
 3049 0176 1968     	 ldr r1,[r3]
 743:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 744:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3050              	 .loc 4 744 0
 3051 0178 7B68     	 ldr r3,[r7,#4]
 3052 017a B3F8B820 	 ldrh r2,[r3,#184]
 3053 017e 7B68     	 ldr r3,[r7,#4]
 3054 0180 B3F8C230 	 ldrh r3,[r3,#194]
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3055              	 .loc 4 742 0
 3056 0184 1344     	 add r3,r3,r2
 3057 0186 9BB2     	 uxth r3,r3
 3058 0188 0846     	 mov r0,r1
 3059 018a 0021     	 movs r1,#0
 3060 018c 1A46     	 mov r2,r3
 3061 018e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3062              	 .loc 4 745 0
 3063 0192 7B68     	 ldr r3,[r7,#4]
 3064 0194 DB68     	 ldr r3,[r3,#12]
 3065 0196 1968     	 ldr r1,[r3]
 746:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 747:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 3066              	 .loc 4 747 0
 3067 0198 7B68     	 ldr r3,[r7,#4]
 3068 019a B3F8B620 	 ldrh r2,[r3,#182]
 3069 019e 7B68     	 ldr r3,[r7,#4]
 3070 01a0 B3F8AE30 	 ldrh r3,[r3,#174]
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3071              	 .loc 4 745 0
 3072 01a4 D31A     	 subs r3,r2,r3
 3073 01a6 9BB2     	 uxth r3,r3
 3074 01a8 0846     	 mov r0,r1
 3075 01aa 0121     	 movs r1,#1
 3076 01ac 1A46     	 mov r2,r3
 3077 01ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3078              	 .loc 4 749 0
 3079 01b2 7B68     	 ldr r3,[r7,#4]
 3080 01b4 1B69     	 ldr r3,[r3,#16]
 3081 01b6 1A68     	 ldr r2,[r3]
 3082 01b8 7B68     	 ldr r3,[r7,#4]
 3083 01ba B3F8B830 	 ldrh r3,[r3,#184]
 3084 01be 1046     	 mov r0,r2
 3085 01c0 0021     	 movs r1,#0
 3086 01c2 1A46     	 mov r2,r3
 3087 01c4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 750:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3088              	 .loc 4 751 0
 3089 01c8 7B68     	 ldr r3,[r7,#4]
 3090 01ca 1B69     	 ldr r3,[r3,#16]
 3091 01cc 1968     	 ldr r1,[r3]
 752:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 753:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3092              	 .loc 4 753 0
 3093 01ce 7B68     	 ldr r3,[r7,#4]
 3094 01d0 B3F8BA20 	 ldrh r2,[r3,#186]
 3095 01d4 7B68     	 ldr r3,[r7,#4]
 3096 01d6 B3F8B830 	 ldrh r3,[r3,#184]
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3097              	 .loc 4 751 0
 3098 01da D31A     	 subs r3,r2,r3
 3099 01dc 9BB2     	 uxth r3,r3
 3100 01de 0846     	 mov r0,r1
 3101 01e0 0121     	 movs r1,#1
 3102 01e2 1A46     	 mov r2,r3
 3103 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 754:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3104              	 .loc 4 754 0
 3105 01e8 BCE1     	 b .L82
 3106              	.L87:
 755:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3107              	 .loc 4 756 0
 3108 01ea 7B68     	 ldr r3,[r7,#4]
 3109 01ec 9B68     	 ldr r3,[r3,#8]
 3110 01ee 1968     	 ldr r1,[r3]
 757:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 758:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3111              	 .loc 4 758 0
 3112 01f0 7B68     	 ldr r3,[r7,#4]
 3113 01f2 B3F8B820 	 ldrh r2,[r3,#184]
 3114 01f6 7B68     	 ldr r3,[r7,#4]
 3115 01f8 B3F8C230 	 ldrh r3,[r3,#194]
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3116              	 .loc 4 756 0
 3117 01fc 1344     	 add r3,r3,r2
 3118 01fe 9BB2     	 uxth r3,r3
 3119 0200 0846     	 mov r0,r1
 3120 0202 0021     	 movs r1,#0
 3121 0204 1A46     	 mov r2,r3
 3122 0206 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3123              	 .loc 4 759 0
 3124 020a 7B68     	 ldr r3,[r7,#4]
 3125 020c 9B68     	 ldr r3,[r3,#8]
 3126 020e 1968     	 ldr r1,[r3]
 760:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 761:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 3127              	 .loc 4 761 0
 3128 0210 7B68     	 ldr r3,[r7,#4]
 3129 0212 B3F8B620 	 ldrh r2,[r3,#182]
 3130 0216 7B68     	 ldr r3,[r7,#4]
 3131 0218 B3F8AE30 	 ldrh r3,[r3,#174]
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3132              	 .loc 4 759 0
 3133 021c D31A     	 subs r3,r2,r3
 3134 021e 9BB2     	 uxth r3,r3
 3135 0220 0846     	 mov r0,r1
 3136 0222 0121     	 movs r1,#1
 3137 0224 1A46     	 mov r2,r3
 3138 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 762:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3139              	 .loc 4 763 0
 3140 022a 7B68     	 ldr r3,[r7,#4]
 3141 022c DB68     	 ldr r3,[r3,#12]
 3142 022e 1968     	 ldr r1,[r3]
 764:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 765:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3143              	 .loc 4 765 0
 3144 0230 7B68     	 ldr r3,[r7,#4]
 3145 0232 B3F8B820 	 ldrh r2,[r3,#184]
 3146 0236 7B68     	 ldr r3,[r7,#4]
 3147 0238 B3F8C230 	 ldrh r3,[r3,#194]
 3148 023c 5B00     	 lsls r3,r3,#1
 3149 023e 9BB2     	 uxth r3,r3
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3150              	 .loc 4 763 0
 3151 0240 1344     	 add r3,r3,r2
 3152 0242 9BB2     	 uxth r3,r3
 3153 0244 0846     	 mov r0,r1
 3154 0246 0021     	 movs r1,#0
 3155 0248 1A46     	 mov r2,r3
 3156 024a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3157              	 .loc 4 766 0
 3158 024e 7B68     	 ldr r3,[r7,#4]
 3159 0250 DB68     	 ldr r3,[r3,#12]
 3160 0252 1A68     	 ldr r2,[r3]
 3161 0254 7B68     	 ldr r3,[r7,#4]
 3162 0256 B3F8B630 	 ldrh r3,[r3,#182]
 3163 025a 1046     	 mov r0,r2
 3164 025c 0121     	 movs r1,#1
 3165 025e 1A46     	 mov r2,r3
 3166 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 767:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 768:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 769:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3167              	 .loc 4 769 0
 3168 0264 7B68     	 ldr r3,[r7,#4]
 3169 0266 1B69     	 ldr r3,[r3,#16]
 3170 0268 1A68     	 ldr r2,[r3]
 3171 026a 7B68     	 ldr r3,[r7,#4]
 3172 026c B3F8B830 	 ldrh r3,[r3,#184]
 3173 0270 1046     	 mov r0,r2
 3174 0272 0021     	 movs r1,#0
 3175 0274 1A46     	 mov r2,r3
 3176 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 770:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3177              	 .loc 4 771 0
 3178 027a 7B68     	 ldr r3,[r7,#4]
 3179 027c 1B69     	 ldr r3,[r3,#16]
 3180 027e 1968     	 ldr r1,[r3]
 772:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 773:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3181              	 .loc 4 773 0
 3182 0280 7B68     	 ldr r3,[r7,#4]
 3183 0282 B3F8BA20 	 ldrh r2,[r3,#186]
 3184 0286 7B68     	 ldr r3,[r7,#4]
 3185 0288 B3F8B830 	 ldrh r3,[r3,#184]
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3186              	 .loc 4 771 0
 3187 028c D31A     	 subs r3,r2,r3
 3188 028e 9BB2     	 uxth r3,r3
 3189 0290 0846     	 mov r0,r1
 3190 0292 0121     	 movs r1,#1
 3191 0294 1A46     	 mov r2,r3
 3192 0296 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 774:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3193              	 .loc 4 774 0
 3194 029a 63E1     	 b .L82
 3195              	.L88:
 775:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 776:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3196              	 .loc 4 776 0
 3197 029c 7B68     	 ldr r3,[r7,#4]
 3198 029e 9B68     	 ldr r3,[r3,#8]
 3199 02a0 1A68     	 ldr r2,[r3]
 3200 02a2 7B68     	 ldr r3,[r7,#4]
 3201 02a4 B3F8B830 	 ldrh r3,[r3,#184]
 3202 02a8 1046     	 mov r0,r2
 3203 02aa 0021     	 movs r1,#0
 3204 02ac 1A46     	 mov r2,r3
 3205 02ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 777:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3206              	 .loc 4 778 0
 3207 02b2 7B68     	 ldr r3,[r7,#4]
 3208 02b4 9B68     	 ldr r3,[r3,#8]
 3209 02b6 1968     	 ldr r1,[r3]
 779:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 780:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3210              	 .loc 4 780 0
 3211 02b8 7B68     	 ldr r3,[r7,#4]
 3212 02ba B3F8BA20 	 ldrh r2,[r3,#186]
 3213 02be 7B68     	 ldr r3,[r7,#4]
 3214 02c0 B3F8B830 	 ldrh r3,[r3,#184]
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3215              	 .loc 4 778 0
 3216 02c4 D31A     	 subs r3,r2,r3
 3217 02c6 9BB2     	 uxth r3,r3
 3218 02c8 0846     	 mov r0,r1
 3219 02ca 0121     	 movs r1,#1
 3220 02cc 1A46     	 mov r2,r3
 3221 02ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 781:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3222              	 .loc 4 782 0
 3223 02d2 7B68     	 ldr r3,[r7,#4]
 3224 02d4 DB68     	 ldr r3,[r3,#12]
 3225 02d6 1968     	 ldr r1,[r3]
 783:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 784:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3226              	 .loc 4 784 0
 3227 02d8 7B68     	 ldr r3,[r7,#4]
 3228 02da B3F8B820 	 ldrh r2,[r3,#184]
 3229 02de 7B68     	 ldr r3,[r7,#4]
 3230 02e0 B3F8C230 	 ldrh r3,[r3,#194]
 3231 02e4 5B00     	 lsls r3,r3,#1
 3232 02e6 9BB2     	 uxth r3,r3
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3233              	 .loc 4 782 0
 3234 02e8 1344     	 add r3,r3,r2
 3235 02ea 9BB2     	 uxth r3,r3
 3236 02ec 0846     	 mov r0,r1
 3237 02ee 0021     	 movs r1,#0
 3238 02f0 1A46     	 mov r2,r3
 3239 02f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 785:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3240              	 .loc 4 785 0
 3241 02f6 7B68     	 ldr r3,[r7,#4]
 3242 02f8 DB68     	 ldr r3,[r3,#12]
 3243 02fa 1A68     	 ldr r2,[r3]
 3244 02fc 7B68     	 ldr r3,[r7,#4]
 3245 02fe B3F8B630 	 ldrh r3,[r3,#182]
 3246 0302 1046     	 mov r0,r2
 3247 0304 0121     	 movs r1,#1
 3248 0306 1A46     	 mov r2,r3
 3249 0308 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 786:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 787:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3250              	 .loc 4 788 0
 3251 030c 7B68     	 ldr r3,[r7,#4]
 3252 030e 1B69     	 ldr r3,[r3,#16]
 3253 0310 1968     	 ldr r1,[r3]
 789:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 790:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3254              	 .loc 4 790 0
 3255 0312 7B68     	 ldr r3,[r7,#4]
 3256 0314 B3F8B820 	 ldrh r2,[r3,#184]
 3257 0318 7B68     	 ldr r3,[r7,#4]
 3258 031a B3F8C230 	 ldrh r3,[r3,#194]
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3259              	 .loc 4 788 0
 3260 031e 1344     	 add r3,r3,r2
 3261 0320 9BB2     	 uxth r3,r3
 3262 0322 0846     	 mov r0,r1
 3263 0324 0021     	 movs r1,#0
 3264 0326 1A46     	 mov r2,r3
 3265 0328 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3266              	 .loc 4 791 0
 3267 032c 7B68     	 ldr r3,[r7,#4]
 3268 032e 1B69     	 ldr r3,[r3,#16]
 3269 0330 1968     	 ldr r1,[r3]
 792:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 793:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 3270              	 .loc 4 793 0
 3271 0332 7B68     	 ldr r3,[r7,#4]
 3272 0334 B3F8B620 	 ldrh r2,[r3,#182]
 3273 0338 7B68     	 ldr r3,[r7,#4]
 3274 033a B3F8AE30 	 ldrh r3,[r3,#174]
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3275              	 .loc 4 791 0
 3276 033e D31A     	 subs r3,r2,r3
 3277 0340 9BB2     	 uxth r3,r3
 3278 0342 0846     	 mov r0,r1
 3279 0344 0121     	 movs r1,#1
 3280 0346 1A46     	 mov r2,r3
 3281 0348 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 794:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3282              	 .loc 4 794 0
 3283 034c 0AE1     	 b .L82
 3284              	.L89:
 795:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 796:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3285              	 .loc 4 796 0
 3286 034e 7B68     	 ldr r3,[r7,#4]
 3287 0350 9B68     	 ldr r3,[r3,#8]
 3288 0352 1A68     	 ldr r2,[r3]
 3289 0354 7B68     	 ldr r3,[r7,#4]
 3290 0356 B3F8B830 	 ldrh r3,[r3,#184]
 3291 035a 1046     	 mov r0,r2
 3292 035c 0021     	 movs r1,#0
 3293 035e 1A46     	 mov r2,r3
 3294 0360 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 797:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3295              	 .loc 4 798 0
 3296 0364 7B68     	 ldr r3,[r7,#4]
 3297 0366 9B68     	 ldr r3,[r3,#8]
 3298 0368 1968     	 ldr r1,[r3]
 799:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 800:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3299              	 .loc 4 800 0
 3300 036a 7B68     	 ldr r3,[r7,#4]
 3301 036c B3F8BA20 	 ldrh r2,[r3,#186]
 3302 0370 7B68     	 ldr r3,[r7,#4]
 3303 0372 B3F8B830 	 ldrh r3,[r3,#184]
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3304              	 .loc 4 798 0
 3305 0376 D31A     	 subs r3,r2,r3
 3306 0378 9BB2     	 uxth r3,r3
 3307 037a 0846     	 mov r0,r1
 3308 037c 0121     	 movs r1,#1
 3309 037e 1A46     	 mov r2,r3
 3310 0380 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 801:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3311              	 .loc 4 802 0
 3312 0384 7B68     	 ldr r3,[r7,#4]
 3313 0386 DB68     	 ldr r3,[r3,#12]
 3314 0388 1968     	 ldr r1,[r3]
 803:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 804:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3315              	 .loc 4 804 0
 3316 038a 7B68     	 ldr r3,[r7,#4]
 3317 038c B3F8B820 	 ldrh r2,[r3,#184]
 3318 0390 7B68     	 ldr r3,[r7,#4]
 3319 0392 B3F8C230 	 ldrh r3,[r3,#194]
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3320              	 .loc 4 802 0
 3321 0396 1344     	 add r3,r3,r2
 3322 0398 9BB2     	 uxth r3,r3
 3323 039a 0846     	 mov r0,r1
 3324 039c 0021     	 movs r1,#0
 3325 039e 1A46     	 mov r2,r3
 3326 03a0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3327              	 .loc 4 805 0
 3328 03a4 7B68     	 ldr r3,[r7,#4]
 3329 03a6 DB68     	 ldr r3,[r3,#12]
 3330 03a8 1968     	 ldr r1,[r3]
 806:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 807:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3331              	 .loc 4 807 0
 3332 03aa 7B68     	 ldr r3,[r7,#4]
 3333 03ac B3F8B620 	 ldrh r2,[r3,#182]
 3334 03b0 7B68     	 ldr r3,[r7,#4]
 3335 03b2 B3F8AE30 	 ldrh r3,[r3,#174]
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3336              	 .loc 4 805 0
 3337 03b6 D31A     	 subs r3,r2,r3
 3338 03b8 9BB2     	 uxth r3,r3
 3339 03ba 0846     	 mov r0,r1
 3340 03bc 0121     	 movs r1,#1
 3341 03be 1A46     	 mov r2,r3
 3342 03c0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3343              	 .loc 4 809 0
 3344 03c4 7B68     	 ldr r3,[r7,#4]
 3345 03c6 1B69     	 ldr r3,[r3,#16]
 3346 03c8 1968     	 ldr r1,[r3]
 810:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 811:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3347              	 .loc 4 811 0
 3348 03ca 7B68     	 ldr r3,[r7,#4]
 3349 03cc B3F8B820 	 ldrh r2,[r3,#184]
 3350 03d0 7B68     	 ldr r3,[r7,#4]
 3351 03d2 B3F8C230 	 ldrh r3,[r3,#194]
 3352 03d6 5B00     	 lsls r3,r3,#1
 3353 03d8 9BB2     	 uxth r3,r3
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3354              	 .loc 4 809 0
 3355 03da 1344     	 add r3,r3,r2
 3356 03dc 9BB2     	 uxth r3,r3
 3357 03de 0846     	 mov r0,r1
 3358 03e0 0021     	 movs r1,#0
 3359 03e2 1A46     	 mov r2,r3
 3360 03e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 812:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3361              	 .loc 4 812 0
 3362 03e8 7B68     	 ldr r3,[r7,#4]
 3363 03ea 1B69     	 ldr r3,[r3,#16]
 3364 03ec 1A68     	 ldr r2,[r3]
 3365 03ee 7B68     	 ldr r3,[r7,#4]
 3366 03f0 B3F8B630 	 ldrh r3,[r3,#182]
 3367 03f4 1046     	 mov r0,r2
 3368 03f6 0121     	 movs r1,#1
 3369 03f8 1A46     	 mov r2,r3
 3370 03fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 813:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 814:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3371              	 .loc 4 814 0
 3372 03fe B1E0     	 b .L82
 3373              	.L90:
 815:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3374              	 .loc 4 816 0
 3375 0400 7B68     	 ldr r3,[r7,#4]
 3376 0402 9B68     	 ldr r3,[r3,#8]
 3377 0404 1968     	 ldr r1,[r3]
 817:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 818:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3378              	 .loc 4 818 0
 3379 0406 7B68     	 ldr r3,[r7,#4]
 3380 0408 B3F8B820 	 ldrh r2,[r3,#184]
 3381 040c 7B68     	 ldr r3,[r7,#4]
 3382 040e B3F8C230 	 ldrh r3,[r3,#194]
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3383              	 .loc 4 816 0
 3384 0412 1344     	 add r3,r3,r2
 3385 0414 9BB2     	 uxth r3,r3
 3386 0416 0846     	 mov r0,r1
 3387 0418 0021     	 movs r1,#0
 3388 041a 1A46     	 mov r2,r3
 3389 041c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3390              	 .loc 4 819 0
 3391 0420 7B68     	 ldr r3,[r7,#4]
 3392 0422 9B68     	 ldr r3,[r3,#8]
 3393 0424 1968     	 ldr r1,[r3]
 820:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 821:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3394              	 .loc 4 821 0
 3395 0426 7B68     	 ldr r3,[r7,#4]
 3396 0428 B3F8B620 	 ldrh r2,[r3,#182]
 3397 042c 7B68     	 ldr r3,[r7,#4]
 3398 042e B3F8AE30 	 ldrh r3,[r3,#174]
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3399              	 .loc 4 819 0
 3400 0432 D31A     	 subs r3,r2,r3
 3401 0434 9BB2     	 uxth r3,r3
 3402 0436 0846     	 mov r0,r1
 3403 0438 0121     	 movs r1,#1
 3404 043a 1A46     	 mov r2,r3
 3405 043c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 822:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 823:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3406              	 .loc 4 823 0
 3407 0440 7B68     	 ldr r3,[r7,#4]
 3408 0442 DB68     	 ldr r3,[r3,#12]
 3409 0444 1A68     	 ldr r2,[r3]
 3410 0446 7B68     	 ldr r3,[r7,#4]
 3411 0448 B3F8B830 	 ldrh r3,[r3,#184]
 3412 044c 1046     	 mov r0,r2
 3413 044e 0021     	 movs r1,#0
 3414 0450 1A46     	 mov r2,r3
 3415 0452 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 824:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3416              	 .loc 4 825 0
 3417 0456 7B68     	 ldr r3,[r7,#4]
 3418 0458 DB68     	 ldr r3,[r3,#12]
 3419 045a 1968     	 ldr r1,[r3]
 826:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 827:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3420              	 .loc 4 827 0
 3421 045c 7B68     	 ldr r3,[r7,#4]
 3422 045e B3F8BA20 	 ldrh r2,[r3,#186]
 3423 0462 7B68     	 ldr r3,[r7,#4]
 3424 0464 B3F8B830 	 ldrh r3,[r3,#184]
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3425              	 .loc 4 825 0
 3426 0468 D31A     	 subs r3,r2,r3
 3427 046a 9BB2     	 uxth r3,r3
 3428 046c 0846     	 mov r0,r1
 3429 046e 0121     	 movs r1,#1
 3430 0470 1A46     	 mov r2,r3
 3431 0472 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 828:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3432              	 .loc 4 829 0
 3433 0476 7B68     	 ldr r3,[r7,#4]
 3434 0478 1B69     	 ldr r3,[r3,#16]
 3435 047a 1968     	 ldr r1,[r3]
 830:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 831:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3436              	 .loc 4 831 0
 3437 047c 7B68     	 ldr r3,[r7,#4]
 3438 047e B3F8B820 	 ldrh r2,[r3,#184]
 3439 0482 7B68     	 ldr r3,[r7,#4]
 3440 0484 B3F8C230 	 ldrh r3,[r3,#194]
 3441 0488 5B00     	 lsls r3,r3,#1
 3442 048a 9BB2     	 uxth r3,r3
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3443              	 .loc 4 829 0
 3444 048c 1344     	 add r3,r3,r2
 3445 048e 9BB2     	 uxth r3,r3
 3446 0490 0846     	 mov r0,r1
 3447 0492 0021     	 movs r1,#0
 3448 0494 1A46     	 mov r2,r3
 3449 0496 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 832:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3450              	 .loc 4 832 0
 3451 049a 7B68     	 ldr r3,[r7,#4]
 3452 049c 1B69     	 ldr r3,[r3,#16]
 3453 049e 1A68     	 ldr r2,[r3]
 3454 04a0 7B68     	 ldr r3,[r7,#4]
 3455 04a2 B3F8B630 	 ldrh r3,[r3,#182]
 3456 04a6 1046     	 mov r0,r2
 3457 04a8 0121     	 movs r1,#1
 3458 04aa 1A46     	 mov r2,r3
 3459 04ac FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 833:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 834:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3460              	 .loc 4 834 0
 3461 04b0 58E0     	 b .L82
 3462              	.L84:
 835:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3463              	 .loc 4 836 0
 3464 04b2 7B68     	 ldr r3,[r7,#4]
 3465 04b4 9B68     	 ldr r3,[r3,#8]
 3466 04b6 1968     	 ldr r1,[r3]
 837:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 838:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3467              	 .loc 4 838 0
 3468 04b8 7B68     	 ldr r3,[r7,#4]
 3469 04ba B3F8B820 	 ldrh r2,[r3,#184]
 3470 04be 7B68     	 ldr r3,[r7,#4]
 3471 04c0 B3F8C230 	 ldrh r3,[r3,#194]
 3472 04c4 5B00     	 lsls r3,r3,#1
 3473 04c6 9BB2     	 uxth r3,r3
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3474              	 .loc 4 836 0
 3475 04c8 1344     	 add r3,r3,r2
 3476 04ca 9BB2     	 uxth r3,r3
 3477 04cc 0846     	 mov r0,r1
 3478 04ce 0021     	 movs r1,#0
 3479 04d0 1A46     	 mov r2,r3
 3480 04d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 839:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3481              	 .loc 4 839 0
 3482 04d6 7B68     	 ldr r3,[r7,#4]
 3483 04d8 9B68     	 ldr r3,[r3,#8]
 3484 04da 1A68     	 ldr r2,[r3]
 3485 04dc 7B68     	 ldr r3,[r7,#4]
 3486 04de B3F8B630 	 ldrh r3,[r3,#182]
 3487 04e2 1046     	 mov r0,r2
 3488 04e4 0121     	 movs r1,#1
 3489 04e6 1A46     	 mov r2,r3
 3490 04e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 840:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 841:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 842:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3491              	 .loc 4 842 0
 3492 04ec 7B68     	 ldr r3,[r7,#4]
 3493 04ee DB68     	 ldr r3,[r3,#12]
 3494 04f0 1A68     	 ldr r2,[r3]
 3495 04f2 7B68     	 ldr r3,[r7,#4]
 3496 04f4 B3F8B830 	 ldrh r3,[r3,#184]
 3497 04f8 1046     	 mov r0,r2
 3498 04fa 0021     	 movs r1,#0
 3499 04fc 1A46     	 mov r2,r3
 3500 04fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 843:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3501              	 .loc 4 844 0
 3502 0502 7B68     	 ldr r3,[r7,#4]
 3503 0504 DB68     	 ldr r3,[r3,#12]
 3504 0506 1968     	 ldr r1,[r3]
 845:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 846:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3505              	 .loc 4 846 0
 3506 0508 7B68     	 ldr r3,[r7,#4]
 3507 050a B3F8BA20 	 ldrh r2,[r3,#186]
 3508 050e 7B68     	 ldr r3,[r7,#4]
 3509 0510 B3F8B830 	 ldrh r3,[r3,#184]
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3510              	 .loc 4 844 0
 3511 0514 D31A     	 subs r3,r2,r3
 3512 0516 9BB2     	 uxth r3,r3
 3513 0518 0846     	 mov r0,r1
 3514 051a 0121     	 movs r1,#1
 3515 051c 1A46     	 mov r2,r3
 3516 051e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 847:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3517              	 .loc 4 848 0
 3518 0522 7B68     	 ldr r3,[r7,#4]
 3519 0524 1B69     	 ldr r3,[r3,#16]
 3520 0526 1968     	 ldr r1,[r3]
 849:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 850:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3521              	 .loc 4 850 0
 3522 0528 7B68     	 ldr r3,[r7,#4]
 3523 052a B3F8B820 	 ldrh r2,[r3,#184]
 3524 052e 7B68     	 ldr r3,[r7,#4]
 3525 0530 B3F8C230 	 ldrh r3,[r3,#194]
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3526              	 .loc 4 848 0
 3527 0534 1344     	 add r3,r3,r2
 3528 0536 9BB2     	 uxth r3,r3
 3529 0538 0846     	 mov r0,r1
 3530 053a 0021     	 movs r1,#0
 3531 053c 1A46     	 mov r2,r3
 3532 053e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3533              	 .loc 4 851 0
 3534 0542 7B68     	 ldr r3,[r7,#4]
 3535 0544 1B69     	 ldr r3,[r3,#16]
 3536 0546 1968     	 ldr r1,[r3]
 852:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 853:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3537              	 .loc 4 853 0
 3538 0548 7B68     	 ldr r3,[r7,#4]
 3539 054a B3F8B620 	 ldrh r2,[r3,#182]
 3540 054e 7B68     	 ldr r3,[r7,#4]
 3541 0550 B3F8AE30 	 ldrh r3,[r3,#174]
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3542              	 .loc 4 851 0
 3543 0554 D31A     	 subs r3,r2,r3
 3544 0556 9BB2     	 uxth r3,r3
 3545 0558 0846     	 mov r0,r1
 3546 055a 0121     	 movs r1,#1
 3547 055c 1A46     	 mov r2,r3
 3548 055e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 854:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3549              	 .loc 4 854 0
 3550 0562 00BF     	 nop
 3551              	.L82:
 855:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 856:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3552              	 .loc 4 856 0
 3553 0564 1037     	 adds r7,r7,#16
 3554              	.LCFI150:
 3555              	 .cfi_def_cfa_offset 8
 3556 0566 BD46     	 mov sp,r7
 3557              	.LCFI151:
 3558              	 .cfi_def_cfa_register 13
 3559              	 
 3560 0568 80BD     	 pop {r7,pc}
 3561              	 .cfi_endproc
 3562              	.LFE230:
 3564 056a 00BF     	 .section .ram_code
 3565              	 .align 2
 3566              	 .global PWM_SVM_TimecalcUsingLUT
 3567              	 .thumb
 3568              	 .thumb_func
 3570              	PWM_SVM_TimecalcUsingLUT:
 3571              	.LFB231:
 857:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 858:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
 859:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 860:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using CORDIC
 861:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 862:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingCORDIC(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 863:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 864:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx_amp;
 865:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx_amp;
 866:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx;
 867:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx;
 868:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tacord_tmp;
 869:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tbcord_tmp;
 870:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Angle_tmp;
 871:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sine_inv;
 872:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 873:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;
 874:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 875:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingCORDIC:NULL Handle Pointer",
 876:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 877:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 878:../Dave/Generated/PWM_SVM/pwm_svm.c ****   Angle_tmp =Angle & (uint32_t)0xFFFFFF;
 879:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 880:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = ((uint32_t)((Angle_tmp * 6U) >> 24U) & 7U);
 881:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate sector angle*/
 882:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)((Angle_tmp) - (uint32_t)(HandlePtr->sector * PWM_SVM_SIXTYDE
 883:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 884:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Clearing previous values of CORDX,CORDY and CORDZ Registers*/
 885:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->STATC = 0U;
 886:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 887:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set CORDIC to Circular Operating Mode and Rotation Mode,
 888:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * Auto start of calculation after write access to X parameter data register,
 889:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * X result data format to Unsigned, when read,
 890:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * After the last iteration of calculation the X & Y values are divided by 1
 891:../Dave/Generated/PWM_SVM/pwm_svm.c ****    */
 892:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CON = (uint32_t)0x2A;
 893:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 894:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Input sector angle*/
 895:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDZ = (uint32_t)(HandlePtr->sector_angle << ((uint32_t)MATH_CORDZ_DATA_Pos));
 896:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 897:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set the Y value to zero*/
 898:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDY =  (uint32_t)(0U << MATH_CORDY_DATA_Pos);
 899:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 900:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Load the amplitude value */
 901:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDX =  (uint32_t)(1024 << MATH_CORDX_DATA_Pos);
 902:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 903:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Checking busy status of CORDIC calculation*/
 904:../Dave/Generated/PWM_SVM/pwm_svm.c ****   while (MATH->STATC & 0x1U)
 905:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 906:../Dave/Generated/PWM_SVM/pwm_svm.c ****   };
 907:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 908:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic X result which is costheta X amplitude*/
 909:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = (MATH->CORRX >> MATH_CORDX_DATA_Pos);
 910:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx     = (cosx_amp * PWM_SVM_KCOSSCALE)>>10;
 911:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = cosx * Amplitude;
 912:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic Y result which is sintheta X amplitude*/
 913:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = (MATH->CORRY >> MATH_CORDY_DATA_Pos);
 914:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx     = (sinx_amp * PWM_SVM_KSINSCALE)>>10;
 915:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = sinx * Amplitude;
 916:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 917:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 918:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 919:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 920:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 921:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 922:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with sinscale to eliminate gain factor K*/
 923:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tacord_tmp = (uint32_t)(sinx_amp>>14U);
 924:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->ta = (uint16_t)((tacord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 925:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 926:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with cosscale to eliminate gain factor K*
 927:../Dave/Generated/PWM_SVM/pwm_svm.c ****     * sin(60-Angle) = (Sqrt(3)*cos(angle) - sin(angle))/2
 928:../Dave/Generated/PWM_SVM/pwm_svm.c ****     */
 929:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tbcord_tmp = (uint32_t)((cosx_amp - sinx_amp))>>15U;
 930:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->tb = (uint16_t)((tbcord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 931:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 932:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 933:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = HandlePtr->period - ta_tb;
 934:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 935:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 936:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 937:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 938:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 939:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 940:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
 941:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 942:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * (sinx >> 14U);
 943:../Dave/Generated/PWM_SVM/pwm_svm.c ****       sine_inv = (cosx - sinx) >> 15U;
 944:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = sinx + sine_inv;
 945:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 946:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
 947:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
 948:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
 949:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
 950:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
 951:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
 952:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (Dividend_Sine/Divisor_Sine);
 953:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 954:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
 955:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0;
 956:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 957:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 958:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
 959:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
 960:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
 961:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 962:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 963:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
 964:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->period - HandlePtr->ta;
 965:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 966:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 967:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 968:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* If ta and tb values are less then zero, reset these values to zero */
 969:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta > HandlePtr->period)
 970:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 971:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 972:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 973:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb > HandlePtr->period)
 974:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 975:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 976:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 977:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 978:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 979:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 980:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 981:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using Look up table
 982:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 983:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingLUT(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 984:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3572              	 .loc 4 984 0
 3573              	 .cfi_startproc
 3574              	 
 3575              	 
 3576              	 
 3577 0278 80B4     	 push {r7}
 3578              	.LCFI152:
 3579              	 .cfi_def_cfa_offset 4
 3580              	 .cfi_offset 7,-4
 3581 027a 8BB0     	 sub sp,sp,#44
 3582              	.LCFI153:
 3583              	 .cfi_def_cfa_offset 48
 3584 027c 00AF     	 add r7,sp,#0
 3585              	.LCFI154:
 3586              	 .cfi_def_cfa_register 7
 3587 027e F860     	 str r0,[r7,#12]
 3588 0280 0B46     	 mov r3,r1
 3589 0282 7A60     	 str r2,[r7,#4]
 3590 0284 7B81     	 strh r3,[r7,#10]
 985:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t angletemp;
 986:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 987:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;        /*Ts x sin(θrel), sin(θrel)+sin(60°-θrel)*/
 988:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingLUT:NULL Handle Pointer",
 989:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 990:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 991:../Dave/Generated/PWM_SVM/pwm_svm.c ****   angletemp = (uint32_t)((Angle & (uint32_t)0xFFFFFF) >> 14U) * 6U;
 3591              	 .loc 4 991 0
 3592 0286 7B68     	 ldr r3,[r7,#4]
 3593 0288 23F07F43 	 bic r3,r3,#-16777216
 3594 028c 9A0B     	 lsrs r2,r3,#14
 3595 028e 1346     	 mov r3,r2
 3596 0290 5B00     	 lsls r3,r3,#1
 3597 0292 1344     	 add r3,r3,r2
 3598 0294 5B00     	 lsls r3,r3,#1
 3599 0296 7B62     	 str r3,[r7,#36]
 992:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)(angletemp & (uint32_t) 0x003FF);
 3600              	 .loc 4 992 0
 3601 0298 7B6A     	 ldr r3,[r7,#36]
 3602 029a C3F30902 	 ubfx r2,r3,#0,#10
 3603 029e FB68     	 ldr r3,[r7,#12]
 3604 02a0 C3F8A820 	 str r2,[r3,#168]
 993:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = (uint32_t)((angletemp >> 10U) & 7U);
 3605              	 .loc 4 993 0
 3606 02a4 7B6A     	 ldr r3,[r7,#36]
 3607 02a6 9B0A     	 lsrs r3,r3,#10
 3608 02a8 03F00702 	 and r2,r3,#7
 3609 02ac FB68     	 ldr r3,[r7,#12]
 3610 02ae C3F8A420 	 str r2,[r3,#164]
 994:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 3611              	 .loc 4 994 0
 3612 02b2 FB68     	 ldr r3,[r7,#12]
 3613 02b4 B3F8C630 	 ldrh r3,[r3,#198]
 3614 02b8 7A89     	 ldrh r2,[r7,#10]
 3615 02ba 9A42     	 cmp r2,r3
 3616 02bc 03D9     	 bls .L93
 995:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 996:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 3617              	 .loc 4 996 0
 3618 02be FB68     	 ldr r3,[r7,#12]
 3619 02c0 B3F8C630 	 ldrh r3,[r3,#198]
 3620 02c4 7B81     	 strh r3,[r7,#10]
 3621              	.L93:
 997:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 998:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((Amplitude* Sinus60_tab[1023U - HandlePtr->sector_angle])>> 15U);
 3622              	 .loc 4 998 0
 3623 02c6 7A89     	 ldrh r2,[r7,#10]
 3624 02c8 FB68     	 ldr r3,[r7,#12]
 3625 02ca D3F8A830 	 ldr r3,[r3,#168]
 3626 02ce C3F57F73 	 rsb r3,r3,#1020
 3627 02d2 0333     	 adds r3,r3,#3
 3628 02d4 4949     	 ldr r1,.L95
 3629 02d6 31F81330 	 ldrh r3,[r1,r3,lsl#1]
 3630 02da 03FB02F3 	 mul r3,r3,r2
 3631 02de DB13     	 asrs r3,r3,#15
 3632 02e0 9AB2     	 uxth r2,r3
 3633 02e2 FB68     	 ldr r3,[r7,#12]
 3634 02e4 A3F8B020 	 strh r2,[r3,#176]
 999:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((HandlePtr->tb * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3635              	 .loc 4 999 0
 3636 02e8 FB68     	 ldr r3,[r7,#12]
 3637 02ea B3F8B030 	 ldrh r3,[r3,#176]
 3638 02ee 1A46     	 mov r2,r3
 3639 02f0 FB68     	 ldr r3,[r7,#12]
 3640 02f2 1B68     	 ldr r3,[r3]
 3641 02f4 B3F84230 	 ldrh r3,[r3,#66]
 3642 02f8 03FB02F3 	 mul r3,r3,r2
 3643 02fc 9B12     	 asrs r3,r3,#10
 3644 02fe 9AB2     	 uxth r2,r3
 3645 0300 FB68     	 ldr r3,[r7,#12]
 3646 0302 A3F8B020 	 strh r2,[r3,#176]
1000:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1001:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((Amplitude* Sinus60_tab[HandlePtr->sector_angle])>> 15U);
 3647              	 .loc 4 1001 0
 3648 0306 7B89     	 ldrh r3,[r7,#10]
 3649 0308 FA68     	 ldr r2,[r7,#12]
 3650 030a D2F8A820 	 ldr r2,[r2,#168]
 3651 030e 3B49     	 ldr r1,.L95
 3652 0310 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3653 0314 02FB03F3 	 mul r3,r2,r3
 3654 0318 DB13     	 asrs r3,r3,#15
 3655 031a 9AB2     	 uxth r2,r3
 3656 031c FB68     	 ldr r3,[r7,#12]
 3657 031e A3F8AE20 	 strh r2,[r3,#174]
1002:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((HandlePtr->ta * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3658              	 .loc 4 1002 0
 3659 0322 FB68     	 ldr r3,[r7,#12]
 3660 0324 B3F8AE30 	 ldrh r3,[r3,#174]
 3661 0328 1A46     	 mov r2,r3
 3662 032a FB68     	 ldr r3,[r7,#12]
 3663 032c 1B68     	 ldr r3,[r3]
 3664 032e B3F84230 	 ldrh r3,[r3,#66]
 3665 0332 03FB02F3 	 mul r3,r3,r2
 3666 0336 9B12     	 asrs r3,r3,#10
 3667 0338 9AB2     	 uxth r2,r3
 3668 033a FB68     	 ldr r3,[r7,#12]
 3669 033c A3F8AE20 	 strh r2,[r3,#174]
1003:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 3670              	 .loc 4 1003 0
 3671 0340 FB68     	 ldr r3,[r7,#12]
 3672 0342 B3F8AE20 	 ldrh r2,[r3,#174]
 3673 0346 FB68     	 ldr r3,[r7,#12]
 3674 0348 B3F8B030 	 ldrh r3,[r3,#176]
 3675 034c 1344     	 add r3,r3,r2
 3676 034e 7B84     	 strh r3,[r7,#34]
1004:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = (uint16_t)(HandlePtr->period - ta_tb);
 3677              	 .loc 4 1004 0
 3678 0350 FB68     	 ldr r3,[r7,#12]
 3679 0352 D3F89C30 	 ldr r3,[r3,#156]
 3680 0356 9AB2     	 uxth r2,r3
 3681 0358 7B8C     	 ldrh r3,[r7,#34]
 3682 035a D31A     	 subs r3,r2,r3
 3683 035c 9AB2     	 uxth r2,r3
 3684 035e FB68     	 ldr r3,[r7,#12]
 3685 0360 A3F8AC20 	 strh r2,[r3,#172]
1005:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1006:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 3686              	 .loc 4 1006 0
 3687 0364 7A8C     	 ldrh r2,[r7,#34]
 3688 0366 FB68     	 ldr r3,[r7,#12]
 3689 0368 D3F89C30 	 ldr r3,[r3,#156]
 3690 036c 9A42     	 cmp r2,r3
 3691 036e 3FD9     	 bls .L92
1007:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1008:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 3692              	 .loc 4 1008 0
 3693 0370 FB68     	 ldr r3,[r7,#12]
 3694 0372 B3F8C830 	 ldrh r3,[r3,#200]
 3695 0376 012B     	 cmp r3,#1
 3696 0378 3AD1     	 bne .L92
1009:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1010:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1011:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
1012:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1013:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Calculate new T1 and T2 of maximum Vref on SVM Hexagon edges,
1014:../Dave/Generated/PWM_SVM/pwm_svm.c ****        * where T0 = 0 (i.e.: T1+T2 = PERIOD_REG). Relative angle θrel kept the same.
1015:../Dave/Generated/PWM_SVM/pwm_svm.c ****        */
1016:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * Sinus60_tab[HandlePtr->sector_angle];
 3697              	 .loc 4 1016 0
 3698 037a FB68     	 ldr r3,[r7,#12]
 3699 037c D3F89C30 	 ldr r3,[r3,#156]
 3700 0380 FA68     	 ldr r2,[r7,#12]
 3701 0382 D2F8A820 	 ldr r2,[r2,#168]
 3702 0386 1D49     	 ldr r1,.L95
 3703 0388 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3704 038c 02FB03F3 	 mul r3,r2,r3
 3705 0390 FB61     	 str r3,[r7,#28]
1017:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = Sinus60_tab[HandlePtr->sector_angle] + Sinus60_tab[1023U - HandlePtr->sector_
 3706              	 .loc 4 1017 0
 3707 0392 FB68     	 ldr r3,[r7,#12]
 3708 0394 D3F8A830 	 ldr r3,[r3,#168]
 3709 0398 184A     	 ldr r2,.L95
 3710 039a 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3711 039e 1946     	 mov r1,r3
 3712 03a0 FB68     	 ldr r3,[r7,#12]
 3713 03a2 D3F8A830 	 ldr r3,[r3,#168]
 3714 03a6 C3F57F73 	 rsb r3,r3,#1020
 3715 03aa 0333     	 adds r3,r3,#3
 3716 03ac 134A     	 ldr r2,.L95
 3717 03ae 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3718 03b2 0B44     	 add r3,r3,r1
 3719 03b4 BB61     	 str r3,[r7,#24]
1018:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1019:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
1020:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
1021:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
1022:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
1023:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
1024:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
1025:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (uint16_t)(Dividend_Sine/Divisor_Sine);
 3720              	 .loc 4 1025 0
 3721 03b6 FA69     	 ldr r2,[r7,#28]
 3722 03b8 BB69     	 ldr r3,[r7,#24]
 3723 03ba B2FBF3F3 	 udiv r3,r2,r3
 3724 03be FB82     	 strh r3,[r7,#22]
1026:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1027:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
1028:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0U;
 3725              	 .loc 4 1028 0
 3726 03c0 FB68     	 ldr r3,[r7,#12]
 3727 03c2 0022     	 movs r2,#0
 3728 03c4 A3F8AC20 	 strh r2,[r3,#172]
1029:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = (uint16_t)HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 3729              	 .loc 4 1029 0
 3730 03c8 FB68     	 ldr r3,[r7,#12]
 3731 03ca D3F89C30 	 ldr r3,[r3,#156]
 3732 03ce 7B84     	 strh r3,[r7,#34]
1030:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1031:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
1032:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
1033:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
1034:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1035:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 3733              	 .loc 4 1035 0
 3734 03d0 FB68     	 ldr r3,[r7,#12]
 3735 03d2 FA8A     	 ldrh r2,[r7,#22]
 3736 03d4 A3F8AE20 	 strh r2,[r3,#174]
1036:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
1037:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = (uint16_t)(HandlePtr->period - HandlePtr->ta);
 3737              	 .loc 4 1037 0
 3738 03d8 FB68     	 ldr r3,[r7,#12]
 3739 03da D3F89C30 	 ldr r3,[r3,#156]
 3740 03de 9AB2     	 uxth r2,r3
 3741 03e0 FB68     	 ldr r3,[r7,#12]
 3742 03e2 B3F8AE30 	 ldrh r3,[r3,#174]
 3743 03e6 D31A     	 subs r3,r2,r3
 3744 03e8 9AB2     	 uxth r2,r3
 3745 03ea FB68     	 ldr r3,[r7,#12]
 3746 03ec A3F8B020 	 strh r2,[r3,#176]
 3747              	.L92:
1038:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1039:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1040:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1041:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3748              	 .loc 4 1041 0
 3749 03f0 2C37     	 adds r7,r7,#44
 3750              	.LCFI155:
 3751              	 .cfi_def_cfa_offset 4
 3752 03f2 BD46     	 mov sp,r7
 3753              	.LCFI156:
 3754              	 .cfi_def_cfa_register 13
 3755              	 
 3756 03f4 5DF8047B 	 ldr r7,[sp],#4
 3757              	.LCFI157:
 3758              	 .cfi_restore 7
 3759              	 .cfi_def_cfa_offset 0
 3760 03f8 7047     	 bx lr
 3761              	.L96:
 3762 03fa 00BF     	 .align 2
 3763              	.L95:
 3764 03fc 00000000 	 .word Sinus60_tab
 3765              	 .cfi_endproc
 3766              	.LFE231:
 3768              	 .section .text.PWM_SVM_GetAppVersion,"ax",%progbits
 3769              	 .align 2
 3770              	 .global PWM_SVM_GetAppVersion
 3771              	 .thumb
 3772              	 .thumb_func
 3774              	PWM_SVM_GetAppVersion:
 3775              	.LFB232:
1042:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1043:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*******************************************************************************
1044:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **                      Public Function Definitions                           **
1045:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *******************************************************************************/
1046:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* App API to retrieve the App version info */
1047:../Dave/Generated/PWM_SVM/pwm_svm.c **** DAVE_APP_VERSION_t PWM_SVM_GetAppVersion(void)
1048:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3776              	 .loc 4 1048 0
 3777              	 .cfi_startproc
 3778              	 
 3779              	 
 3780              	 
 3781 0000 80B4     	 push {r7}
 3782              	.LCFI158:
 3783              	 .cfi_def_cfa_offset 4
 3784              	 .cfi_offset 7,-4
 3785 0002 83B0     	 sub sp,sp,#12
 3786              	.LCFI159:
 3787              	 .cfi_def_cfa_offset 16
 3788 0004 00AF     	 add r7,sp,#0
 3789              	.LCFI160:
 3790              	 .cfi_def_cfa_register 7
1049:../Dave/Generated/PWM_SVM/pwm_svm.c ****   DAVE_APP_VERSION_t version;
1050:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1051:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.major = PWM_SVM_MAJOR_VERSION;
 3791              	 .loc 4 1051 0
 3792 0006 0423     	 movs r3,#4
 3793 0008 3B70     	 strb r3,[r7]
1052:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.minor = PWM_SVM_MINOR_VERSION;
 3794              	 .loc 4 1052 0
 3795 000a 0023     	 movs r3,#0
 3796 000c 7B70     	 strb r3,[r7,#1]
1053:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.patch = PWM_SVM_PATCH_VERSION;
 3797              	 .loc 4 1053 0
 3798 000e 1423     	 movs r3,#20
 3799 0010 BB70     	 strb r3,[r7,#2]
1054:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1055:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return version;
 3800              	 .loc 4 1055 0
 3801 0012 3B1D     	 adds r3,r7,#4
 3802 0014 3A46     	 mov r2,r7
 3803 0016 1268     	 ldr r2,[r2]
 3804 0018 1146     	 mov r1,r2
 3805 001a 1980     	 strh r1,[r3]
 3806 001c 0233     	 adds r3,r3,#2
 3807 001e 120C     	 lsrs r2,r2,#16
 3808 0020 1A70     	 strb r2,[r3]
 3809 0022 0023     	 movs r3,#0
 3810 0024 3A79     	 ldrb r2,[r7,#4]
 3811 0026 62F30703 	 bfi r3,r2,#0,#8
 3812 002a 7A79     	 ldrb r2,[r7,#5]
 3813 002c 62F30F23 	 bfi r3,r2,#8,#8
 3814 0030 BA79     	 ldrb r2,[r7,#6]
 3815 0032 62F31743 	 bfi r3,r2,#16,#8
1056:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3816              	 .loc 4 1056 0
 3817 0036 1846     	 mov r0,r3
 3818 0038 0C37     	 adds r7,r7,#12
 3819              	.LCFI161:
 3820              	 .cfi_def_cfa_offset 4
 3821 003a BD46     	 mov sp,r7
 3822              	.LCFI162:
 3823              	 .cfi_def_cfa_register 13
 3824              	 
 3825 003c 5DF8047B 	 ldr r7,[sp],#4
 3826              	.LCFI163:
 3827              	 .cfi_restore 7
 3828              	 .cfi_def_cfa_offset 0
 3829 0040 7047     	 bx lr
 3830              	 .cfi_endproc
 3831              	.LFE232:
 3833 0042 00BF     	 .section .text.PWM_SVM_Init,"ax",%progbits
 3834              	 .align 2
 3835              	 .global PWM_SVM_Init
 3836              	 .thumb
 3837              	 .thumb_func
 3839              	PWM_SVM_Init:
 3840              	.LFB233:
1057:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1058:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1059:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function initializes the peripherals and SVM structure 
1060:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * required for the SVM algorithm.
1061:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1062:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_Init(PWM_SVM_t* const HandlePtr)
1063:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3841              	 .loc 4 1063 0
 3842              	 .cfi_startproc
 3843              	 
 3844              	 
 3845 0000 80B5     	 push {r7,lr}
 3846              	.LCFI164:
 3847              	 .cfi_def_cfa_offset 8
 3848              	 .cfi_offset 7,-8
 3849              	 .cfi_offset 14,-4
 3850 0002 86B0     	 sub sp,sp,#24
 3851              	.LCFI165:
 3852              	 .cfi_def_cfa_offset 32
 3853 0004 00AF     	 add r7,sp,#0
 3854              	.LCFI166:
 3855              	 .cfi_def_cfa_register 7
 3856 0006 7860     	 str r0,[r7,#4]
1064:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 3857              	 .loc 4 1064 0
 3858 0008 0023     	 movs r3,#0
 3859 000a 7B61     	 str r3,[r7,#20]
1065:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t phase_count = 0U;
 3860              	 .loc 4 1065 0
 3861 000c 0023     	 movs r3,#0
 3862 000e 3B61     	 str r3,[r7,#16]
1066:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = (PWM_SVM_STATUS_t) PWM_SVM_STATUS_SUCCESS;
 3863              	 .loc 4 1066 0
 3864 0010 0023     	 movs r3,#0
 3865 0012 FB73     	 strb r3,[r7,#15]
1067:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 3866              	 .loc 4 1067 0
 3867 0014 7B68     	 ldr r3,[r7,#4]
 3868 0016 1B68     	 ldr r3,[r3]
 3869 0018 BB60     	 str r3,[r7,#8]
1068:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Init:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1069:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_STATE_t) PWM_SVM_UNINITIALIZED == HandlePtr->state)
 3870              	 .loc 4 1069 0
 3871 001a 7B68     	 ldr r3,[r7,#4]
 3872 001c 93F89030 	 ldrb r3,[r3,#144]
 3873 0020 002B     	 cmp r3,#0
 3874 0022 40F03A81 	 bne .L100
1070:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1071:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = (PWM_SVM_STATUS_t) GLOBAL_CCU8_Init(HandlePtr->globalccu8_handle_ptr);
 3875              	 .loc 4 1071 0
 3876 0026 7B68     	 ldr r3,[r7,#4]
 3877 0028 9B6E     	 ldr r3,[r3,#104]
 3878 002a 1846     	 mov r0,r3
 3879 002c FFF7FEFF 	 bl GLOBAL_CCU8_Init
 3880 0030 0346     	 mov r3,r0
 3881 0032 FB73     	 strb r3,[r7,#15]
1072:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for all three phases output*/
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (phase_count = 0U; phase_count < PWM_SVM_PHASE_IO_MAX; phase_count++)
 3882              	 .loc 4 1073 0
 3883 0034 0023     	 movs r3,#0
 3884 0036 3B61     	 str r3,[r7,#16]
 3885 0038 16E0     	 b .L101
 3886              	.L102:
1074:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1075:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->pwmoutpin_ptr[phase_count]->port, HandlePtr->pwmoutpin_ptr[phase_cou
 3887              	 .loc 4 1075 0 discriminator 3
 3888 003a 7B68     	 ldr r3,[r7,#4]
 3889 003c 3A69     	 ldr r2,[r7,#16]
 3890 003e 0832     	 adds r2,r2,#8
 3891 0040 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3892 0044 1868     	 ldr r0,[r3]
 3893 0046 7B68     	 ldr r3,[r7,#4]
 3894 0048 3A69     	 ldr r2,[r7,#16]
 3895 004a 0832     	 adds r2,r2,#8
 3896 004c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3897 0050 1979     	 ldrb r1,[r3,#4]
 3898 0052 7B68     	 ldr r3,[r7,#4]
 3899 0054 3A69     	 ldr r2,[r7,#16]
 3900 0056 0E32     	 adds r2,r2,#14
 3901 0058 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3902 005c 1A46     	 mov r2,r3
 3903 005e FFF7FEFF 	 bl XMC_GPIO_Init
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3904              	 .loc 4 1073 0 discriminator 3
 3905 0062 3B69     	 ldr r3,[r7,#16]
 3906 0064 0133     	 adds r3,r3,#1
 3907 0066 3B61     	 str r3,[r7,#16]
 3908              	.L101:
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3909              	 .loc 4 1073 0 is_stmt 0 discriminator 1
 3910 0068 3B69     	 ldr r3,[r7,#16]
 3911 006a 052B     	 cmp r3,#5
 3912 006c E5D9     	 bls .L102
1076:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->pwmoutconfig_ptr[phase_count]);
1077:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1078:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for trap input*/
1079:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 3913              	 .loc 4 1079 0 is_stmt 1
 3914 006e BB68     	 ldr r3,[r7,#8]
 3915 0070 93F84730 	 ldrb r3,[r3,#71]
 3916 0074 012B     	 cmp r3,#1
 3917 0076 1AD1     	 bne .L103
1080:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1081:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin, HandlePtr->trapincon
 3918              	 .loc 4 1081 0
 3919 0078 7B68     	 ldr r3,[r7,#4]
 3920 007a 1B6D     	 ldr r3,[r3,#80]
 3921 007c 1968     	 ldr r1,[r3]
 3922 007e 7B68     	 ldr r3,[r7,#4]
 3923 0080 1B6D     	 ldr r3,[r3,#80]
 3924 0082 1A79     	 ldrb r2,[r3,#4]
 3925 0084 7B68     	 ldr r3,[r7,#4]
 3926 0086 5B6D     	 ldr r3,[r3,#84]
 3927 0088 0846     	 mov r0,r1
 3928 008a 1146     	 mov r1,r2
 3929 008c 1A46     	 mov r2,r3
 3930 008e FFF7FEFF 	 bl XMC_GPIO_Init
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3931              	 .loc 4 1082 0
 3932 0092 7B68     	 ldr r3,[r7,#4]
 3933 0094 1B6D     	 ldr r3,[r3,#80]
 3934 0096 1968     	 ldr r1,[r3]
 3935 0098 7B68     	 ldr r3,[r7,#4]
 3936 009a 1B6D     	 ldr r3,[r3,#80]
 3937 009c 1A79     	 ldrb r2,[r3,#4]
1083:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->trap_hwsel);
 3938              	 .loc 4 1083 0
 3939 009e 7B68     	 ldr r3,[r7,#4]
 3940 00a0 1B68     	 ldr r3,[r3]
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3941              	 .loc 4 1082 0
 3942 00a2 9B7C     	 ldrb r3,[r3,#18]
 3943 00a4 0846     	 mov r0,r1
 3944 00a6 1146     	 mov r1,r2
 3945 00a8 1A46     	 mov r2,r3
 3946 00aa FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 3947              	.L103:
1084:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1085:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1086:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for inverter enable pin output*/
1087:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (svmptr->inverter_pin > (PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_NOTREQUIRED)
 3948              	 .loc 4 1087 0
 3949 00ae BB68     	 ldr r3,[r7,#8]
 3950 00b0 DB7C     	 ldrb r3,[r3,#19]
 3951 00b2 002B     	 cmp r3,#0
 3952 00b4 0CD0     	 beq .L104
1088:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1089:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin,
 3953              	 .loc 4 1089 0
 3954 00b6 7B68     	 ldr r3,[r7,#4]
 3955 00b8 9B6D     	 ldr r3,[r3,#88]
 3956 00ba 1968     	 ldr r1,[r3]
 3957 00bc 7B68     	 ldr r3,[r7,#4]
 3958 00be 9B6D     	 ldr r3,[r3,#88]
 3959 00c0 1A79     	 ldrb r2,[r3,#4]
 3960 00c2 7B68     	 ldr r3,[r7,#4]
 3961 00c4 DB6D     	 ldr r3,[r3,#92]
 3962 00c6 0846     	 mov r0,r1
 3963 00c8 1146     	 mov r1,r2
 3964 00ca 1A46     	 mov r2,r3
 3965 00cc FFF7FEFF 	 bl XMC_GPIO_Init
 3966              	.L104:
1090:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->inverterpinconfig_ptr);
1091:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1092:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1093:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Inverter Enable pin level is set to passive level.*/
1094:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterDisable(HandlePtr);
 3967              	 .loc 4 1094 0
 3968 00d0 7868     	 ldr r0,[r7,#4]
 3969 00d2 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1095:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1096:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Phase configurations */
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 3970              	 .loc 4 1097 0
 3971 00d6 0023     	 movs r3,#0
 3972 00d8 7B61     	 str r3,[r7,#20]
 3973 00da A4E0     	 b .L105
 3974              	.L107:
1098:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1099:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->phase_configini
 3975              	 .loc 4 1099 0
 3976 00dc 7B68     	 ldr r3,[r7,#4]
 3977 00de 7A69     	 ldr r2,[r7,#20]
 3978 00e0 0232     	 adds r2,r2,#2
 3979 00e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3980 00e6 1A68     	 ldr r2,[r3]
 3981 00e8 7B68     	 ldr r3,[r7,#4]
 3982 00ea 9B69     	 ldr r3,[r3,#24]
 3983 00ec 1046     	 mov r0,r2
 3984 00ee 1946     	 mov r1,r3
 3985 00f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
1100:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1101:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1102:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_DeadTimeInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->deadtimeconfig
 3986              	 .loc 4 1102 0
 3987 00f4 7B68     	 ldr r3,[r7,#4]
 3988 00f6 7A69     	 ldr r2,[r7,#20]
 3989 00f8 0232     	 adds r2,r2,#2
 3990 00fa 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3991 00fe 1A68     	 ldr r2,[r3]
 3992 0100 7B68     	 ldr r3,[r7,#4]
 3993 0102 DB6E     	 ldr r3,[r3,#108]
 3994 0104 1046     	 mov r0,r2
 3995 0106 1946     	 mov r1,r3
 3996 0108 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
1103:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1104:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configure external start to event 0 */
1105:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr,
 3997              	 .loc 4 1105 0
 3998 010c 7B68     	 ldr r3,[r7,#4]
 3999 010e 7A69     	 ldr r2,[r7,#20]
 4000 0110 0232     	 adds r2,r2,#2
 4001 0112 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4002 0116 1A68     	 ldr r2,[r3]
 4003 0118 7B68     	 ldr r3,[r7,#4]
 4004 011a 5B6E     	 ldr r3,[r3,#100]
 4005 011c 1046     	 mov r0,r2
 4006 011e 0121     	 movs r1,#1
 4007 0120 1A46     	 mov r2,r3
 4008 0122 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1106:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0, HandlePtr->startconfig_ptr);
1107:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1108:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1109:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 4009              	 .loc 4 1109 0
 4010 0126 BB68     	 ldr r3,[r7,#8]
 4011 0128 93F84730 	 ldrb r3,[r3,#71]
 4012 012c 012B     	 cmp r3,#1
 4013 012e 21D1     	 bne .L106
1110:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1111:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_EVENT_
 4014              	 .loc 4 1111 0
 4015 0130 7B68     	 ldr r3,[r7,#4]
 4016 0132 7A69     	 ldr r2,[r7,#20]
 4017 0134 0232     	 adds r2,r2,#2
 4018 0136 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4019 013a 1A68     	 ldr r2,[r3]
 4020 013c 7B68     	 ldr r3,[r7,#4]
 4021 013e 1B6E     	 ldr r3,[r3,#96]
 4022 0140 1046     	 mov r0,r2
 4023 0142 0321     	 movs r1,#3
 4024 0144 1A46     	 mov r2,r3
 4025 0146 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1112:../Dave/Generated/PWM_SVM/pwm_svm.c ****             HandlePtr->trapconfig_ptr);
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_TrapConfig(HandlePtr->phase_ptr[count]->slice_ptr, svmptr->trap_exit_mode,
 4026              	 .loc 4 1113 0
 4027 014a 7B68     	 ldr r3,[r7,#4]
 4028 014c 7A69     	 ldr r2,[r7,#20]
 4029 014e 0232     	 adds r2,r2,#2
 4030 0150 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4031 0154 1968     	 ldr r1,[r3]
 4032 0156 BB68     	 ldr r3,[r7,#8]
 4033 0158 5A7C     	 ldrb r2,[r3,#17]
1114:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 4034              	 .loc 4 1114 0
 4035 015a BB68     	 ldr r3,[r7,#8]
 4036 015c 93F84830 	 ldrb r3,[r3,#72]
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 4037              	 .loc 4 1113 0
 4038 0160 002B     	 cmp r3,#0
 4039 0162 14BF     	 ite ne
 4040 0164 0123     	 movne r3,#1
 4041 0166 0023     	 moveq r3,#0
 4042 0168 DBB2     	 uxtb r3,r3
 4043 016a 0846     	 mov r0,r1
 4044 016c 1146     	 mov r1,r2
 4045 016e 1A46     	 mov r2,r3
 4046 0170 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 4047              	.L106:
1115:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1116:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1117:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program period  value of the timer  */
1118:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) HandleP
 4048              	 .loc 4 1118 0 discriminator 2
 4049 0174 7B68     	 ldr r3,[r7,#4]
 4050 0176 7A69     	 ldr r2,[r7,#20]
 4051 0178 0232     	 adds r2,r2,#2
 4052 017a 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4053 017e 1A68     	 ldr r2,[r3]
 4054 0180 7B68     	 ldr r3,[r7,#4]
 4055 0182 D3F89C30 	 ldr r3,[r3,#156]
 4056 0186 9BB2     	 uxth r3,r3
 4057 0188 1046     	 mov r0,r2
 4058 018a 1946     	 mov r1,r3
 4059 018c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1119:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1120:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 4060              	 .loc 4 1120 0 discriminator 2
 4061 0190 7B68     	 ldr r3,[r7,#4]
 4062 0192 7A69     	 ldr r2,[r7,#20]
 4063 0194 0232     	 adds r2,r2,#2
 4064 0196 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4065 019a 1B68     	 ldr r3,[r3]
 4066 019c 1846     	 mov r0,r3
 4067 019e 0021     	 movs r1,#0
 4068 01a0 0022     	 movs r2,#0
 4069 01a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1121:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 0U);
1122:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1123:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 4070              	 .loc 4 1123 0 discriminator 2
 4071 01a6 7B68     	 ldr r3,[r7,#4]
 4072 01a8 7A69     	 ldr r2,[r7,#20]
 4073 01aa 0232     	 adds r2,r2,#2
 4074 01ac 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4075 01b0 1B68     	 ldr r3,[r3]
 4076 01b2 1846     	 mov r0,r3
 4077 01b4 0121     	 movs r1,#1
 4078 01b6 0022     	 movs r2,#0
 4079 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1124:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, 0U);
1125:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configures status ST1, ST2 mapping to STy */
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureStatusBitOutput(HandlePtr->phase_ptr[count]->slice_ptr,
 4080              	 .loc 4 1126 0 discriminator 2
 4081 01bc 7B68     	 ldr r3,[r7,#4]
 4082 01be 7A69     	 ldr r2,[r7,#20]
 4083 01c0 0232     	 adds r2,r2,#2
 4084 01c2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4085 01c6 1968     	 ldr r1,[r3]
1127:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 4086              	 .loc 4 1127 0 discriminator 2
 4087 01c8 7B68     	 ldr r3,[r7,#4]
 4088 01ca 1A68     	 ldr r2,[r3]
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 4089              	 .loc 4 1126 0 discriminator 2
 4090 01cc 7B69     	 ldr r3,[r7,#20]
 4091 01ce 1344     	 add r3,r3,r2
 4092 01d0 0833     	 adds r3,r3,#8
 4093 01d2 1B79     	 ldrb r3,[r3,#4]
 4094 01d4 0846     	 mov r0,r1
 4095 01d6 1946     	 mov r1,r3
 4096 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOutput
1128:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1129:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Bind period match event to an NVIC node  */
1130:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->phase_ptr[count]->slice_ptr->SRS |= svmptr->event_sr_selector[count];
 4097              	 .loc 4 1130 0 discriminator 2
 4098 01dc 7B68     	 ldr r3,[r7,#4]
 4099 01de 7A69     	 ldr r2,[r7,#20]
 4100 01e0 0232     	 adds r2,r2,#2
 4101 01e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4102 01e6 1B68     	 ldr r3,[r3]
 4103 01e8 7A68     	 ldr r2,[r7,#4]
 4104 01ea 7969     	 ldr r1,[r7,#20]
 4105 01ec 0231     	 adds r1,r1,#2
 4106 01ee 52F82120 	 ldr r2,[r2,r1,lsl#2]
 4107 01f2 1268     	 ldr r2,[r2]
 4108 01f4 D2F8A810 	 ldr r1,[r2,#168]
 4109 01f8 BA68     	 ldr r2,[r7,#8]
 4110 01fa 7869     	 ldr r0,[r7,#20]
 4111 01fc 0A30     	 adds r0,r0,#10
 4112 01fe 52F82020 	 ldr r2,[r2,r0,lsl#2]
 4113 0202 0A43     	 orrs r2,r2,r1
 4114 0204 C3F8A820 	 str r2,[r3,#168]
1131:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1132:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* enable module clock by clearing idle bit*/
1133:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableClock(HandlePtr->global_ptr, HandlePtr->phase_ptr[count]->slice_number);
 4115              	 .loc 4 1133 0 discriminator 2
 4116 0208 7B68     	 ldr r3,[r7,#4]
 4117 020a 5968     	 ldr r1,[r3,#4]
 4118 020c 7B68     	 ldr r3,[r7,#4]
 4119 020e 7A69     	 ldr r2,[r7,#20]
 4120 0210 0232     	 adds r2,r2,#2
 4121 0212 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4122 0216 1B79     	 ldrb r3,[r3,#4]
 4123 0218 0846     	 mov r0,r1
 4124 021a 1946     	 mov r1,r3
 4125 021c FFF7FEFF 	 bl XMC_CCU8_EnableClock
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4126              	 .loc 4 1097 0 discriminator 2
 4127 0220 7B69     	 ldr r3,[r7,#20]
 4128 0222 0133     	 adds r3,r3,#1
 4129 0224 7B61     	 str r3,[r7,#20]
 4130              	.L105:
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4131              	 .loc 4 1097 0 is_stmt 0 discriminator 1
 4132 0226 7B69     	 ldr r3,[r7,#20]
 4133 0228 022B     	 cmp r3,#2
 4134 022a 7FF657AF 	 bls .L107
1134:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1135:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1136:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lEnableEvent(HandlePtr);
 4135              	 .loc 4 1136 0 is_stmt 1
 4136 022e 7868     	 ldr r0,[r7,#4]
 4137 0230 FFF7FEFF 	 bl PWM_SVM_lEnableEvent
1137:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1138:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Current trigger slice configurations */
1139:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
1140:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t)PWM_SVM_NONE != svmptr->current_measurement)
 4138              	 .loc 4 1140 0
 4139 0234 BB68     	 ldr r3,[r7,#8]
 4140 0236 1B7C     	 ldrb r3,[r3,#16]
 4141 0238 002B     	 cmp r3,#0
 4142 023a 02D0     	 beq .L108
1141:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1142:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lCurrentTrigSliceInit(HandlePtr);
 4143              	 .loc 4 1142 0
 4144 023c 7868     	 ldr r0,[r7,#4]
 4145 023e FFF7FEFF 	 bl PWM_SVM_lCurrentTrigSliceInit
 4146              	.L108:
1143:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1144:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1145:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1146:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
1147:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Ungate Math coprocessor*/
1148:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MATH);
1149:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1150:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1151:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 4147              	 .loc 4 1151 0
 4148 0242 7B68     	 ldr r3,[r7,#4]
 4149 0244 5A68     	 ldr r2,[r3,#4]
 4150 0246 BB68     	 ldr r3,[r7,#8]
 4151 0248 5B6A     	 ldr r3,[r3,#36]
 4152 024a 1046     	 mov r0,r2
 4153 024c 1946     	 mov r1,r3
 4154 024e FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1152:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1153:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* update dead time variable*/
1154:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_rising_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_rising_edge_counte
 4155              	 .loc 4 1154 0
 4156 0252 7B68     	 ldr r3,[r7,#4]
 4157 0254 DB6E     	 ldr r3,[r3,#108]
 4158 0256 1B79     	 ldrb r3,[r3,#4]
 4159 0258 1A46     	 mov r2,r3
 4160 025a 7B68     	 ldr r3,[r7,#4]
 4161 025c C3F89420 	 str r2,[r3,#148]
1155:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_falling_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_falling_edge_coun
 4162              	 .loc 4 1155 0
 4163 0260 7B68     	 ldr r3,[r7,#4]
 4164 0262 DB6E     	 ldr r3,[r3,#108]
 4165 0264 5B79     	 ldrb r3,[r3,#5]
 4166 0266 1A46     	 mov r2,r3
 4167 0268 7B68     	 ldr r3,[r7,#4]
 4168 026a C3F89820 	 str r2,[r3,#152]
1156:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = (XMC_CCU8_SLICE_DTC_DIV_t) HandlePtr->deadtimeconfig_ptr->div;
 4169              	 .loc 4 1156 0
 4170 026e 7B68     	 ldr r3,[r7,#4]
 4171 0270 DB6E     	 ldr r3,[r3,#108]
 4172 0272 1B78     	 ldrb r3,[r3]
 4173 0274 C3F38113 	 ubfx r3,r3,#6,#2
 4174 0278 DBB2     	 uxtb r3,r3
 4175 027a 1A46     	 mov r2,r3
 4176 027c 7B68     	 ldr r3,[r7,#4]
 4177 027e 83F89120 	 strb r2,[r3,#145]
1157:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1158:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_STATUS_t) PWM_SVM_STATUS_FAILURE != status)
 4178              	 .loc 4 1158 0
 4179 0282 FB7B     	 ldrb r3,[r7,#15]
 4180 0284 012B     	 cmp r3,#1
 4181 0286 06D0     	 beq .L109
1159:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1160:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 4182              	 .loc 4 1160 0
 4183 0288 0023     	 movs r3,#0
 4184 028a FB73     	 strb r3,[r7,#15]
1161:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_INITIALIZED;
 4185              	 .loc 4 1161 0
 4186 028c 7B68     	 ldr r3,[r7,#4]
 4187 028e 0122     	 movs r2,#1
 4188 0290 83F89020 	 strb r2,[r3,#144]
 4189 0294 01E0     	 b .L100
 4190              	.L109:
1162:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1163:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1164:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1165:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_FAILURE;
 4191              	 .loc 4 1165 0
 4192 0296 0123     	 movs r3,#1
 4193 0298 FB73     	 strb r3,[r7,#15]
 4194              	.L100:
1166:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1167:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1168:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1169:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 4195              	 .loc 4 1169 0
 4196 029a FB7B     	 ldrb r3,[r7,#15]
1170:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4197              	 .loc 4 1170 0
 4198 029c 1846     	 mov r0,r3
 4199 029e 1837     	 adds r7,r7,#24
 4200              	.LCFI167:
 4201              	 .cfi_def_cfa_offset 8
 4202 02a0 BD46     	 mov sp,r7
 4203              	.LCFI168:
 4204              	 .cfi_def_cfa_register 13
 4205              	 
 4206 02a2 80BD     	 pop {r7,pc}
 4207              	 .cfi_endproc
 4208              	.LFE233:
 4210              	 .section .text.PWM_SVM_Start,"ax",%progbits
 4211              	 .align 2
 4212              	 .global PWM_SVM_Start
 4213              	 .thumb
 4214              	 .thumb_func
 4216              	PWM_SVM_Start:
 4217              	.LFB234:
1171:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1172:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1173:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function starts the CCU8 slices used to generate SVM.
1174:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1175:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Start(PWM_SVM_t* const HandlePtr)
1176:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4218              	 .loc 4 1176 0
 4219              	 .cfi_startproc
 4220              	 
 4221              	 
 4222 0000 80B5     	 push {r7,lr}
 4223              	.LCFI169:
 4224              	 .cfi_def_cfa_offset 8
 4225              	 .cfi_offset 7,-8
 4226              	 .cfi_offset 14,-4
 4227 0002 84B0     	 sub sp,sp,#16
 4228              	.LCFI170:
 4229              	 .cfi_def_cfa_offset 24
 4230 0004 00AF     	 add r7,sp,#0
 4231              	.LCFI171:
 4232              	 .cfi_def_cfa_register 7
 4233 0006 7860     	 str r0,[r7,#4]
1177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 4234              	 .loc 4 1177 0
 4235 0008 0023     	 movs r3,#0
 4236 000a FB60     	 str r3,[r7,#12]
1178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4237              	 .loc 4 1178 0
 4238 000c 7B68     	 ldr r3,[r7,#4]
 4239 000e 1B68     	 ldr r3,[r3]
 4240 0010 BB60     	 str r3,[r7,#8]
1179:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Start:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1180:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4241              	 .loc 4 1180 0
 4242 0012 7B68     	 ldr r3,[r7,#4]
 4243 0014 93F89030 	 ldrb r3,[r3,#144]
 4244 0018 012B     	 cmp r3,#1
 4245 001a 05D0     	 beq .L112
1181:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4246              	 .loc 4 1181 0
 4247 001c 7B68     	 ldr r3,[r7,#4]
 4248 001e 93F89030 	 ldrb r3,[r3,#144]
 4249 0022 032B     	 cmp r3,#3
 4250 0024 40F03381 	 bne .L111
 4251              	.L112:
1182:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1183:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 4252              	 .loc 4 1183 0
 4253 0028 7B68     	 ldr r3,[r7,#4]
 4254 002a 0022     	 movs r2,#0
 4255 002c A3F8AE20 	 strh r2,[r3,#174]
1184:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 4256              	 .loc 4 1184 0
 4257 0030 7B68     	 ldr r3,[r7,#4]
 4258 0032 0022     	 movs r2,#0
 4259 0034 A3F8B020 	 strh r2,[r3,#176]
1185:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 4260              	 .loc 4 1185 0
 4261 0038 7B68     	 ldr r3,[r7,#4]
 4262 003a 0022     	 movs r2,#0
 4263 003c A3F8B220 	 strh r2,[r3,#178]
1186:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 4264              	 .loc 4 1186 0
 4265 0040 7B68     	 ldr r3,[r7,#4]
 4266 0042 0022     	 movs r2,#0
 4267 0044 A3F8B420 	 strh r2,[r3,#180]
1187:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = 0U;
 4268              	 .loc 4 1187 0
 4269 0048 7B68     	 ldr r3,[r7,#4]
 4270 004a 0022     	 movs r2,#0
 4271 004c A3F8B620 	 strh r2,[r3,#182]
1188:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = 0U;
 4272              	 .loc 4 1188 0
 4273 0050 7B68     	 ldr r3,[r7,#4]
 4274 0052 0022     	 movs r2,#0
 4275 0054 A3F8B820 	 strh r2,[r3,#184]
1189:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta2 = 0U;
 4276              	 .loc 4 1189 0
 4277 0058 7B68     	 ldr r3,[r7,#4]
 4278 005a 0022     	 movs r2,#0
 4279 005c A3F8BA20 	 strh r2,[r3,#186]
1190:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = 0U;
 4280              	 .loc 4 1190 0
 4281 0060 7B68     	 ldr r3,[r7,#4]
 4282 0062 0022     	 movs r2,#0
 4283 0064 A3F8BC20 	 strh r2,[r3,#188]
1191:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->sector = 0U;
 4284              	 .loc 4 1191 0
 4285 0068 7B68     	 ldr r3,[r7,#4]
 4286 006a 0022     	 movs r2,#0
 4287 006c C3F8A420 	 str r2,[r3,#164]
1192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->subsector = 0U;
 4288              	 .loc 4 1192 0
 4289 0070 7B68     	 ldr r3,[r7,#4]
 4290 0072 0022     	 movs r2,#0
 4291 0074 A3F8C020 	 strh r2,[r3,#192]
1193:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1194:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable Inverter*/
1195:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterEnable(HandlePtr);
 4292              	 .loc 4 1195 0
 4293 0078 7868     	 ldr r0,[r7,#4]
 4294 007a FFF7FEFF 	 bl PWM_SVM_InverterEnable
1196:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4295              	 .loc 4 1197 0
 4296 007e 0023     	 movs r3,#0
 4297 0080 FB60     	 str r3,[r7,#12]
 4298 0082 26E0     	 b .L114
 4299              	.L116:
1198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1199:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1200:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1201:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 4300              	 .loc 4 1201 0
 4301 0084 BB68     	 ldr r3,[r7,#8]
 4302 0086 93F84730 	 ldrb r3,[r3,#71]
 4303 008a 012B     	 cmp r3,#1
 4304 008c 13D1     	 bne .L115
1202:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1203:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVE
 4305              	 .loc 4 1203 0
 4306 008e 7B68     	 ldr r3,[r7,#4]
 4307 0090 FA68     	 ldr r2,[r7,#12]
 4308 0092 0232     	 adds r2,r2,#2
 4309 0094 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4310 0098 1B68     	 ldr r3,[r3]
 4311 009a 1846     	 mov r0,r3
 4312 009c 0A21     	 movs r1,#10
 4313 009e FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1204:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRA
 4314              	 .loc 4 1204 0
 4315 00a2 7B68     	 ldr r3,[r7,#4]
 4316 00a4 FA68     	 ldr r2,[r7,#12]
 4317 00a6 0232     	 adds r2,r2,#2
 4318 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4319 00ac 1B68     	 ldr r3,[r3]
 4320 00ae 1846     	 mov r0,r3
 4321 00b0 0B21     	 movs r1,#11
 4322 00b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4323              	.L115:
1205:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1206:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure the Start trigger function*/
1207:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[count]->slice_ptr,
 4324              	 .loc 4 1207 0 discriminator 2
 4325 00b6 7B68     	 ldr r3,[r7,#4]
 4326 00b8 FA68     	 ldr r2,[r7,#12]
 4327 00ba 0232     	 adds r2,r2,#2
 4328 00bc 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4329 00c0 1B68     	 ldr r3,[r3]
 4330 00c2 1846     	 mov r0,r3
 4331 00c4 0121     	 movs r1,#1
 4332 00c6 0122     	 movs r2,#1
 4333 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4334              	 .loc 4 1197 0 discriminator 2
 4335 00cc FB68     	 ldr r3,[r7,#12]
 4336 00ce 0133     	 adds r3,r3,#1
 4337 00d0 FB60     	 str r3,[r7,#12]
 4338              	.L114:
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4339              	 .loc 4 1197 0 is_stmt 0 discriminator 1
 4340 00d2 FB68     	 ldr r3,[r7,#12]
 4341 00d4 022B     	 cmp r3,#2
 4342 00d6 D5D9     	 bls .L116
1208:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0,
1209:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1211:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1212:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 4343              	 .loc 4 1212 0 is_stmt 1
 4344 00d8 BB68     	 ldr r3,[r7,#8]
 4345 00da 93F84730 	 ldrb r3,[r3,#71]
 4346 00de 012B     	 cmp r3,#1
 4347 00e0 29D1     	 bne .L117
1213:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1214:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase u out 0 and 1*/
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4348              	 .loc 4 1215 0
 4349 00e2 7B68     	 ldr r3,[r7,#4]
 4350 00e4 9B68     	 ldr r3,[r3,#8]
 4351 00e6 1A68     	 ldr r2,[r3]
1216:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4352              	 .loc 4 1216 0
 4353 00e8 BB68     	 ldr r3,[r7,#8]
 4354 00ea 1B7D     	 ldrb r3,[r3,#20]
 4355 00ec 1946     	 mov r1,r3
 4356 00ee BB68     	 ldr r3,[r7,#8]
 4357 00f0 1B7D     	 ldrb r3,[r3,#20]
 4358 00f2 5B00     	 lsls r3,r3,#1
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4359              	 .loc 4 1215 0
 4360 00f4 0B43     	 orrs r3,r3,r1
 4361 00f6 1046     	 mov r0,r2
 4362 00f8 1946     	 mov r1,r3
 4363 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1217:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1218:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase v out 0 and 1*/
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4364              	 .loc 4 1219 0
 4365 00fe 7B68     	 ldr r3,[r7,#4]
 4366 0100 DB68     	 ldr r3,[r3,#12]
 4367 0102 1A68     	 ldr r2,[r3]
1220:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4368              	 .loc 4 1220 0
 4369 0104 BB68     	 ldr r3,[r7,#8]
 4370 0106 5B7D     	 ldrb r3,[r3,#21]
 4371 0108 1946     	 mov r1,r3
 4372 010a BB68     	 ldr r3,[r7,#8]
 4373 010c 5B7D     	 ldrb r3,[r3,#21]
 4374 010e 5B00     	 lsls r3,r3,#1
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4375              	 .loc 4 1219 0
 4376 0110 0B43     	 orrs r3,r3,r1
 4377 0112 1046     	 mov r0,r2
 4378 0114 1946     	 mov r1,r3
 4379 0116 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1221:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1222:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase w out 0 and 1*/
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4380              	 .loc 4 1223 0
 4381 011a 7B68     	 ldr r3,[r7,#4]
 4382 011c 1B69     	 ldr r3,[r3,#16]
 4383 011e 1A68     	 ldr r2,[r3]
1224:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4384              	 .loc 4 1224 0
 4385 0120 BB68     	 ldr r3,[r7,#8]
 4386 0122 9B7D     	 ldrb r3,[r3,#22]
 4387 0124 1946     	 mov r1,r3
 4388 0126 BB68     	 ldr r3,[r7,#8]
 4389 0128 9B7D     	 ldrb r3,[r3,#22]
 4390 012a 5B00     	 lsls r3,r3,#1
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4391              	 .loc 4 1223 0
 4392 012c 0B43     	 orrs r3,r3,r1
 4393 012e 1046     	 mov r0,r2
 4394 0130 1946     	 mov r1,r3
 4395 0132 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 4396              	.L117:
1225:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1226:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1227:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*enable module clock by clearing idle bit if any of current measurement is selected */
1228:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4397              	 .loc 4 1228 0
 4398 0136 BB68     	 ldr r3,[r7,#8]
 4399 0138 1B7C     	 ldrb r3,[r3,#16]
 4400 013a 002B     	 cmp r3,#0
 4401 013c 75D0     	 beq .L118
1229:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1230:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4402              	 .loc 4 1230 0
 4403 013e 7B68     	 ldr r3,[r7,#4]
 4404 0140 5B69     	 ldr r3,[r3,#20]
 4405 0142 1B68     	 ldr r3,[r3]
 4406 0144 1846     	 mov r0,r3
 4407 0146 0121     	 movs r1,#1
 4408 0148 0122     	 movs r2,#1
 4409 014a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1231:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1232:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1233:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* offset for current measurement trigger */
1234:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == svmptr->current_measurement)
 4410              	 .loc 4 1234 0
 4411 014e BB68     	 ldr r3,[r7,#8]
 4412 0150 1B7C     	 ldrb r3,[r3,#16]
 4413 0152 012B     	 cmp r3,#1
 4414 0154 33D1     	 bne .L119
1235:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4415              	 .loc 4 1236 0
 4416 0156 7B68     	 ldr r3,[r7,#4]
 4417 0158 9B68     	 ldr r3,[r3,#8]
 4418 015a 1968     	 ldr r1,[r3]
1237:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4419              	 .loc 4 1237 0
 4420 015c 7B68     	 ldr r3,[r7,#4]
 4421 015e B3F8C230 	 ldrh r3,[r3,#194]
 4422 0162 5B08     	 lsrs r3,r3,#1
 4423 0164 9AB2     	 uxth r2,r3
 4424 0166 BB68     	 ldr r3,[r7,#8]
 4425 0168 B3F84030 	 ldrh r3,[r3,#64]
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4426              	 .loc 4 1236 0
 4427 016c 1344     	 add r3,r3,r2
 4428 016e 9BB2     	 uxth r3,r3
 4429 0170 0846     	 mov r0,r1
 4430 0172 1946     	 mov r1,r3
 4431 0174 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4432              	 .loc 4 1238 0
 4433 0178 7B68     	 ldr r3,[r7,#4]
 4434 017a DB68     	 ldr r3,[r3,#12]
 4435 017c 1968     	 ldr r1,[r3]
1239:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4436              	 .loc 4 1239 0
 4437 017e 7B68     	 ldr r3,[r7,#4]
 4438 0180 B3F8C230 	 ldrh r3,[r3,#194]
 4439 0184 5B08     	 lsrs r3,r3,#1
 4440 0186 9AB2     	 uxth r2,r3
 4441 0188 BB68     	 ldr r3,[r7,#8]
 4442 018a B3F84030 	 ldrh r3,[r3,#64]
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4443              	 .loc 4 1238 0
 4444 018e 1344     	 add r3,r3,r2
 4445 0190 9BB2     	 uxth r3,r3
 4446 0192 0846     	 mov r0,r1
 4447 0194 1946     	 mov r1,r3
 4448 0196 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4449              	 .loc 4 1240 0
 4450 019a 7B68     	 ldr r3,[r7,#4]
 4451 019c 1B69     	 ldr r3,[r3,#16]
 4452 019e 1968     	 ldr r1,[r3]
1241:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4453              	 .loc 4 1241 0
 4454 01a0 7B68     	 ldr r3,[r7,#4]
 4455 01a2 B3F8C230 	 ldrh r3,[r3,#194]
 4456 01a6 5B08     	 lsrs r3,r3,#1
 4457 01a8 9AB2     	 uxth r2,r3
 4458 01aa BB68     	 ldr r3,[r7,#8]
 4459 01ac B3F84030 	 ldrh r3,[r3,#64]
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4460              	 .loc 4 1240 0
 4461 01b0 1344     	 add r3,r3,r2
 4462 01b2 9BB2     	 uxth r3,r3
 4463 01b4 0846     	 mov r0,r1
 4464 01b6 1946     	 mov r1,r3
 4465 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4466 01bc 35E0     	 b .L118
 4467              	.L119:
1242:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1243:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1244:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4468              	 .loc 4 1245 0
 4469 01be 7B68     	 ldr r3,[r7,#4]
 4470 01c0 9B68     	 ldr r3,[r3,#8]
 4471 01c2 1968     	 ldr r1,[r3]
1246:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4472              	 .loc 4 1246 0
 4473 01c4 7B68     	 ldr r3,[r7,#4]
 4474 01c6 D3F89430 	 ldr r3,[r3,#148]
 4475 01ca 9BB2     	 uxth r3,r3
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4476              	 .loc 4 1245 0
 4477 01cc DBB2     	 uxtb r3,r3
 4478 01ce 9AB2     	 uxth r2,r3
1247:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4479              	 .loc 4 1247 0
 4480 01d0 BB68     	 ldr r3,[r7,#8]
 4481 01d2 B3F84030 	 ldrh r3,[r3,#64]
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4482              	 .loc 4 1245 0
 4483 01d6 1344     	 add r3,r3,r2
 4484 01d8 9BB2     	 uxth r3,r3
 4485 01da 0846     	 mov r0,r1
 4486 01dc 1946     	 mov r1,r3
 4487 01de FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4488              	 .loc 4 1248 0
 4489 01e2 7B68     	 ldr r3,[r7,#4]
 4490 01e4 DB68     	 ldr r3,[r3,#12]
 4491 01e6 1968     	 ldr r1,[r3]
1249:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4492              	 .loc 4 1249 0
 4493 01e8 7B68     	 ldr r3,[r7,#4]
 4494 01ea D3F89430 	 ldr r3,[r3,#148]
 4495 01ee 9BB2     	 uxth r3,r3
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4496              	 .loc 4 1248 0
 4497 01f0 DBB2     	 uxtb r3,r3
 4498 01f2 9AB2     	 uxth r2,r3
1250:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4499              	 .loc 4 1250 0
 4500 01f4 BB68     	 ldr r3,[r7,#8]
 4501 01f6 B3F84030 	 ldrh r3,[r3,#64]
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4502              	 .loc 4 1248 0
 4503 01fa 1344     	 add r3,r3,r2
 4504 01fc 9BB2     	 uxth r3,r3
 4505 01fe 0846     	 mov r0,r1
 4506 0200 1946     	 mov r1,r3
 4507 0202 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4508              	 .loc 4 1251 0
 4509 0206 7B68     	 ldr r3,[r7,#4]
 4510 0208 1B69     	 ldr r3,[r3,#16]
 4511 020a 1968     	 ldr r1,[r3]
1252:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge ) & (uint16_t) 0xFF)
 4512              	 .loc 4 1252 0
 4513 020c 7B68     	 ldr r3,[r7,#4]
 4514 020e D3F89430 	 ldr r3,[r3,#148]
 4515 0212 9BB2     	 uxth r3,r3
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4516              	 .loc 4 1251 0
 4517 0214 DBB2     	 uxtb r3,r3
 4518 0216 9AB2     	 uxth r2,r3
1253:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4519              	 .loc 4 1253 0
 4520 0218 BB68     	 ldr r3,[r7,#8]
 4521 021a B3F84030 	 ldrh r3,[r3,#64]
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4522              	 .loc 4 1251 0
 4523 021e 1344     	 add r3,r3,r2
 4524 0220 9BB2     	 uxth r3,r3
 4525 0222 0846     	 mov r0,r1
 4526 0224 1946     	 mov r1,r3
 4527 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4528              	.L118:
1254:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1255:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1256:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1257:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* synchronous start of CCU8 slices */
1258:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerHigh((uint32_t)(svmptr->sync_start_mask));
 4529              	 .loc 4 1258 0
 4530 022a BB68     	 ldr r3,[r7,#8]
 4531 022c 1B6A     	 ldr r3,[r3,#32]
 4532 022e 1846     	 mov r0,r3
 4533 0230 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerHigh
1259:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1260:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable the Start trigger function*/
1261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[0]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4534              	 .loc 4 1261 0
 4535 0234 7B68     	 ldr r3,[r7,#4]
 4536 0236 9B68     	 ldr r3,[r3,#8]
 4537 0238 1B68     	 ldr r3,[r3]
 4538 023a 1846     	 mov r0,r3
 4539 023c 0021     	 movs r1,#0
 4540 023e 0122     	 movs r2,#1
 4541 0240 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1262:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[1]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4542              	 .loc 4 1263 0
 4543 0244 7B68     	 ldr r3,[r7,#4]
 4544 0246 DB68     	 ldr r3,[r3,#12]
 4545 0248 1B68     	 ldr r3,[r3]
 4546 024a 1846     	 mov r0,r3
 4547 024c 0021     	 movs r1,#0
 4548 024e 0122     	 movs r2,#1
 4549 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1264:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1265:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[2]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4550              	 .loc 4 1265 0
 4551 0254 7B68     	 ldr r3,[r7,#4]
 4552 0256 1B69     	 ldr r3,[r3,#16]
 4553 0258 1B68     	 ldr r3,[r3]
 4554 025a 1846     	 mov r0,r3
 4555 025c 0021     	 movs r1,#0
 4556 025e 0122     	 movs r2,#1
 4557 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1266:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1267:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4558              	 .loc 4 1267 0
 4559 0264 BB68     	 ldr r3,[r7,#8]
 4560 0266 1B7C     	 ldrb r3,[r3,#16]
 4561 0268 002B     	 cmp r3,#0
 4562 026a 07D0     	 beq .L120
1268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1269:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4563              	 .loc 4 1269 0
 4564 026c 7B68     	 ldr r3,[r7,#4]
 4565 026e 5B69     	 ldr r3,[r3,#20]
 4566 0270 1B68     	 ldr r3,[r3]
 4567 0272 1846     	 mov r0,r3
 4568 0274 0021     	 movs r1,#0
 4569 0276 0122     	 movs r2,#1
 4570 0278 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 4571              	.L120:
1270:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1271:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1272:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1273:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable synchronous start of CCU8 slices */
1274:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerLow((uint32_t)(svmptr->sync_start_mask));
 4572              	 .loc 4 1274 0
 4573 027c BB68     	 ldr r3,[r7,#8]
 4574 027e 1B6A     	 ldr r3,[r3,#32]
 4575 0280 1846     	 mov r0,r3
 4576 0282 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1275:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1276:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* change the state to RUNNING*/
1277:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->state = PWM_SVM_RUNNING;
 4577              	 .loc 4 1277 0
 4578 0286 7B68     	 ldr r3,[r7,#4]
 4579 0288 0222     	 movs r2,#2
 4580 028a 83F89020 	 strb r2,[r3,#144]
 4581              	.L111:
1278:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1279:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4582              	 .loc 4 1279 0
 4583 028e 1037     	 adds r7,r7,#16
 4584              	.LCFI172:
 4585              	 .cfi_def_cfa_offset 8
 4586 0290 BD46     	 mov sp,r7
 4587              	.LCFI173:
 4588              	 .cfi_def_cfa_register 13
 4589              	 
 4590 0292 80BD     	 pop {r7,pc}
 4591              	 .cfi_endproc
 4592              	.LFE234:
 4594              	 .section .text.PWM_SVM_Stop,"ax",%progbits
 4595              	 .align 2
 4596              	 .global PWM_SVM_Stop
 4597              	 .thumb
 4598              	 .thumb_func
 4600              	PWM_SVM_Stop:
 4601              	.LFB235:
1280:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1281:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1282:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function stops the CCU8 slices used to generate SVM.
1283:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1284:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Stop(PWM_SVM_t* const HandlePtr)
1285:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4602              	 .loc 4 1285 0
 4603              	 .cfi_startproc
 4604              	 
 4605              	 
 4606 0000 80B5     	 push {r7,lr}
 4607              	.LCFI174:
 4608              	 .cfi_def_cfa_offset 8
 4609              	 .cfi_offset 7,-8
 4610              	 .cfi_offset 14,-4
 4611 0002 84B0     	 sub sp,sp,#16
 4612              	.LCFI175:
 4613              	 .cfi_def_cfa_offset 24
 4614 0004 00AF     	 add r7,sp,#0
 4615              	.LCFI176:
 4616              	 .cfi_def_cfa_register 7
 4617 0006 7860     	 str r0,[r7,#4]
1286:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1287:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4618              	 .loc 4 1287 0
 4619 0008 7B68     	 ldr r3,[r7,#4]
 4620 000a 1B68     	 ldr r3,[r3]
 4621 000c BB60     	 str r3,[r7,#8]
1288:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Stop:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1289:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin level is set to passive level.*/
1290:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_InverterDisable(HandlePtr);
 4622              	 .loc 4 1290 0
 4623 000e 7868     	 ldr r0,[r7,#4]
 4624 0010 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1291:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1292:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Disable trap */
1293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) 1 == svmptr->enable_trap)
 4625              	 .loc 4 1293 0
 4626 0014 BB68     	 ldr r3,[r7,#8]
 4627 0016 93F84730 	 ldrb r3,[r3,#71]
 4628 001a 012B     	 cmp r3,#1
 4629 001c 3ED1     	 bne .L122
1294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase u out 0 and 1*/
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4630              	 .loc 4 1296 0
 4631 001e 7B68     	 ldr r3,[r7,#4]
 4632 0020 9B68     	 ldr r3,[r3,#8]
 4633 0022 1A68     	 ldr r2,[r3]
1297:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4634              	 .loc 4 1297 0
 4635 0024 BB68     	 ldr r3,[r7,#8]
 4636 0026 1B7D     	 ldrb r3,[r3,#20]
 4637 0028 1946     	 mov r1,r3
 4638 002a BB68     	 ldr r3,[r7,#8]
 4639 002c 1B7D     	 ldrb r3,[r3,#20]
 4640 002e 5B00     	 lsls r3,r3,#1
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4641              	 .loc 4 1296 0
 4642 0030 0B43     	 orrs r3,r3,r1
 4643 0032 1046     	 mov r0,r2
 4644 0034 1946     	 mov r1,r3
 4645 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1298:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1299:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase v out 0 and 1*/
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4646              	 .loc 4 1300 0
 4647 003a 7B68     	 ldr r3,[r7,#4]
 4648 003c DB68     	 ldr r3,[r3,#12]
 4649 003e 1A68     	 ldr r2,[r3]
1301:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4650              	 .loc 4 1301 0
 4651 0040 BB68     	 ldr r3,[r7,#8]
 4652 0042 5B7D     	 ldrb r3,[r3,#21]
 4653 0044 1946     	 mov r1,r3
 4654 0046 BB68     	 ldr r3,[r7,#8]
 4655 0048 5B7D     	 ldrb r3,[r3,#21]
 4656 004a 5B00     	 lsls r3,r3,#1
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4657              	 .loc 4 1300 0
 4658 004c 0B43     	 orrs r3,r3,r1
 4659 004e 1046     	 mov r0,r2
 4660 0050 1946     	 mov r1,r3
 4661 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1302:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1303:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase w out 0 and 1*/
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4662              	 .loc 4 1304 0
 4663 0056 7B68     	 ldr r3,[r7,#4]
 4664 0058 1B69     	 ldr r3,[r3,#16]
 4665 005a 1A68     	 ldr r2,[r3]
1305:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4666              	 .loc 4 1305 0
 4667 005c BB68     	 ldr r3,[r7,#8]
 4668 005e 9B7D     	 ldrb r3,[r3,#22]
 4669 0060 1946     	 mov r1,r3
 4670 0062 BB68     	 ldr r3,[r7,#8]
 4671 0064 9B7D     	 ldrb r3,[r3,#22]
 4672 0066 5B00     	 lsls r3,r3,#1
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4673              	 .loc 4 1304 0
 4674 0068 0B43     	 orrs r3,r3,r1
 4675 006a 1046     	 mov r0,r2
 4676 006c 1946     	 mov r1,r3
 4677 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1306:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1307:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[0]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4678              	 .loc 4 1307 0
 4679 0072 7B68     	 ldr r3,[r7,#4]
 4680 0074 9B68     	 ldr r3,[r3,#8]
 4681 0076 1B68     	 ldr r3,[r3]
 4682 0078 1846     	 mov r0,r3
 4683 007a 0B21     	 movs r1,#11
 4684 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1308:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[1]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4685              	 .loc 4 1308 0
 4686 0080 7B68     	 ldr r3,[r7,#4]
 4687 0082 DB68     	 ldr r3,[r3,#12]
 4688 0084 1B68     	 ldr r3,[r3]
 4689 0086 1846     	 mov r0,r3
 4690 0088 0B21     	 movs r1,#11
 4691 008a FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1309:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[2]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4692              	 .loc 4 1309 0
 4693 008e 7B68     	 ldr r3,[r7,#4]
 4694 0090 1B69     	 ldr r3,[r3,#16]
 4695 0092 1B68     	 ldr r3,[r3]
 4696 0094 1846     	 mov r0,r3
 4697 0096 0B21     	 movs r1,#11
 4698 0098 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4699              	.L122:
1310:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1311:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1312:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* stop all three phases */
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4700              	 .loc 4 1313 0
 4701 009c 0023     	 movs r3,#0
 4702 009e FB60     	 str r3,[r7,#12]
 4703 00a0 0BE0     	 b .L123
 4704              	.L124:
1314:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1315:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[count]->slice_ptr);
 4705              	 .loc 4 1315 0 discriminator 3
 4706 00a2 7B68     	 ldr r3,[r7,#4]
 4707 00a4 FA68     	 ldr r2,[r7,#12]
 4708 00a6 0232     	 adds r2,r2,#2
 4709 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4710 00ac 1B68     	 ldr r3,[r3]
 4711 00ae 1846     	 mov r0,r3
 4712 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4713              	 .loc 4 1313 0 discriminator 3
 4714 00b4 FB68     	 ldr r3,[r7,#12]
 4715 00b6 0133     	 adds r3,r3,#1
 4716 00b8 FB60     	 str r3,[r7,#12]
 4717              	.L123:
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4718              	 .loc 4 1313 0 is_stmt 0 discriminator 1
 4719 00ba FB68     	 ldr r3,[r7,#12]
 4720 00bc 022B     	 cmp r3,#2
 4721 00be F0D9     	 bls .L124
1316:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1317:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4722              	 .loc 4 1317 0 is_stmt 1
 4723 00c0 BB68     	 ldr r3,[r7,#8]
 4724 00c2 1B7C     	 ldrb r3,[r3,#16]
 4725 00c4 002B     	 cmp r3,#0
 4726 00c6 05D0     	 beq .L125
1318:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1319:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[3]->slice_ptr);
 4727              	 .loc 4 1319 0
 4728 00c8 7B68     	 ldr r3,[r7,#4]
 4729 00ca 5B69     	 ldr r3,[r3,#20]
 4730 00cc 1B68     	 ldr r3,[r3]
 4731 00ce 1846     	 mov r0,r3
 4732 00d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 4733              	.L125:
1320:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1321:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1322:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_SCU_SetCcuTriggerLow((uint32_t) svmptr->sync_start_mask);
 4734              	 .loc 4 1322 0
 4735 00d4 BB68     	 ldr r3,[r7,#8]
 4736 00d6 1B6A     	 ldr r3,[r3,#32]
 4737 00d8 1846     	 mov r0,r3
 4738 00da FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1323:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_STOPPED;
 4739              	 .loc 4 1323 0
 4740 00de 7B68     	 ldr r3,[r7,#4]
 4741 00e0 0322     	 movs r2,#3
 4742 00e2 83F89020 	 strb r2,[r3,#144]
1324:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1325:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4743              	 .loc 4 1325 0
 4744 00e6 1037     	 adds r7,r7,#16
 4745              	.LCFI177:
 4746              	 .cfi_def_cfa_offset 8
 4747 00e8 BD46     	 mov sp,r7
 4748              	.LCFI178:
 4749              	 .cfi_def_cfa_register 13
 4750              	 
 4751 00ea 80BD     	 pop {r7,pc}
 4752              	 .cfi_endproc
 4753              	.LFE235:
 4755              	 .section .ram_code
 4756              	 .align 2
 4757              	 .global PWM_SVM_SVMUpdate
 4758              	 .thumb
 4759              	 .thumb_func
 4761              	PWM_SVM_SVMUpdate:
 4762              	.LFB236:
1326:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1327:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1328:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the SVM algorithm for sinusoidal commutation.
1329:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It updates the compare registers of the CCU8 slices as per calculated
1330:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * duty cycle.
1331:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1332:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_SVMUpdate(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
1333:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4763              	 .loc 4 1333 0
 4764              	 .cfi_startproc
 4765              	 
 4766              	 
 4767 0400 80B5     	 push {r7,lr}
 4768              	.LCFI179:
 4769              	 .cfi_def_cfa_offset 8
 4770              	 .cfi_offset 7,-8
 4771              	 .cfi_offset 14,-4
 4772 0402 86B0     	 sub sp,sp,#24
 4773              	.LCFI180:
 4774              	 .cfi_def_cfa_offset 32
 4775 0404 00AF     	 add r7,sp,#0
 4776              	.LCFI181:
 4777              	 .cfi_def_cfa_register 7
 4778 0406 F860     	 str r0,[r7,#12]
 4779 0408 0B46     	 mov r3,r1
 4780 040a 7A60     	 str r2,[r7,#4]
 4781 040c 7B81     	 strh r3,[r7,#10]
1334:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4782              	 .loc 4 1334 0
 4783 040e FB68     	 ldr r3,[r7,#12]
 4784 0410 1B68     	 ldr r3,[r3]
 4785 0412 7B61     	 str r3,[r7,#20]
1335:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SVMUpdate:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1336:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1337:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates segment time ta, tb using CORDIC or LUT as per UI configuration */
1338:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->seg_time_calc_ptr(HandlePtr, (uint16_t) Amplitude, (uint32_t) Angle);
 4786              	 .loc 4 1338 0
 4787 0414 FB68     	 ldr r3,[r7,#12]
 4788 0416 D3F88C30 	 ldr r3,[r3,#140]
 4789 041a 7A89     	 ldrh r2,[r7,#10]
 4790 041c F868     	 ldr r0,[r7,#12]
 4791 041e 1146     	 mov r1,r2
 4792 0420 7A68     	 ldr r2,[r7,#4]
 4793 0422 9847     	 blx r3
1339:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates and updates compare values in compare register*/
1340:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->svm_schemesel_ptr(HandlePtr);
 4794              	 .loc 4 1340 0
 4795 0424 FB68     	 ldr r3,[r7,#12]
 4796 0426 D3F88830 	 ldr r3,[r3,#136]
 4797 042a F868     	 ldr r0,[r7,#12]
 4798 042c 9847     	 blx r3
1341:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1342:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the shadow transfer for all three slice*/
1343:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->global_ptr->GCSS |= svmptr->shadow_transfer_mask;
 4799              	 .loc 4 1343 0
 4800 042e FB68     	 ldr r3,[r7,#12]
 4801 0430 5B68     	 ldr r3,[r3,#4]
 4802 0432 FA68     	 ldr r2,[r7,#12]
 4803 0434 5268     	 ldr r2,[r2,#4]
 4804 0436 1169     	 ldr r1,[r2,#16]
 4805 0438 7A69     	 ldr r2,[r7,#20]
 4806 043a 526A     	 ldr r2,[r2,#36]
 4807 043c 0A43     	 orrs r2,r2,r1
 4808 043e 1A61     	 str r2,[r3,#16]
1344:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4809              	 .loc 4 1344 0
 4810 0440 1837     	 adds r7,r7,#24
 4811              	.LCFI182:
 4812              	 .cfi_def_cfa_offset 8
 4813 0442 BD46     	 mov sp,r7
 4814              	.LCFI183:
 4815              	 .cfi_def_cfa_register 13
 4816              	 
 4817 0444 80BD     	 pop {r7,pc}
 4818              	 .cfi_endproc
 4819              	.LFE236:
 4821 0446 00BF     	 .section .text.PWM_SVM_SetPWMFrequency,"ax",%progbits
 4822              	 .align 2
 4823              	 .global PWM_SVM_SetPWMFrequency
 4824              	 .thumb
 4825              	 .thumb_func
 4827              	PWM_SVM_SetPWMFrequency:
 4828              	.LFB237:
1345:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1346:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1347:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the PWM Frequency in terms of hertz*/
1348:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetPWMFrequency(PWM_SVM_t* const HandlePtr, uint32_t Frequency)
1349:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4829              	 .loc 4 1349 0
 4830              	 .cfi_startproc
 4831              	 
 4832              	 
 4833 0000 80B5     	 push {r7,lr}
 4834              	.LCFI184:
 4835              	 .cfi_def_cfa_offset 8
 4836              	 .cfi_offset 7,-8
 4837              	 .cfi_offset 14,-4
 4838 0002 88B0     	 sub sp,sp,#32
 4839              	.LCFI185:
 4840              	 .cfi_def_cfa_offset 40
 4841 0004 00AF     	 add r7,sp,#0
 4842              	.LCFI186:
 4843              	 .cfi_def_cfa_register 7
 4844 0006 7860     	 str r0,[r7,#4]
 4845 0008 3960     	 str r1,[r7]
1350:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t pwm_time;
1351:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t period;
1352:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1353:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t max_amplitude_count;
1354:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_FAILURE;
 4846              	 .loc 4 1354 0
 4847 000a 0123     	 movs r3,#1
 4848 000c FB74     	 strb r3,[r7,#19]
1355:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4849              	 .loc 4 1355 0
 4850 000e 7B68     	 ldr r3,[r7,#4]
 4851 0010 1B68     	 ldr r3,[r3]
 4852 0012 FB60     	 str r3,[r7,#12]
1356:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1358:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4853              	 .loc 4 1358 0
 4854 0014 7B68     	 ldr r3,[r7,#4]
 4855 0016 93F89030 	 ldrb r3,[r3,#144]
 4856 001a 012B     	 cmp r3,#1
 4857 001c 04D0     	 beq .L128
1359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4858              	 .loc 4 1359 0
 4859 001e 7B68     	 ldr r3,[r7,#4]
 4860 0020 93F89030 	 ldrb r3,[r3,#144]
 4861 0024 032B     	 cmp r3,#3
 4862 0026 7ED1     	 bne .L129
 4863              	.L128:
1360:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1361:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((Frequency > HandlePtr->confighandle_ptr->period_min) && (Frequency <= HandlePtr->confighan
 4864              	 .loc 4 1361 0
 4865 0028 7B68     	 ldr r3,[r7,#4]
 4866 002a 1B68     	 ldr r3,[r3]
 4867 002c DA6B     	 ldr r2,[r3,#60]
 4868 002e 3B68     	 ldr r3,[r7]
 4869 0030 9A42     	 cmp r2,r3
 4870 0032 76D2     	 bcs .L130
 4871              	 .loc 4 1361 0 is_stmt 0 discriminator 1
 4872 0034 7B68     	 ldr r3,[r7,#4]
 4873 0036 1B68     	 ldr r3,[r3]
 4874 0038 9A6B     	 ldr r2,[r3,#56]
 4875 003a 3B68     	 ldr r3,[r7]
 4876 003c 9A42     	 cmp r2,r3
 4877 003e 70D3     	 bcc .L130
1362:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       pwm_time = (uint32_t)((svmptr->module_freq) / Frequency);
 4878              	 .loc 4 1363 0 is_stmt 1
 4879 0040 FB68     	 ldr r3,[r7,#12]
 4880 0042 DA69     	 ldr r2,[r3,#28]
 4881 0044 3B68     	 ldr r3,[r7]
 4882 0046 B2FBF3F3 	 udiv r3,r2,r3
 4883 004a BB60     	 str r3,[r7,#8]
1364:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_m
 4884              	 .loc 4 1365 0
 4885 004c 7B68     	 ldr r3,[r7,#4]
 4886 004e 9B69     	 ldr r3,[r3,#24]
 4887 0050 1B78     	 ldrb r3,[r3]
 4888 0052 03F00103 	 and r3,r3,#1
 4889 0056 DBB2     	 uxtb r3,r3
 4890 0058 002B     	 cmp r3,#0
 4891 005a 03D1     	 bne .L131
1366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1367:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)(pwm_time - 1U);
 4892              	 .loc 4 1367 0
 4893 005c BB68     	 ldr r3,[r7,#8]
 4894 005e 013B     	 subs r3,r3,#1
 4895 0060 FB61     	 str r3,[r7,#28]
 4896 0062 03E0     	 b .L132
 4897              	.L131:
1368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else /*CENTER_ALIGNED - hence half of the calculated period value is used*/
1370:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1371:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)((pwm_time >> 1U) - 1U);
 4898              	 .loc 4 1371 0
 4899 0064 BB68     	 ldr r3,[r7,#8]
 4900 0066 5B08     	 lsrs r3,r3,#1
 4901 0068 013B     	 subs r3,r3,#1
 4902 006a FB61     	 str r3,[r7,#28]
 4903              	.L132:
1372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*set max amplitude for pseudo null vector based on scheme*/
1374:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config)
 4904              	 .loc 4 1374 0
 4905 006c 7B68     	 ldr r3,[r7,#4]
 4906 006e 93F89230 	 ldrb r3,[r3,#146]
 4907 0072 042B     	 cmp r3,#4
 4908 0074 0AD1     	 bne .L133
1375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1376:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 
 4909              	 .loc 4 1376 0
 4910 0076 7B68     	 ldr r3,[r7,#4]
 4911 0078 B3F8C430 	 ldrh r3,[r3,#196]
 4912 007c 1A46     	 mov r2,r3
 4913 007e 1346     	 mov r3,r2
 4914 0080 5B00     	 lsls r3,r3,#1
 4915 0082 1344     	 add r3,r3,r2
 4916 0084 C3F58043 	 rsb r3,r3,#16384
 4917 0088 7B61     	 str r3,[r7,#20]
 4918 008a 13E0     	 b .L134
 4919              	.L133:
1377:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config)
 4920              	 .loc 4 1378 0
 4921 008c 7B68     	 ldr r3,[r7,#4]
 4922 008e 93F89230 	 ldrb r3,[r3,#146]
 4923 0092 052B     	 cmp r3,#5
 4924 0094 0BD1     	 bne .L135
1379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1380:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 
 4925              	 .loc 4 1380 0
 4926 0096 7B68     	 ldr r3,[r7,#4]
 4927 0098 B3F8C430 	 ldrh r3,[r3,#196]
 4928 009c 1A46     	 mov r2,r3
 4929 009e 1346     	 mov r3,r2
 4930 00a0 9B07     	 lsls r3,r3,#30
 4931 00a2 9B1A     	 subs r3,r3,r2
 4932 00a4 9B00     	 lsls r3,r3,#2
 4933 00a6 03F58043 	 add r3,r3,#16384
 4934 00aa 7B61     	 str r3,[r7,#20]
 4935 00ac 02E0     	 b .L134
 4936              	.L135:
1381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1384:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t) PWM_SVM_MAX_AMPLITUDE;
 4937              	 .loc 4 1384 0
 4938 00ae 4FF48043 	 mov r3,#16384
 4939 00b2 7B61     	 str r3,[r7,#20]
 4940              	.L134:
1385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*update the calcualted period value in period register*/
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4941              	 .loc 4 1387 0
 4942 00b4 0023     	 movs r3,#0
 4943 00b6 BB61     	 str r3,[r7,#24]
 4944 00b8 0EE0     	 b .L136
 4945              	.L137:
1388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1389:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) perio
 4946              	 .loc 4 1389 0 discriminator 3
 4947 00ba 7B68     	 ldr r3,[r7,#4]
 4948 00bc BA69     	 ldr r2,[r7,#24]
 4949 00be 0232     	 adds r2,r2,#2
 4950 00c0 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4951 00c4 1A68     	 ldr r2,[r3]
 4952 00c6 FB69     	 ldr r3,[r7,#28]
 4953 00c8 9BB2     	 uxth r3,r3
 4954 00ca 1046     	 mov r0,r2
 4955 00cc 1946     	 mov r1,r3
 4956 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4957              	 .loc 4 1387 0 discriminator 3
 4958 00d2 BB69     	 ldr r3,[r7,#24]
 4959 00d4 0133     	 adds r3,r3,#1
 4960 00d6 BB61     	 str r3,[r7,#24]
 4961              	.L136:
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4962              	 .loc 4 1387 0 is_stmt 0 discriminator 1
 4963 00d8 BB69     	 ldr r3,[r7,#24]
 4964 00da 022B     	 cmp r3,#2
 4965 00dc EDD9     	 bls .L137
1390:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 4966              	 .loc 4 1391 0 is_stmt 1
 4967 00de 7B68     	 ldr r3,[r7,#4]
 4968 00e0 1B68     	 ldr r3,[r3]
 4969 00e2 1B7C     	 ldrb r3,[r3,#16]
 4970 00e4 002B     	 cmp r3,#0
 4971 00e6 08D0     	 beq .L138
1392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1393:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) period);
 4972              	 .loc 4 1393 0
 4973 00e8 7B68     	 ldr r3,[r7,#4]
 4974 00ea 5B69     	 ldr r3,[r3,#20]
 4975 00ec 1A68     	 ldr r2,[r3]
 4976 00ee FB69     	 ldr r3,[r7,#28]
 4977 00f0 9BB2     	 uxth r3,r3
 4978 00f2 1046     	 mov r0,r2
 4979 00f4 1946     	 mov r1,r3
 4980 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 4981              	.L138:
1394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1395:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1396:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Enable the shadow transfer for all three slice*/
1397:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 4982              	 .loc 4 1397 0
 4983 00fa 7B68     	 ldr r3,[r7,#4]
 4984 00fc 5A68     	 ldr r2,[r3,#4]
 4985 00fe FB68     	 ldr r3,[r7,#12]
 4986 0100 5B6A     	 ldr r3,[r3,#36]
 4987 0102 1046     	 mov r0,r2
 4988 0104 1946     	 mov r1,r3
 4989 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1398:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* update dynamic handle parameters */
1399:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->period = (uint32_t) period;
 4990              	 .loc 4 1399 0
 4991 010a 7B68     	 ldr r3,[r7,#4]
 4992 010c FA69     	 ldr r2,[r7,#28]
 4993 010e C3F89C20 	 str r2,[r3,#156]
1400:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->max_amplitude = (uint16_t) max_amplitude_count;
 4994              	 .loc 4 1400 0
 4995 0112 7B69     	 ldr r3,[r7,#20]
 4996 0114 9AB2     	 uxth r2,r3
 4997 0116 7B68     	 ldr r3,[r7,#4]
 4998 0118 A3F8C620 	 strh r2,[r3,#198]
1401:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 4999              	 .loc 4 1401 0
 5000 011c 0023     	 movs r3,#0
 5001 011e FB74     	 strb r3,[r7,#19]
 5002 0120 01E0     	 b .L129
 5003              	.L130:
1402:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1403:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1404:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1405:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_INVALID_PARAM;
 5004              	 .loc 4 1405 0
 5005 0122 0223     	 movs r3,#2
 5006 0124 FB74     	 strb r3,[r7,#19]
 5007              	.L129:
1406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 5008              	 .loc 4 1408 0
 5009 0126 FB7C     	 ldrb r3,[r7,#19]
1409:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5010              	 .loc 4 1409 0
 5011 0128 1846     	 mov r0,r3
 5012 012a 2037     	 adds r7,r7,#32
 5013              	.LCFI187:
 5014              	 .cfi_def_cfa_offset 8
 5015 012c BD46     	 mov sp,r7
 5016              	.LCFI188:
 5017              	 .cfi_def_cfa_register 13
 5018              	 
 5019 012e 80BD     	 pop {r7,pc}
 5020              	 .cfi_endproc
 5021              	.LFE237:
 5023              	 .section .text.PWM_SVM_GetPWMFrequency,"ax",%progbits
 5024              	 .align 2
 5025              	 .global PWM_SVM_GetPWMFrequency
 5026              	 .thumb
 5027              	 .thumb_func
 5029              	PWM_SVM_GetPWMFrequency:
 5030              	.LFB238:
1410:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1411:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the PWM Frequency in terms of hertz*/
1412:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetPWMFrequency(PWM_SVM_t* const HandlePtr)
1413:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5031              	 .loc 4 1413 0
 5032              	 .cfi_startproc
 5033              	 
 5034              	 
 5035              	 
 5036 0000 80B4     	 push {r7}
 5037              	.LCFI189:
 5038              	 .cfi_def_cfa_offset 4
 5039              	 .cfi_offset 7,-4
 5040 0002 85B0     	 sub sp,sp,#20
 5041              	.LCFI190:
 5042              	 .cfi_def_cfa_offset 24
 5043 0004 00AF     	 add r7,sp,#0
 5044              	.LCFI191:
 5045              	 .cfi_def_cfa_register 7
 5046 0006 7860     	 str r0,[r7,#4]
1414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t frequency;
1415:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 5047              	 .loc 4 1415 0
 5048 0008 7B68     	 ldr r3,[r7,#4]
 5049 000a 1B68     	 ldr r3,[r3]
 5050 000c BB60     	 str r3,[r7,#8]
1416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1417:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1418:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate the frequency based on timer mode*/
1419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_mode)
 5051              	 .loc 4 1419 0
 5052 000e 7B68     	 ldr r3,[r7,#4]
 5053 0010 9B69     	 ldr r3,[r3,#24]
 5054 0012 1B78     	 ldrb r3,[r3]
 5055 0014 03F00103 	 and r3,r3,#1
 5056 0018 DBB2     	 uxtb r3,r3
 5057 001a 002B     	 cmp r3,#0
 5058 001c 09D1     	 bne .L141
1420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / ((uint32_t) HandlePtr->period + 1U));
 5059              	 .loc 4 1421 0
 5060 001e BB68     	 ldr r3,[r7,#8]
 5061 0020 DA69     	 ldr r2,[r3,#28]
 5062 0022 7B68     	 ldr r3,[r7,#4]
 5063 0024 D3F89C30 	 ldr r3,[r3,#156]
 5064 0028 0133     	 adds r3,r3,#1
 5065 002a B2FBF3F3 	 udiv r3,r2,r3
 5066 002e FB60     	 str r3,[r7,#12]
 5067 0030 09E0     	 b .L142
 5068              	.L141:
1422:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1424:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1425:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / (((uint32_t) HandlePtr->period + 1U) <<
 5069              	 .loc 4 1425 0
 5070 0032 BB68     	 ldr r3,[r7,#8]
 5071 0034 DA69     	 ldr r2,[r3,#28]
 5072 0036 7B68     	 ldr r3,[r7,#4]
 5073 0038 D3F89C30 	 ldr r3,[r3,#156]
 5074 003c 0133     	 adds r3,r3,#1
 5075 003e 5B00     	 lsls r3,r3,#1
 5076 0040 B2FBF3F3 	 udiv r3,r2,r3
 5077 0044 FB60     	 str r3,[r7,#12]
 5078              	.L142:
1426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1427:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*return the calculated frequency*/
1428:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (frequency);
 5079              	 .loc 4 1428 0
 5080 0046 FB68     	 ldr r3,[r7,#12]
1429:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5081              	 .loc 4 1429 0
 5082 0048 1846     	 mov r0,r3
 5083 004a 1437     	 adds r7,r7,#20
 5084              	.LCFI192:
 5085              	 .cfi_def_cfa_offset 4
 5086 004c BD46     	 mov sp,r7
 5087              	.LCFI193:
 5088              	 .cfi_def_cfa_register 13
 5089              	 
 5090 004e 5DF8047B 	 ldr r7,[sp],#4
 5091              	.LCFI194:
 5092              	 .cfi_restore 7
 5093              	 .cfi_def_cfa_offset 0
 5094 0052 7047     	 bx lr
 5095              	 .cfi_endproc
 5096              	.LFE238:
 5098              	 .section .text.PWM_SVM_SetDeadTime,"ax",%progbits
 5099              	 .align 2
 5100              	 .global PWM_SVM_SetDeadTime
 5101              	 .thumb
 5102              	 .thumb_func
 5104              	PWM_SVM_SetDeadTime:
 5105              	.LFB239:
1430:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1431:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the ccu8 pwm phase deadtime dynamically*/
1432:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the dead time value in terms of nano seconds*/
1433:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetDeadTime(PWM_SVM_t* const HandlePtr, uint32_t DeadTimeRisingEdge,
1434:../Dave/Generated/PWM_SVM/pwm_svm.c ****                                      uint32_t DeadTimeFallingEdge)
1435:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5106              	 .loc 4 1435 0
 5107              	 .cfi_startproc
 5108              	 
 5109              	 
 5110 0000 80B5     	 push {r7,lr}
 5111              	.LCFI195:
 5112              	 .cfi_def_cfa_offset 8
 5113              	 .cfi_offset 7,-8
 5114              	 .cfi_offset 14,-4
 5115 0002 8AB0     	 sub sp,sp,#40
 5116              	.LCFI196:
 5117              	 .cfi_def_cfa_offset 48
 5118 0004 00AF     	 add r7,sp,#0
 5119              	.LCFI197:
 5120              	 .cfi_def_cfa_register 7
 5121 0006 F860     	 str r0,[r7,#12]
 5122 0008 B960     	 str r1,[r7,#8]
 5123 000a 7A60     	 str r2,[r7,#4]
1436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_count;
1437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1438:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_max;
1439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5124              	 .loc 4 1439 0
 5125 000c 0023     	 movs r3,#0
 5126 000e FB76     	 strb r3,[r7,#27]
1440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_DTC_DIV_t prescaler = HandlePtr->deadtime_div;
 5127              	 .loc 4 1440 0
 5128 0010 FB68     	 ldr r3,[r7,#12]
 5129 0012 93F89130 	 ldrb r3,[r3,#145]
 5130 0016 BB76     	 strb r3,[r7,#26]
1441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 5131              	 .loc 4 1441 0
 5132 0018 FB68     	 ldr r3,[r7,#12]
 5133 001a 1B68     	 ldr r3,[r3]
 5134 001c 3B61     	 str r3,[r7,#16]
1442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV)
 5135              	 .loc 4 1442 0
 5136 001e 3B69     	 ldr r3,[r7,#16]
 5137 0020 DA69     	 ldr r2,[r3,#28]
 5138 0022 BB7E     	 ldrb r3,[r7,#26]
 5139 0024 22FA03F3 	 lsr r3,r2,r3
 5140 0028 484A     	 ldr r2,.L157
 5141 002a A2FB0323 	 umull r2,r3,r2,r3
 5142 002e 9B09     	 lsrs r3,r3,#6
 5143 0030 7B61     	 str r3,[r7,#20]
1443:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Check for maximum dead time */
1445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 5144              	 .loc 4 1445 0
 5145 0032 BA68     	 ldr r2,[r7,#8]
 5146 0034 7B68     	 ldr r3,[r7,#4]
 5147 0036 9A42     	 cmp r2,r3
 5148 0038 02D9     	 bls .L145
1446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1447:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeRisingEdge;
 5149              	 .loc 4 1447 0
 5150 003a BB68     	 ldr r3,[r7,#8]
 5151 003c FB61     	 str r3,[r7,#28]
 5152 003e 01E0     	 b .L146
 5153              	.L145:
1448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1450:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeFallingEdge;
 5154              	 .loc 4 1451 0
 5155 0040 7B68     	 ldr r3,[r7,#4]
 5156 0042 FB61     	 str r3,[r7,#28]
 5157              	.L146:
1452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1453:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((deadtime_max > PWM_SVM_DEADTIME_LOWERLIMIT) && (deadtime_max <= PWM_SVM_DEADTIME_UPPERLIMIT)
 5158              	 .loc 4 1453 0
 5159 0044 FB69     	 ldr r3,[r7,#28]
 5160 0046 322B     	 cmp r3,#50
 5161 0048 79D9     	 bls .L147
 5162              	 .loc 4 1453 0 is_stmt 0 discriminator 1
 5163 004a FB69     	 ldr r3,[r7,#28]
 5164 004c 41F28832 	 movw r2,#5000
 5165 0050 9342     	 cmp r3,r2
 5166 0052 74D8     	 bhi .L147
1454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1455:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 5167              	 .loc 4 1455 0 is_stmt 1
 5168 0054 FB69     	 ldr r3,[r7,#28]
 5169 0056 7A69     	 ldr r2,[r7,#20]
 5170 0058 02FB03F3 	 mul r3,r2,r3
 5171 005c 3C4A     	 ldr r2,.L157+4
 5172 005e A2FB0323 	 umull r2,r3,r2,r3
 5173 0062 9B0C     	 lsrs r3,r3,#18
 5174 0064 7B62     	 str r3,[r7,#36]
1456:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     while ((deadtime_count > PWM_SVM_DEADTIME_REG_MAX) && ((uint32_t) prescaler <= PWM_SVM_DEADTIME
 5175              	 .loc 4 1457 0
 5176 0066 15E0     	 b .L148
 5177              	.L150:
1458:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1459:../Dave/Generated/PWM_SVM/pwm_svm.c ****       prescaler++;
 5178              	 .loc 4 1459 0
 5179 0068 BB7E     	 ldrb r3,[r7,#26]
 5180 006a 0133     	 adds r3,r3,#1
 5181 006c BB76     	 strb r3,[r7,#26]
1460:../Dave/Generated/PWM_SVM/pwm_svm.c ****       dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV);
 5182              	 .loc 4 1460 0
 5183 006e 3B69     	 ldr r3,[r7,#16]
 5184 0070 DA69     	 ldr r2,[r3,#28]
 5185 0072 BB7E     	 ldrb r3,[r7,#26]
 5186 0074 22FA03F3 	 lsr r3,r2,r3
 5187 0078 344A     	 ldr r2,.L157
 5188 007a A2FB0323 	 umull r2,r3,r2,r3
 5189 007e 9B09     	 lsrs r3,r3,#6
 5190 0080 7B61     	 str r3,[r7,#20]
1461:../Dave/Generated/PWM_SVM/pwm_svm.c ****       deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 5191              	 .loc 4 1461 0
 5192 0082 FB69     	 ldr r3,[r7,#28]
 5193 0084 7A69     	 ldr r2,[r7,#20]
 5194 0086 02FB03F3 	 mul r3,r2,r3
 5195 008a 314A     	 ldr r2,.L157+4
 5196 008c A2FB0323 	 umull r2,r3,r2,r3
 5197 0090 9B0C     	 lsrs r3,r3,#18
 5198 0092 7B62     	 str r3,[r7,#36]
 5199              	.L148:
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5200              	 .loc 4 1457 0
 5201 0094 7B6A     	 ldr r3,[r7,#36]
 5202 0096 FF2B     	 cmp r3,#255
 5203 0098 02D9     	 bls .L149
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5204              	 .loc 4 1457 0 is_stmt 0 discriminator 1
 5205 009a BB7E     	 ldrb r3,[r7,#26]
 5206 009c 032B     	 cmp r3,#3
 5207 009e E3D9     	 bls .L150
 5208              	.L149:
1462:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1463:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1464:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 5209              	 .loc 4 1464 0 is_stmt 1
 5210 00a0 BA68     	 ldr r2,[r7,#8]
 5211 00a2 7B68     	 ldr r3,[r7,#4]
 5212 00a4 9A42     	 cmp r2,r3
 5213 00a6 0FD9     	 bls .L151
1465:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1466:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = deadtime_count;
 5214              	 .loc 4 1466 0
 5215 00a8 FB68     	 ldr r3,[r7,#12]
 5216 00aa 7A6A     	 ldr r2,[r7,#36]
 5217 00ac C3F89420 	 str r2,[r3,#148]
1467:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = (uint32_t)((DeadTimeFallingEdge * dead_time_scale) / PWM_S
 5218              	 .loc 4 1467 0
 5219 00b0 7B68     	 ldr r3,[r7,#4]
 5220 00b2 7A69     	 ldr r2,[r7,#20]
 5221 00b4 02FB03F3 	 mul r3,r2,r3
 5222 00b8 254A     	 ldr r2,.L157+4
 5223 00ba A2FB0323 	 umull r2,r3,r2,r3
 5224 00be 9A0C     	 lsrs r2,r3,#18
 5225 00c0 FB68     	 ldr r3,[r7,#12]
 5226 00c2 C3F89820 	 str r2,[r3,#152]
 5227 00c6 0EE0     	 b .L152
 5228              	.L151:
1468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1469:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1471:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = deadtime_count;
 5229              	 .loc 4 1471 0
 5230 00c8 FB68     	 ldr r3,[r7,#12]
 5231 00ca 7A6A     	 ldr r2,[r7,#36]
 5232 00cc C3F89820 	 str r2,[r3,#152]
1472:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = (uint32_t)((DeadTimeRisingEdge * dead_time_scale) / PWM_SVM
 5233              	 .loc 4 1472 0
 5234 00d0 BB68     	 ldr r3,[r7,#8]
 5235 00d2 7A69     	 ldr r2,[r7,#20]
 5236 00d4 02FB03F3 	 mul r3,r2,r3
 5237 00d8 1D4A     	 ldr r2,.L157+4
 5238 00da A2FB0323 	 umull r2,r3,r2,r3
 5239 00de 9A0C     	 lsrs r2,r3,#18
 5240 00e0 FB68     	 ldr r3,[r7,#12]
 5241 00e2 C3F89420 	 str r2,[r3,#148]
 5242              	.L152:
1473:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1474:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*configure the calculated deadtime*/
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 5243              	 .loc 4 1476 0
 5244 00e6 0023     	 movs r3,#0
 5245 00e8 3B62     	 str r3,[r7,#32]
 5246 00ea 20E0     	 b .L153
 5247              	.L154:
1477:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1478:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimeValue(HandlePtr->phase_ptr[count]->slice_ptr,
 5248              	 .loc 4 1479 0 discriminator 3
 5249 00ec FB68     	 ldr r3,[r7,#12]
 5250 00ee 3A6A     	 ldr r2,[r7,#32]
 5251 00f0 0232     	 adds r2,r2,#2
 5252 00f2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5253 00f6 1868     	 ldr r0,[r3]
1480:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5254              	 .loc 4 1480 0 discriminator 3
 5255 00f8 FB68     	 ldr r3,[r7,#12]
 5256 00fa 1B68     	 ldr r3,[r3]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5257              	 .loc 4 1479 0 discriminator 3
 5258 00fc 197A     	 ldrb r1,[r3,#8]
 5259              	 .loc 4 1480 0 discriminator 3
 5260 00fe FB68     	 ldr r3,[r7,#12]
 5261 0100 D3F89430 	 ldr r3,[r3,#148]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5262              	 .loc 4 1479 0 discriminator 3
 5263 0104 DAB2     	 uxtb r2,r3
1481:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint8_t) HandlePtr->deadtime_falling_edge);
 5264              	 .loc 4 1481 0 discriminator 3
 5265 0106 FB68     	 ldr r3,[r7,#12]
 5266 0108 D3F89830 	 ldr r3,[r3,#152]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5267              	 .loc 4 1479 0 discriminator 3
 5268 010c DBB2     	 uxtb r3,r3
 5269 010e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
1482:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimePrescaler(HandlePtr->phase_ptr[count]->slice_ptr, (XMC_CCU8_SLICE_D
 5270              	 .loc 4 1482 0 discriminator 3
 5271 0112 FB68     	 ldr r3,[r7,#12]
 5272 0114 3A6A     	 ldr r2,[r7,#32]
 5273 0116 0232     	 adds r2,r2,#2
 5274 0118 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5275 011c 1A68     	 ldr r2,[r3]
 5276 011e BB7E     	 ldrb r3,[r7,#26]
 5277 0120 1046     	 mov r0,r2
 5278 0122 1946     	 mov r1,r3
 5279 0124 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimePrescaler
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5280              	 .loc 4 1476 0 discriminator 3
 5281 0128 3B6A     	 ldr r3,[r7,#32]
 5282 012a 0133     	 adds r3,r3,#1
 5283 012c 3B62     	 str r3,[r7,#32]
 5284              	.L153:
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5285              	 .loc 4 1476 0 is_stmt 0 discriminator 1
 5286 012e 3B6A     	 ldr r3,[r7,#32]
 5287 0130 022B     	 cmp r3,#2
 5288 0132 DBD9     	 bls .L154
1483:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1484:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = prescaler;
 5289              	 .loc 4 1485 0 is_stmt 1
 5290 0134 FB68     	 ldr r3,[r7,#12]
 5291 0136 BA7E     	 ldrb r2,[r7,#26]
 5292 0138 83F89120 	 strb r2,[r3,#145]
 5293 013c 01E0     	 b .L155
 5294              	.L147:
1486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5295              	 .loc 4 1489 0
 5296 013e 0223     	 movs r3,#2
 5297 0140 FB76     	 strb r3,[r7,#27]
 5298              	.L155:
1490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 5299              	 .loc 4 1491 0
 5300 0142 FB7E     	 ldrb r3,[r7,#27]
1492:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5301              	 .loc 4 1492 0
 5302 0144 1846     	 mov r0,r3
 5303 0146 2837     	 adds r7,r7,#40
 5304              	.LCFI198:
 5305              	 .cfi_def_cfa_offset 8
 5306 0148 BD46     	 mov sp,r7
 5307              	.LCFI199:
 5308              	 .cfi_def_cfa_register 13
 5309              	 
 5310 014a 80BD     	 pop {r7,pc}
 5311              	.L158:
 5312              	 .align 2
 5313              	.L157:
 5314 014c D34D6210 	 .word 274877907
 5315 0150 83DE1B43 	 .word 1125899907
 5316              	 .cfi_endproc
 5317              	.LFE239:
 5319              	 .section .text.PWM_SVM_GetRisingEdgeDeadTime,"ax",%progbits
 5320              	 .align 2
 5321              	 .global PWM_SVM_GetRisingEdgeDeadTime
 5322              	 .thumb
 5323              	 .thumb_func
 5325              	PWM_SVM_GetRisingEdgeDeadTime:
 5326              	.LFB240:
1493:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1494:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the rising edge dead time */
1495:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetRisingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1496:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5327              	 .loc 4 1496 0
 5328              	 .cfi_startproc
 5329              	 
 5330              	 
 5331              	 
 5332 0000 80B4     	 push {r7}
 5333              	.LCFI200:
 5334              	 .cfi_def_cfa_offset 4
 5335              	 .cfi_offset 7,-4
 5336 0002 85B0     	 sub sp,sp,#20
 5337              	.LCFI201:
 5338              	 .cfi_def_cfa_offset 24
 5339 0004 00AF     	 add r7,sp,#0
 5340              	.LCFI202:
 5341              	 .cfi_def_cfa_register 7
 5342 0006 7860     	 str r0,[r7,#4]
1497:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1499:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5343              	 .loc 4 1499 0
 5344 0008 7B68     	 ldr r3,[r7,#4]
 5345 000a 1B68     	 ldr r3,[r3]
 5346 000c DB69     	 ldr r3,[r3,#28]
 5347 000e 0F4A     	 ldr r2,.L161
 5348 0010 A2FB0323 	 umull r2,r3,r2,r3
 5349 0014 9B09     	 lsrs r3,r3,#6
 5350 0016 7A68     	 ldr r2,[r7,#4]
 5351 0018 92F89120 	 ldrb r2,[r2,#145]
 5352 001c D340     	 lsrs r3,r3,r2
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5353              	 .loc 4 1498 0
 5354 001e 0C4A     	 ldr r2,.L161+4
 5355 0020 B2FBF3F3 	 udiv r3,r2,r3
 5356 0024 FB60     	 str r3,[r7,#12]
1500:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetRisingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL)
1501:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_rising_edge * dead_time_scale) / PWM_SVM_MILLISECCONV)
 5357              	 .loc 4 1502 0
 5358 0026 7B68     	 ldr r3,[r7,#4]
 5359 0028 D3F89430 	 ldr r3,[r3,#148]
 5360 002c FA68     	 ldr r2,[r7,#12]
 5361 002e 02FB03F3 	 mul r3,r2,r3
 5362 0032 064A     	 ldr r2,.L161
 5363 0034 A2FB0323 	 umull r2,r3,r2,r3
 5364 0038 9B09     	 lsrs r3,r3,#6
 5365 003a BB60     	 str r3,[r7,#8]
1503:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5366              	 .loc 4 1503 0
 5367 003c BB68     	 ldr r3,[r7,#8]
1504:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5368              	 .loc 4 1504 0
 5369 003e 1846     	 mov r0,r3
 5370 0040 1437     	 adds r7,r7,#20
 5371              	.LCFI203:
 5372              	 .cfi_def_cfa_offset 4
 5373 0042 BD46     	 mov sp,r7
 5374              	.LCFI204:
 5375              	 .cfi_def_cfa_register 13
 5376              	 
 5377 0044 5DF8047B 	 ldr r7,[sp],#4
 5378              	.LCFI205:
 5379              	 .cfi_restore 7
 5380              	 .cfi_def_cfa_offset 0
 5381 0048 7047     	 bx lr
 5382              	.L162:
 5383 004a 00BF     	 .align 2
 5384              	.L161:
 5385 004c D34D6210 	 .word 274877907
 5386 0050 00CA9A3B 	 .word 1000000000
 5387              	 .cfi_endproc
 5388              	.LFE240:
 5390              	 .section .text.PWM_SVM_GetFallingEdgeDeadTime,"ax",%progbits
 5391              	 .align 2
 5392              	 .global PWM_SVM_GetFallingEdgeDeadTime
 5393              	 .thumb
 5394              	 .thumb_func
 5396              	PWM_SVM_GetFallingEdgeDeadTime:
 5397              	.LFB241:
1505:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1506:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the falling edge dead time*/
1507:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetFallingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1508:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5398              	 .loc 4 1508 0
 5399              	 .cfi_startproc
 5400              	 
 5401              	 
 5402              	 
 5403 0000 80B4     	 push {r7}
 5404              	.LCFI206:
 5405              	 .cfi_def_cfa_offset 4
 5406              	 .cfi_offset 7,-4
 5407 0002 85B0     	 sub sp,sp,#20
 5408              	.LCFI207:
 5409              	 .cfi_def_cfa_offset 24
 5410 0004 00AF     	 add r7,sp,#0
 5411              	.LCFI208:
 5412              	 .cfi_def_cfa_register 7
 5413 0006 7860     	 str r0,[r7,#4]
1509:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1511:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5414              	 .loc 4 1511 0
 5415 0008 7B68     	 ldr r3,[r7,#4]
 5416 000a 1B68     	 ldr r3,[r3]
 5417 000c DB69     	 ldr r3,[r3,#28]
 5418 000e 0F4A     	 ldr r2,.L165
 5419 0010 A2FB0323 	 umull r2,r3,r2,r3
 5420 0014 9B09     	 lsrs r3,r3,#6
 5421 0016 7A68     	 ldr r2,[r7,#4]
 5422 0018 92F89120 	 ldrb r2,[r2,#145]
 5423 001c D340     	 lsrs r3,r3,r2
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5424              	 .loc 4 1510 0
 5425 001e 0C4A     	 ldr r2,.L165+4
 5426 0020 B2FBF3F3 	 udiv r3,r2,r3
 5427 0024 FB60     	 str r3,[r7,#12]
1512:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetFallingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL
1513:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_falling_edge * dead_time_scale) / PWM_SVM_MILLISECCONV
 5428              	 .loc 4 1514 0
 5429 0026 7B68     	 ldr r3,[r7,#4]
 5430 0028 D3F89830 	 ldr r3,[r3,#152]
 5431 002c FA68     	 ldr r2,[r7,#12]
 5432 002e 02FB03F3 	 mul r3,r2,r3
 5433 0032 064A     	 ldr r2,.L165
 5434 0034 A2FB0323 	 umull r2,r3,r2,r3
 5435 0038 9B09     	 lsrs r3,r3,#6
 5436 003a BB60     	 str r3,[r7,#8]
1515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5437              	 .loc 4 1515 0
 5438 003c BB68     	 ldr r3,[r7,#8]
1516:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5439              	 .loc 4 1516 0
 5440 003e 1846     	 mov r0,r3
 5441 0040 1437     	 adds r7,r7,#20
 5442              	.LCFI209:
 5443              	 .cfi_def_cfa_offset 4
 5444 0042 BD46     	 mov sp,r7
 5445              	.LCFI210:
 5446              	 .cfi_def_cfa_register 13
 5447              	 
 5448 0044 5DF8047B 	 ldr r7,[sp],#4
 5449              	.LCFI211:
 5450              	 .cfi_restore 7
 5451              	 .cfi_def_cfa_offset 0
 5452 0048 7047     	 bx lr
 5453              	.L166:
 5454 004a 00BF     	 .align 2
 5455              	.L165:
 5456 004c D34D6210 	 .word 274877907
 5457 0050 00CA9A3B 	 .word 1000000000
 5458              	 .cfi_endproc
 5459              	.LFE241:
 5461              	 .section .text.PWM_SVM_SetTmin,"ax",%progbits
 5462              	 .align 2
 5463              	 .global PWM_SVM_SetTmin
 5464              	 .thumb
 5465              	 .thumb_func
 5467              	PWM_SVM_SetTmin:
 5468              	.LFB242:
1517:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1518:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the Tmin value in terms of nano seconds*/
1519:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetTmin(PWM_SVM_t* const HandlePtr, uint32_t Tmin)
1520:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5469              	 .loc 4 1520 0
 5470              	 .cfi_startproc
 5471              	 
 5472              	 
 5473              	 
 5474 0000 80B4     	 push {r7}
 5475              	.LCFI212:
 5476              	 .cfi_def_cfa_offset 4
 5477              	 .cfi_offset 7,-4
 5478 0002 85B0     	 sub sp,sp,#20
 5479              	.LCFI213:
 5480              	 .cfi_def_cfa_offset 24
 5481 0004 00AF     	 add r7,sp,#0
 5482              	.LCFI214:
 5483              	 .cfi_def_cfa_register 7
 5484 0006 7860     	 str r0,[r7,#4]
 5485 0008 3960     	 str r1,[r7]
1521:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (uint32_t)(HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV)
 5486              	 .loc 4 1521 0
 5487 000a 7B68     	 ldr r3,[r7,#4]
 5488 000c 1B68     	 ldr r3,[r3]
 5489 000e DB69     	 ldr r3,[r3,#28]
 5490 0010 104A     	 ldr r2,.L171
 5491 0012 A2FB0323 	 umull r2,r3,r2,r3
 5492 0016 9B09     	 lsrs r3,r3,#6
 5493 0018 BB60     	 str r3,[r7,#8]
1522:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5494              	 .loc 4 1522 0
 5495 001a 0023     	 movs r3,#0
 5496 001c FB73     	 strb r3,[r7,#15]
1523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (Tmin <= PWM_SVM_TMIN_LIMIT)
 5497              	 .loc 4 1524 0
 5498 001e 3B68     	 ldr r3,[r7]
 5499 0020 41F28832 	 movw r2,#5000
 5500 0024 9342     	 cmp r3,r2
 5501 0026 0CD8     	 bhi .L168
1525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* calculate the Tmin to Tmin count*/
1527:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tmin = (uint16_t)(((uint32_t)(Tmin * tmin_scale)) / PWM_SVM_MICROSECCONV);
 5502              	 .loc 4 1527 0
 5503 0028 3B68     	 ldr r3,[r7]
 5504 002a BA68     	 ldr r2,[r7,#8]
 5505 002c 02FB03F3 	 mul r3,r2,r3
 5506 0030 094A     	 ldr r2,.L171+4
 5507 0032 A2FB0323 	 umull r2,r3,r2,r3
 5508 0036 9B0C     	 lsrs r3,r3,#18
 5509 0038 9AB2     	 uxth r2,r3
 5510 003a 7B68     	 ldr r3,[r7,#4]
 5511 003c A3F8C220 	 strh r2,[r3,#194]
 5512 0040 01E0     	 b .L169
 5513              	.L168:
1528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5514              	 .loc 4 1531 0
 5515 0042 0223     	 movs r3,#2
 5516 0044 FB73     	 strb r3,[r7,#15]
 5517              	.L169:
1532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5518              	 .loc 4 1533 0
 5519 0046 FB7B     	 ldrb r3,[r7,#15]
1534:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5520              	 .loc 4 1534 0
 5521 0048 1846     	 mov r0,r3
 5522 004a 1437     	 adds r7,r7,#20
 5523              	.LCFI215:
 5524              	 .cfi_def_cfa_offset 4
 5525 004c BD46     	 mov sp,r7
 5526              	.LCFI216:
 5527              	 .cfi_def_cfa_register 13
 5528              	 
 5529 004e 5DF8047B 	 ldr r7,[sp],#4
 5530              	.LCFI217:
 5531              	 .cfi_restore 7
 5532              	 .cfi_def_cfa_offset 0
 5533 0052 7047     	 bx lr
 5534              	.L172:
 5535              	 .align 2
 5536              	.L171:
 5537 0054 D34D6210 	 .word 274877907
 5538 0058 83DE1B43 	 .word 1125899907
 5539              	 .cfi_endproc
 5540              	.LFE242:
 5542              	 .section .text.PWM_SVM_GetTmin,"ax",%progbits
 5543              	 .align 2
 5544              	 .global PWM_SVM_GetTmin
 5545              	 .thumb
 5546              	 .thumb_func
 5548              	PWM_SVM_GetTmin:
 5549              	.LFB243:
1535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1536:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*returns the Tmin value in terms of nano second*/
1537:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetTmin(PWM_SVM_t* const HandlePtr)
1538:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5550              	 .loc 4 1538 0
 5551              	 .cfi_startproc
 5552              	 
 5553              	 
 5554              	 
 5555 0000 80B4     	 push {r7}
 5556              	.LCFI218:
 5557              	 .cfi_def_cfa_offset 4
 5558              	 .cfi_offset 7,-4
 5559 0002 85B0     	 sub sp,sp,#20
 5560              	.LCFI219:
 5561              	 .cfi_def_cfa_offset 24
 5562 0004 00AF     	 add r7,sp,#0
 5563              	.LCFI220:
 5564              	 .cfi_def_cfa_register 7
 5565 0006 7860     	 str r0,[r7,#4]
1539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (PWM_SVM_NANOSECCONV / (HandlePtr->confighandle_ptr->module_freq /
 5566              	 .loc 4 1539 0
 5567 0008 7B68     	 ldr r3,[r7,#4]
 5568 000a 1B68     	 ldr r3,[r3]
 5569 000c DB69     	 ldr r3,[r3,#28]
 5570 000e 0C4A     	 ldr r2,.L175
 5571 0010 A2FB0323 	 umull r2,r3,r2,r3
 5572 0014 9B09     	 lsrs r3,r3,#6
 5573 0016 0B4A     	 ldr r2,.L175+4
 5574 0018 B2FBF3F3 	 udiv r3,r2,r3
 5575 001c FB60     	 str r3,[r7,#12]
1540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_MILLISECCONV));
1541:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1542:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (uint32_t)(((uint32_t) HandlePtr->tmin * tmin_scale) / PWM_SVM_MILLISECCONV);
 5576              	 .loc 4 1542 0
 5577 001e 7B68     	 ldr r3,[r7,#4]
 5578 0020 B3F8C230 	 ldrh r3,[r3,#194]
 5579 0024 1A46     	 mov r2,r3
 5580 0026 FB68     	 ldr r3,[r7,#12]
 5581 0028 03FB02F3 	 mul r3,r3,r2
 5582 002c 044A     	 ldr r2,.L175
 5583 002e A2FB0323 	 umull r2,r3,r2,r3
 5584 0032 9B09     	 lsrs r3,r3,#6
1543:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5585              	 .loc 4 1543 0
 5586 0034 1846     	 mov r0,r3
 5587 0036 1437     	 adds r7,r7,#20
 5588              	.LCFI221:
 5589              	 .cfi_def_cfa_offset 4
 5590 0038 BD46     	 mov sp,r7
 5591              	.LCFI222:
 5592              	 .cfi_def_cfa_register 13
 5593              	 
 5594 003a 5DF8047B 	 ldr r7,[sp],#4
 5595              	.LCFI223:
 5596              	 .cfi_restore 7
 5597              	 .cfi_def_cfa_offset 0
 5598 003e 7047     	 bx lr
 5599              	.L176:
 5600              	 .align 2
 5601              	.L175:
 5602 0040 D34D6210 	 .word 274877907
 5603 0044 00CA9A3B 	 .word 1000000000
 5604              	 .cfi_endproc
 5605              	.LFE243:
 5607              	 .section .text.PWM_SVM_SetSVMScheme,"ax",%progbits
 5608              	 .align 2
 5609              	 .global PWM_SVM_SetSVMScheme
 5610              	 .thumb
 5611              	 .thumb_func
 5613              	PWM_SVM_SetSVMScheme:
 5614              	.LFB244:
1544:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1545:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API modifies the SVM scheme dynamically*/
1546:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetSVMScheme(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1547:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5615              	 .loc 4 1547 0
 5616              	 .cfi_startproc
 5617              	 
 5618              	 
 5619 0000 80B5     	 push {r7,lr}
 5620              	.LCFI224:
 5621              	 .cfi_def_cfa_offset 8
 5622              	 .cfi_offset 7,-8
 5623              	 .cfi_offset 14,-4
 5624 0002 84B0     	 sub sp,sp,#16
 5625              	.LCFI225:
 5626              	 .cfi_def_cfa_offset 24
 5627 0004 00AF     	 add r7,sp,#0
 5628              	.LCFI226:
 5629              	 .cfi_def_cfa_register 7
 5630 0006 7860     	 str r0,[r7,#4]
 5631 0008 0B46     	 mov r3,r1
 5632 000a FB70     	 strb r3,[r7,#3]
1548:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5633              	 .loc 4 1548 0
 5634 000c 0023     	 movs r3,#0
 5635 000e FB73     	 strb r3,[r7,#15]
1549:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1550:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((Scheme == PWM_SVM_7SEG_SYMM) || (Scheme == PWM_SVM_5SEG_SYMM))
 5636              	 .loc 4 1550 0
 5637 0010 FB78     	 ldrb r3,[r7,#3]
 5638 0012 002B     	 cmp r3,#0
 5639 0014 02D0     	 beq .L178
 5640              	 .loc 4 1550 0 is_stmt 0 discriminator 1
 5641 0016 FB78     	 ldrb r3,[r7,#3]
 5642 0018 022B     	 cmp r3,#2
 5643 001a 1BD1     	 bne .L179
 5644              	.L178:
1551:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1552:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* It is possible to change the SVM scheme in RUNNING state if timer counting and compare mode 
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_RUNNING == HandlePtr->state))
 5645              	 .loc 4 1553 0 is_stmt 1
 5646 001c 7B68     	 ldr r3,[r7,#4]
 5647 001e 93F89030 	 ldrb r3,[r3,#144]
 5648 0022 022B     	 cmp r3,#2
 5649 0024 05D1     	 bne .L180
1554:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1555:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lDynamicSVMSchemeModification(HandlePtr, Scheme);
 5650              	 .loc 4 1555 0
 5651 0026 FB78     	 ldrb r3,[r7,#3]
 5652 0028 7868     	 ldr r0,[r7,#4]
 5653 002a 1946     	 mov r1,r3
 5654 002c FFF7FEFF 	 bl PWM_SVM_lDynamicSVMSchemeModification
 5655 0030 0FE0     	 b .L181
 5656              	.L180:
1556:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1557:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* when PWM is stopped, SVM scheme can be changed without any constraint */
1558:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 5657              	 .loc 4 1558 0
 5658 0032 7B68     	 ldr r3,[r7,#4]
 5659 0034 93F89030 	 ldrb r3,[r3,#144]
 5660 0038 012B     	 cmp r3,#1
 5661 003a 04D0     	 beq .L182
1559:../Dave/Generated/PWM_SVM/pwm_svm.c ****         || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 5662              	 .loc 4 1559 0
 5663 003c 7B68     	 ldr r3,[r7,#4]
 5664 003e 93F89030 	 ldrb r3,[r3,#144]
 5665 0042 032B     	 cmp r3,#3
 5666 0044 05D1     	 bne .L181
 5667              	.L182:
1560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1561:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lStaticSVMSchemeModification(HandlePtr, Scheme);
 5668              	 .loc 4 1561 0
 5669 0046 FB78     	 ldrb r3,[r7,#3]
 5670 0048 7868     	 ldr r0,[r7,#4]
 5671 004a 1946     	 mov r1,r3
 5672 004c FFF7FEFF 	 bl PWM_SVM_lStaticSVMSchemeModification
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5673              	 .loc 4 1553 0
 5674 0050 02E0     	 b .L183
 5675              	.L181:
 5676 0052 01E0     	 b .L183
 5677              	.L179:
1562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1564:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1565:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Do Nothing*/
1566:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1567:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1568:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1569:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5678              	 .loc 4 1570 0
 5679 0054 0223     	 movs r3,#2
 5680 0056 FB73     	 strb r3,[r7,#15]
 5681              	.L183:
1571:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5682              	 .loc 4 1572 0
 5683 0058 FB7B     	 ldrb r3,[r7,#15]
1573:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5684              	 .loc 4 1573 0
 5685 005a 1846     	 mov r0,r3
 5686 005c 1037     	 adds r7,r7,#16
 5687              	.LCFI227:
 5688              	 .cfi_def_cfa_offset 8
 5689 005e BD46     	 mov sp,r7
 5690              	.LCFI228:
 5691              	 .cfi_def_cfa_register 13
 5692              	 
 5693 0060 80BD     	 pop {r7,pc}
 5694              	 .cfi_endproc
 5695              	.LFE244:
 5697 0062 00BF     	 .section .text.PWM_SVM_lDynamicSVMSchemeModification,"ax",%progbits
 5698              	 .align 2
 5699              	 .global PWM_SVM_lDynamicSVMSchemeModification
 5700              	 .thumb
 5701              	 .thumb_func
 5703              	PWM_SVM_lDynamicSVMSchemeModification:
 5704              	.LFB245:
1574:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1575:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1576:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5705              	 .loc 4 1576 0
 5706              	 .cfi_startproc
 5707              	 
 5708              	 
 5709 0000 80B5     	 push {r7,lr}
 5710              	.LCFI229:
 5711              	 .cfi_def_cfa_offset 8
 5712              	 .cfi_offset 7,-8
 5713              	 .cfi_offset 14,-4
 5714 0002 82B0     	 sub sp,sp,#8
 5715              	.LCFI230:
 5716              	 .cfi_def_cfa_offset 16
 5717 0004 00AF     	 add r7,sp,#0
 5718              	.LCFI231:
 5719              	 .cfi_def_cfa_register 7
 5720 0006 7860     	 str r0,[r7,#4]
 5721 0008 0B46     	 mov r3,r1
 5722 000a FB70     	 strb r3,[r7,#3]
1577:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (Scheme)
 5723              	 .loc 4 1577 0
 5724 000c FB78     	 ldrb r3,[r7,#3]
 5725 000e 052B     	 cmp r3,#5
 5726 0010 00F2BF80 	 bhi .L185
 5727 0014 01A2     	 adr r2,.L188
 5728 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 5729 001a 00BF     	 .p2align 2
 5730              	.L188:
 5731 001c 35000000 	 .word .L187+1
 5732 0020 B5000000 	 .word .L189+1
 5733 0024 CB000000 	 .word .L190+1
 5734 0028 05010000 	 .word .L191+1
 5735 002c 23010000 	 .word .L192+1
 5736 0030 5B010000 	 .word .L193+1
 5737              	 .p2align 1
 5738              	.L187:
1578:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1579:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_SYMM:
1580:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment symmetric*/
1581:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_SYMM == HandlePtr->svm_config))
 5739              	 .loc 4 1581 0
 5740 0034 7B68     	 ldr r3,[r7,#4]
 5741 0036 93F89230 	 ldrb r3,[r3,#146]
 5742 003a 022B     	 cmp r3,#2
 5743 003c 39D1     	 bne .L194
1582:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1583:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*if DC link configure compare match event and bind to NVIC node accordingly*/
1584:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 5744              	 .loc 4 1584 0
 5745 003e 7B68     	 ldr r3,[r7,#4]
 5746 0040 1B68     	 ldr r3,[r3]
 5747 0042 1B7C     	 ldrb r3,[r3,#16]
 5748 0044 012B     	 cmp r3,#1
 5749 0046 2BD1     	 bne .L195
1585:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1586:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5750              	 .loc 4 1586 0
 5751 0048 7B68     	 ldr r3,[r7,#4]
 5752 004a 5B69     	 ldr r3,[r3,#20]
 5753 004c 1B68     	 ldr r3,[r3]
 5754 004e 1846     	 mov r0,r3
 5755 0050 0221     	 movs r1,#2
 5756 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1587:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
1588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5757              	 .loc 4 1588 0
 5758 0056 7B68     	 ldr r3,[r7,#4]
 5759 0058 5B69     	 ldr r3,[r3,#20]
 5760 005a 1B68     	 ldr r3,[r3]
 5761 005c 1846     	 mov r0,r3
 5762 005e 0321     	 movs r1,#3
 5763 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1589:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1590:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5764              	 .loc 4 1590 0
 5765 0064 7B68     	 ldr r3,[r7,#4]
 5766 0066 5B69     	 ldr r3,[r3,#20]
 5767 0068 1B68     	 ldr r3,[r3]
 5768 006a 1846     	 mov r0,r3
 5769 006c 0421     	 movs r1,#4
 5770 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1591:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
1592:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5771              	 .loc 4 1592 0
 5772 0072 7B68     	 ldr r3,[r7,#4]
 5773 0074 5B69     	 ldr r3,[r3,#20]
 5774 0076 1B68     	 ldr r3,[r3]
 5775 0078 1846     	 mov r0,r3
 5776 007a 0521     	 movs r1,#5
 5777 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1593:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 5778              	 .loc 4 1594 0
 5779 0080 7B68     	 ldr r3,[r7,#4]
 5780 0082 5B69     	 ldr r3,[r3,#20]
 5781 0084 1A68     	 ldr r2,[r3]
1595:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1596:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1597:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[0] >> CCU8_CC8_SRS_CM1SR_Pos) & (
 5782              	 .loc 4 1597 0
 5783 0086 7B68     	 ldr r3,[r7,#4]
 5784 0088 1B68     	 ldr r3,[r3]
 5785 008a 9B6A     	 ldr r3,[r3,#40]
 5786 008c 9B08     	 lsrs r3,r3,#2
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 5787              	 .loc 4 1594 0
 5788 008e DBB2     	 uxtb r3,r3
 5789 0090 03F00303 	 and r3,r3,#3
 5790 0094 DBB2     	 uxtb r3,r3
 5791 0096 1046     	 mov r0,r2
 5792 0098 0421     	 movs r1,#4
 5793 009a 1A46     	 mov r2,r3
 5794 009c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 5795              	.L195:
1598:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1599:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the scheme*/
1600:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5796              	 .loc 4 1600 0
 5797 00a0 7B68     	 ldr r3,[r7,#4]
 5798 00a2 FA78     	 ldrb r2,[r7,#3]
 5799 00a4 83F89220 	 strb r2,[r3,#146]
1601:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 5800              	 .loc 4 1601 0
 5801 00a8 7B68     	 ldr r3,[r7,#4]
 5802 00aa 3B4A     	 ldr r2,.L201
 5803 00ac C3F88820 	 str r2,[r3,#136]
1602:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1603:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5804              	 .loc 4 1603 0
 5805 00b0 6FE0     	 b .L185
 5806              	.L194:
 5807 00b2 6EE0     	 b .L185
 5808              	.L189:
1604:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_ASYMM:
1605:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment asymmetric*/
1606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_ASYMM == HandlePtr->svm_config))
 5809              	 .loc 4 1606 0
 5810 00b4 7B68     	 ldr r3,[r7,#4]
 5811 00b6 93F89230 	 ldrb r3,[r3,#146]
 5812 00ba 032B     	 cmp r3,#3
 5813 00bc 04D1     	 bne .L196
1607:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1608:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5814              	 .loc 4 1608 0
 5815 00be 7B68     	 ldr r3,[r7,#4]
 5816 00c0 FA78     	 ldrb r2,[r7,#3]
 5817 00c2 83F89220 	 strb r2,[r3,#146]
1609:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1610:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5818              	 .loc 4 1610 0
 5819 00c6 64E0     	 b .L185
 5820              	.L196:
 5821 00c8 63E0     	 b .L185
 5822              	.L190:
1611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1612:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_SYMM:
1613:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1614:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_SYMM == HandlePtr->svm_config))
 5823              	 .loc 4 1614 0
 5824 00ca 7B68     	 ldr r3,[r7,#4]
 5825 00cc 93F89230 	 ldrb r3,[r3,#146]
 5826 00d0 002B     	 cmp r3,#0
 5827 00d2 16D1     	 bne .L197
1615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1616:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*disable two of compare match event as it is not required for 5 segment*/
1617:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5828              	 .loc 4 1617 0
 5829 00d4 7B68     	 ldr r3,[r7,#4]
 5830 00d6 5B69     	 ldr r3,[r3,#20]
 5831 00d8 1B68     	 ldr r3,[r3]
 5832 00da 1846     	 mov r0,r3
 5833 00dc 0321     	 movs r1,#3
 5834 00de FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1618:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1619:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5835              	 .loc 4 1619 0
 5836 00e2 7B68     	 ldr r3,[r7,#4]
 5837 00e4 5B69     	 ldr r3,[r3,#20]
 5838 00e6 1B68     	 ldr r3,[r3]
 5839 00e8 1846     	 mov r0,r3
 5840 00ea 0521     	 movs r1,#5
 5841 00ec FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1620:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1621:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5842              	 .loc 4 1621 0
 5843 00f0 7B68     	 ldr r3,[r7,#4]
 5844 00f2 FA78     	 ldrb r2,[r7,#3]
 5845 00f4 83F89220 	 strb r2,[r3,#146]
1622:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 5846              	 .loc 4 1622 0
 5847 00f8 7B68     	 ldr r3,[r7,#4]
 5848 00fa 284A     	 ldr r2,.L201+4
 5849 00fc C3F88820 	 str r2,[r3,#136]
1623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1624:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5850              	 .loc 4 1624 0
 5851 0100 47E0     	 b .L185
 5852              	.L197:
 5853 0102 46E0     	 b .L185
 5854              	.L191:
1625:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1626:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_ASYMM:
1627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1628:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_ASYMM == HandlePtr->svm_config))
 5855              	 .loc 4 1628 0
 5856 0104 7B68     	 ldr r3,[r7,#4]
 5857 0106 93F89230 	 ldrb r3,[r3,#146]
 5858 010a 012B     	 cmp r3,#1
 5859 010c 08D1     	 bne .L198
1629:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1630:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5860              	 .loc 4 1630 0
 5861 010e 7B68     	 ldr r3,[r7,#4]
 5862 0110 FA78     	 ldrb r2,[r7,#3]
 5863 0112 83F89220 	 strb r2,[r3,#146]
1631:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 5864              	 .loc 4 1631 0
 5865 0116 7B68     	 ldr r3,[r7,#4]
 5866 0118 214A     	 ldr r2,.L201+8
 5867 011a C3F88820 	 str r2,[r3,#136]
1632:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1633:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5868              	 .loc 4 1633 0
 5869 011e 38E0     	 b .L185
 5870              	.L198:
 5871 0120 37E0     	 b .L185
 5872              	.L192:
1634:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1635:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_3ACTIVE:
1636:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 4 active v
1637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config))
 5873              	 .loc 4 1637 0
 5874 0122 7B68     	 ldr r3,[r7,#4]
 5875 0124 93F89230 	 ldrb r3,[r3,#146]
 5876 0128 052B     	 cmp r3,#5
 5877 012a 15D1     	 bne .L199
1638:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1640:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5878              	 .loc 4 1640 0
 5879 012c 7B68     	 ldr r3,[r7,#4]
 5880 012e B3F8C430 	 ldrh r3,[r3,#196]
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5881              	 .loc 4 1639 0
 5882 0132 1A46     	 mov r2,r3
 5883 0134 5200     	 lsls r2,r2,#1
 5884 0136 1344     	 add r3,r3,r2
 5885 0138 9BB2     	 uxth r3,r3
 5886 013a C3F58043 	 rsb r3,r3,#16384
 5887 013e 9AB2     	 uxth r2,r3
 5888 0140 7B68     	 ldr r3,[r7,#4]
 5889 0142 A3F8C620 	 strh r2,[r3,#198]
1641:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5890              	 .loc 4 1641 0
 5891 0146 7B68     	 ldr r3,[r7,#4]
 5892 0148 FA78     	 ldrb r2,[r7,#3]
 5893 014a 83F89220 	 strb r2,[r3,#146]
1642:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 5894              	 .loc 4 1642 0
 5895 014e 7B68     	 ldr r3,[r7,#4]
 5896 0150 144A     	 ldr r2,.L201+12
 5897 0152 C3F88820 	 str r2,[r3,#136]
1643:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5898              	 .loc 4 1644 0
 5899 0156 1CE0     	 b .L185
 5900              	.L199:
 5901 0158 1BE0     	 b .L185
 5902              	.L193:
1645:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1646:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_4ACTIVE:
1647:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 3 active v
1648:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config))
 5903              	 .loc 4 1648 0
 5904 015a 7B68     	 ldr r3,[r7,#4]
 5905 015c 93F89230 	 ldrb r3,[r3,#146]
 5906 0160 042B     	 cmp r3,#4
 5907 0162 15D1     	 bne .L200
1649:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1651:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5908              	 .loc 4 1651 0
 5909 0164 7B68     	 ldr r3,[r7,#4]
 5910 0166 B3F8C430 	 ldrh r3,[r3,#196]
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5911              	 .loc 4 1650 0
 5912 016a 1A46     	 mov r2,r3
 5913 016c 9203     	 lsls r2,r2,#14
 5914 016e D31A     	 subs r3,r2,r3
 5915 0170 9B00     	 lsls r3,r3,#2
 5916 0172 9BB2     	 uxth r3,r3
 5917 0174 03F58043 	 add r3,r3,#16384
 5918 0178 9AB2     	 uxth r2,r3
 5919 017a 7B68     	 ldr r3,[r7,#4]
 5920 017c A3F8C620 	 strh r2,[r3,#198]
1652:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5921              	 .loc 4 1652 0
 5922 0180 7B68     	 ldr r3,[r7,#4]
 5923 0182 FA78     	 ldrb r2,[r7,#3]
 5924 0184 83F89220 	 strb r2,[r3,#146]
1653:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 5925              	 .loc 4 1653 0
 5926 0188 7B68     	 ldr r3,[r7,#4]
 5927 018a 074A     	 ldr r2,.L201+16
 5928 018c C3F88820 	 str r2,[r3,#136]
 5929              	.L200:
1654:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1655:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5930              	 .loc 4 1655 0
 5931 0190 00BF     	 nop
 5932              	.L185:
1656:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1657:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5933              	 .loc 4 1657 0
 5934 0192 0837     	 adds r7,r7,#8
 5935              	.LCFI232:
 5936              	 .cfi_def_cfa_offset 8
 5937 0194 BD46     	 mov sp,r7
 5938              	.LCFI233:
 5939              	 .cfi_def_cfa_register 13
 5940              	 
 5941 0196 80BD     	 pop {r7,pc}
 5942              	.L202:
 5943              	 .align 2
 5944              	.L201:
 5945 0198 00000000 	 .word PWM_SVM_CalCmpValueSym7
 5946 019c 00000000 	 .word PWM_SVM_CalCmpValueSym5
 5947 01a0 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 5948 01a4 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 5949 01a8 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 5950              	 .cfi_endproc
 5951              	.LFE245:
 5953              	 .section .text.PWM_SVM_lCAPeriodValueConfig,"ax",%progbits
 5954              	 .align 2
 5955              	 .global PWM_SVM_lCAPeriodValueConfig
 5956              	 .thumb
 5957              	 .thumb_func
 5959              	PWM_SVM_lCAPeriodValueConfig:
 5960              	.LFB246:
1658:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1659:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1660:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5961              	 .loc 4 1660 0
 5962              	 .cfi_startproc
 5963              	 
 5964              	 
 5965 0000 80B5     	 push {r7,lr}
 5966              	.LCFI234:
 5967              	 .cfi_def_cfa_offset 8
 5968              	 .cfi_offset 7,-8
 5969              	 .cfi_offset 14,-4
 5970 0002 82B0     	 sub sp,sp,#8
 5971              	.LCFI235:
 5972              	 .cfi_def_cfa_offset 16
 5973 0004 00AF     	 add r7,sp,#0
 5974              	.LCFI236:
 5975              	 .cfi_def_cfa_register 7
 5976 0006 7860     	 str r0,[r7,#4]
1661:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_5SEG_ASYMM < HandlePtr->svm_config))
 5977              	 .loc 4 1661 0
 5978 0008 7B68     	 ldr r3,[r7,#4]
 5979 000a 93F89230 	 ldrb r3,[r3,#146]
 5980 000e 032B     	 cmp r3,#3
 5981 0010 47D9     	 bls .L203
1662:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1663:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = ((HandlePtr->period + 1U) >> 1U) - 1U;
 5982              	 .loc 4 1663 0
 5983 0012 7B68     	 ldr r3,[r7,#4]
 5984 0014 D3F89C30 	 ldr r3,[r3,#156]
 5985 0018 0133     	 adds r3,r3,#1
 5986 001a 5B08     	 lsrs r3,r3,#1
 5987 001c 5A1E     	 subs r2,r3,#1
 5988 001e 7B68     	 ldr r3,[r7,#4]
 5989 0020 C3F89C20 	 str r2,[r3,#156]
1664:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 5990              	 .loc 4 1664 0
 5991 0024 7B68     	 ldr r3,[r7,#4]
 5992 0026 9B68     	 ldr r3,[r3,#8]
 5993 0028 1A68     	 ldr r2,[r3]
 5994 002a 7B68     	 ldr r3,[r7,#4]
 5995 002c D3F89C30 	 ldr r3,[r3,#156]
 5996 0030 9BB2     	 uxth r3,r3
 5997 0032 1046     	 mov r0,r2
 5998 0034 1946     	 mov r1,r3
 5999 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1665:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 6000              	 .loc 4 1665 0
 6001 003a 7B68     	 ldr r3,[r7,#4]
 6002 003c DB68     	 ldr r3,[r3,#12]
 6003 003e 1A68     	 ldr r2,[r3]
 6004 0040 7B68     	 ldr r3,[r7,#4]
 6005 0042 D3F89C30 	 ldr r3,[r3,#156]
 6006 0046 9BB2     	 uxth r3,r3
 6007 0048 1046     	 mov r0,r2
 6008 004a 1946     	 mov r1,r3
 6009 004c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1666:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 6010              	 .loc 4 1666 0
 6011 0050 7B68     	 ldr r3,[r7,#4]
 6012 0052 1B69     	 ldr r3,[r3,#16]
 6013 0054 1A68     	 ldr r2,[r3]
 6014 0056 7B68     	 ldr r3,[r7,#4]
 6015 0058 D3F89C30 	 ldr r3,[r3,#156]
 6016 005c 9BB2     	 uxth r3,r3
 6017 005e 1046     	 mov r0,r2
 6018 0060 1946     	 mov r1,r3
 6019 0062 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1667:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 6020              	 .loc 4 1667 0
 6021 0066 7B68     	 ldr r3,[r7,#4]
 6022 0068 1B68     	 ldr r3,[r3]
 6023 006a 1B7C     	 ldrb r3,[r3,#16]
 6024 006c 002B     	 cmp r3,#0
 6025 006e 0AD0     	 beq .L205
1668:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 6026              	 .loc 4 1669 0
 6027 0070 7B68     	 ldr r3,[r7,#4]
 6028 0072 5B69     	 ldr r3,[r3,#20]
 6029 0074 1A68     	 ldr r2,[r3]
 6030 0076 7B68     	 ldr r3,[r7,#4]
 6031 0078 D3F89C30 	 ldr r3,[r3,#156]
 6032 007c 9BB2     	 uxth r3,r3
 6033 007e 1046     	 mov r0,r2
 6034 0080 1946     	 mov r1,r3
 6035 0082 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 6036              	.L205:
1670:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1671:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1672:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 6037              	 .loc 4 1672 0
 6038 0086 7B68     	 ldr r3,[r7,#4]
 6039 0088 5A68     	 ldr r2,[r3,#4]
 6040 008a 7B68     	 ldr r3,[r7,#4]
 6041 008c 1B68     	 ldr r3,[r3]
 6042 008e 5B6A     	 ldr r3,[r3,#36]
 6043 0090 1046     	 mov r0,r2
 6044 0092 1946     	 mov r1,r3
 6045 0094 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1673:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->max_amplitude = (uint16_t)PWM_SVM_MAX_AMPLITUDE;
 6046              	 .loc 4 1673 0
 6047 0098 7B68     	 ldr r3,[r7,#4]
 6048 009a 4FF48042 	 mov r2,#16384
 6049 009e A3F8C620 	 strh r2,[r3,#198]
 6050              	.L203:
1674:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1675:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6051              	 .loc 4 1675 0
 6052 00a2 0837     	 adds r7,r7,#8
 6053              	.LCFI237:
 6054              	 .cfi_def_cfa_offset 8
 6055 00a4 BD46     	 mov sp,r7
 6056              	.LCFI238:
 6057              	 .cfi_def_cfa_register 13
 6058              	 
 6059 00a6 80BD     	 pop {r7,pc}
 6060              	 .cfi_endproc
 6061              	.LFE246:
 6063              	 .section .text.PWM_SVM_lEAPeriodValueConfig,"ax",%progbits
 6064              	 .align 2
 6065              	 .global PWM_SVM_lEAPeriodValueConfig
 6066              	 .thumb
 6067              	 .thumb_func
 6069              	PWM_SVM_lEAPeriodValueConfig:
 6070              	.LFB247:
1676:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1677:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1678:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 6071              	 .loc 4 1678 0
 6072              	 .cfi_startproc
 6073              	 
 6074              	 
 6075 0000 80B5     	 push {r7,lr}
 6076              	.LCFI239:
 6077              	 .cfi_def_cfa_offset 8
 6078              	 .cfi_offset 7,-8
 6079              	 .cfi_offset 14,-4
 6080 0002 82B0     	 sub sp,sp,#8
 6081              	.LCFI240:
 6082              	 .cfi_def_cfa_offset 16
 6083 0004 00AF     	 add r7,sp,#0
 6084              	.LCFI241:
 6085              	 .cfi_def_cfa_register 7
 6086 0006 7860     	 str r0,[r7,#4]
1679:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->svm_config <= PWM_SVM_5SEG_ASYMM)
 6087              	 .loc 4 1679 0
 6088 0008 7B68     	 ldr r3,[r7,#4]
 6089 000a 93F89230 	 ldrb r3,[r3,#146]
 6090 000e 032B     	 cmp r3,#3
 6091 0010 41D8     	 bhi .L206
1680:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = (HandlePtr->period << 1U) + 1U;
 6092              	 .loc 4 1681 0
 6093 0012 7B68     	 ldr r3,[r7,#4]
 6094 0014 D3F89C30 	 ldr r3,[r3,#156]
 6095 0018 5B00     	 lsls r3,r3,#1
 6096 001a 5A1C     	 adds r2,r3,#1
 6097 001c 7B68     	 ldr r3,[r7,#4]
 6098 001e C3F89C20 	 str r2,[r3,#156]
1682:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 6099              	 .loc 4 1682 0
 6100 0022 7B68     	 ldr r3,[r7,#4]
 6101 0024 9B68     	 ldr r3,[r3,#8]
 6102 0026 1A68     	 ldr r2,[r3]
 6103 0028 7B68     	 ldr r3,[r7,#4]
 6104 002a D3F89C30 	 ldr r3,[r3,#156]
 6105 002e 9BB2     	 uxth r3,r3
 6106 0030 1046     	 mov r0,r2
 6107 0032 1946     	 mov r1,r3
 6108 0034 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1683:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 6109              	 .loc 4 1683 0
 6110 0038 7B68     	 ldr r3,[r7,#4]
 6111 003a DB68     	 ldr r3,[r3,#12]
 6112 003c 1A68     	 ldr r2,[r3]
 6113 003e 7B68     	 ldr r3,[r7,#4]
 6114 0040 D3F89C30 	 ldr r3,[r3,#156]
 6115 0044 9BB2     	 uxth r3,r3
 6116 0046 1046     	 mov r0,r2
 6117 0048 1946     	 mov r1,r3
 6118 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1684:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 6119              	 .loc 4 1684 0
 6120 004e 7B68     	 ldr r3,[r7,#4]
 6121 0050 1B69     	 ldr r3,[r3,#16]
 6122 0052 1A68     	 ldr r2,[r3]
 6123 0054 7B68     	 ldr r3,[r7,#4]
 6124 0056 D3F89C30 	 ldr r3,[r3,#156]
 6125 005a 9BB2     	 uxth r3,r3
 6126 005c 1046     	 mov r0,r2
 6127 005e 1946     	 mov r1,r3
 6128 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1685:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 6129              	 .loc 4 1685 0
 6130 0064 7B68     	 ldr r3,[r7,#4]
 6131 0066 1B68     	 ldr r3,[r3]
 6132 0068 1B7C     	 ldrb r3,[r3,#16]
 6133 006a 002B     	 cmp r3,#0
 6134 006c 0AD0     	 beq .L208
1686:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1687:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 6135              	 .loc 4 1687 0
 6136 006e 7B68     	 ldr r3,[r7,#4]
 6137 0070 5B69     	 ldr r3,[r3,#20]
 6138 0072 1A68     	 ldr r2,[r3]
 6139 0074 7B68     	 ldr r3,[r7,#4]
 6140 0076 D3F89C30 	 ldr r3,[r3,#156]
 6141 007a 9BB2     	 uxth r3,r3
 6142 007c 1046     	 mov r0,r2
 6143 007e 1946     	 mov r1,r3
 6144 0080 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 6145              	.L208:
1688:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1689:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1690:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 6146              	 .loc 4 1690 0
 6147 0084 7B68     	 ldr r3,[r7,#4]
 6148 0086 5A68     	 ldr r2,[r3,#4]
 6149 0088 7B68     	 ldr r3,[r7,#4]
 6150 008a 1B68     	 ldr r3,[r3]
 6151 008c 5B6A     	 ldr r3,[r3,#36]
 6152 008e 1046     	 mov r0,r2
 6153 0090 1946     	 mov r1,r3
 6154 0092 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 6155              	.L206:
1691:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1692:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6156              	 .loc 4 1692 0
 6157 0096 0837     	 adds r7,r7,#8
 6158              	.LCFI242:
 6159              	 .cfi_def_cfa_offset 8
 6160 0098 BD46     	 mov sp,r7
 6161              	.LCFI243:
 6162              	 .cfi_def_cfa_register 13
 6163              	 
 6164 009a 80BD     	 pop {r7,pc}
 6165              	 .cfi_endproc
 6166              	.LFE247:
 6168              	 .section .text.PWM_SVM_lStaticSVMSchemeModification,"ax",%progbits
 6169              	 .align 2
 6170              	 .global PWM_SVM_lStaticSVMSchemeModification
 6171              	 .thumb
 6172              	 .thumb_func
 6174              	PWM_SVM_lStaticSVMSchemeModification:
 6175              	.LFB248:
1693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1694:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1695:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 6176              	 .loc 4 1695 0
 6177              	 .cfi_startproc
 6178              	 
 6179              	 
 6180 0000 80B5     	 push {r7,lr}
 6181              	.LCFI244:
 6182              	 .cfi_def_cfa_offset 8
 6183              	 .cfi_offset 7,-8
 6184              	 .cfi_offset 14,-4
 6185 0002 82B0     	 sub sp,sp,#8
 6186              	.LCFI245:
 6187              	 .cfi_def_cfa_offset 16
 6188 0004 00AF     	 add r7,sp,#0
 6189              	.LCFI246:
 6190              	 .cfi_def_cfa_register 7
 6191 0006 7860     	 str r0,[r7,#4]
 6192 0008 0B46     	 mov r3,r1
 6193 000a FB70     	 strb r3,[r7,#3]
1696:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1697:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Optimized slice consumption should be unchecked for change of SVM scheme */
1698:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) false == HandlePtr->confighandle_ptr->enable_optimized_slice)
 6194              	 .loc 4 1698 0
 6195 000c 7B68     	 ldr r3,[r7,#4]
 6196 000e 1B68     	 ldr r3,[r3]
 6197 0010 93F84630 	 ldrb r3,[r3,#70]
 6198 0014 002B     	 cmp r3,#0
 6199 0016 40F06F81 	 bne .L209
1699:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1700:../Dave/Generated/PWM_SVM/pwm_svm.c ****     switch (Scheme)
 6200              	 .loc 4 1700 0
 6201 001a FB78     	 ldrb r3,[r7,#3]
 6202 001c 052B     	 cmp r3,#5
 6203 001e 00F26781 	 bhi .L211
 6204 0022 01A2     	 adr r2,.L213
 6205 0024 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 6206              	 .p2align 2
 6207              	.L213:
 6208 0028 41000000 	 .word .L212+1
 6209 002c E5000000 	 .word .L214+1
 6210 0030 43010000 	 .word .L215+1
 6211 0034 A1010000 	 .word .L216+1
 6212 0038 FF010000 	 .word .L217+1
 6213 003c 77020000 	 .word .L218+1
 6214              	 .p2align 1
 6215              	.L212:
1701:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1702:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_SYMM:
1703:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1704:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6216              	 .loc 4 1704 0
 6217 0040 7B68     	 ldr r3,[r7,#4]
 6218 0042 9B68     	 ldr r3,[r3,#8]
 6219 0044 1B68     	 ldr r3,[r3]
 6220 0046 1846     	 mov r0,r3
 6221 0048 0121     	 movs r1,#1
 6222 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1705:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1706:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6223              	 .loc 4 1706 0
 6224 004e 7B68     	 ldr r3,[r7,#4]
 6225 0050 DB68     	 ldr r3,[r3,#12]
 6226 0052 1B68     	 ldr r3,[r3]
 6227 0054 1846     	 mov r0,r3
 6228 0056 0121     	 movs r1,#1
 6229 0058 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1707:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1708:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6230              	 .loc 4 1708 0
 6231 005c 7B68     	 ldr r3,[r7,#4]
 6232 005e 1B69     	 ldr r3,[r3,#16]
 6233 0060 1B68     	 ldr r3,[r3]
 6234 0062 1846     	 mov r0,r3
 6235 0064 0121     	 movs r1,#1
 6236 0066 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1709:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1710:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1711:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6237              	 .loc 4 1711 0
 6238 006a 7868     	 ldr r0,[r7,#4]
 6239 006c FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1712:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1713:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6240              	 .loc 4 1713 0
 6241 0070 7B68     	 ldr r3,[r7,#4]
 6242 0072 9B68     	 ldr r3,[r3,#8]
 6243 0074 1B68     	 ldr r3,[r3]
 6244 0076 1846     	 mov r0,r3
 6245 0078 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1714:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6246              	 .loc 4 1714 0
 6247 007c 7B68     	 ldr r3,[r7,#4]
 6248 007e DB68     	 ldr r3,[r3,#12]
 6249 0080 1B68     	 ldr r3,[r3]
 6250 0082 1846     	 mov r0,r3
 6251 0084 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1715:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6252              	 .loc 4 1715 0
 6253 0088 7B68     	 ldr r3,[r7,#4]
 6254 008a 1B69     	 ldr r3,[r3,#16]
 6255 008c 1B68     	 ldr r3,[r3]
 6256 008e 1846     	 mov r0,r3
 6257 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1716:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1717:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*enable compare match event and bind to respective node*/
1718:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 6258              	 .loc 4 1718 0
 6259 0094 7B68     	 ldr r3,[r7,#4]
 6260 0096 1B68     	 ldr r3,[r3]
 6261 0098 1B7C     	 ldrb r3,[r3,#16]
 6262 009a 012B     	 cmp r3,#1
 6263 009c 1DD1     	 bne .L219
1719:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1720:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6264              	 .loc 4 1720 0
 6265 009e 7B68     	 ldr r3,[r7,#4]
 6266 00a0 5B69     	 ldr r3,[r3,#20]
 6267 00a2 1B68     	 ldr r3,[r3]
 6268 00a4 1846     	 mov r0,r3
 6269 00a6 0321     	 movs r1,#3
 6270 00a8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1721:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1722:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6271              	 .loc 4 1722 0
 6272 00ac 7B68     	 ldr r3,[r7,#4]
 6273 00ae 5B69     	 ldr r3,[r3,#20]
 6274 00b0 1B68     	 ldr r3,[r3]
 6275 00b2 1846     	 mov r0,r3
 6276 00b4 0521     	 movs r1,#5
 6277 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1723:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 6278              	 .loc 4 1724 0
 6279 00ba 7B68     	 ldr r3,[r7,#4]
 6280 00bc 5B69     	 ldr r3,[r3,#20]
 6281 00be 1A68     	 ldr r2,[r3]
1725:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1726:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1727:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[3] >> CCU8_CC8_SRS_CM1SR_Pos) & 0
 6282              	 .loc 4 1727 0
 6283 00c0 7B68     	 ldr r3,[r7,#4]
 6284 00c2 1B68     	 ldr r3,[r3]
 6285 00c4 5B6B     	 ldr r3,[r3,#52]
 6286 00c6 9B08     	 lsrs r3,r3,#2
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 6287              	 .loc 4 1724 0
 6288 00c8 DBB2     	 uxtb r3,r3
 6289 00ca 03F00303 	 and r3,r3,#3
 6290 00ce DBB2     	 uxtb r3,r3
 6291 00d0 1046     	 mov r0,r2
 6292 00d2 0421     	 movs r1,#4
 6293 00d4 1A46     	 mov r2,r3
 6294 00d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 6295              	.L219:
1728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1729:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 6296              	 .loc 4 1729 0
 6297 00da 7B68     	 ldr r3,[r7,#4]
 6298 00dc 884A     	 ldr r2,.L220
 6299 00de C3F88820 	 str r2,[r3,#136]
1730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6300              	 .loc 4 1730 0
 6301 00e2 05E1     	 b .L211
 6302              	.L214:
1731:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1732:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_ASYMM:
1733:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1734:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6303              	 .loc 4 1734 0
 6304 00e4 7B68     	 ldr r3,[r7,#4]
 6305 00e6 9B68     	 ldr r3,[r3,#8]
 6306 00e8 1B68     	 ldr r3,[r3]
 6307 00ea 1846     	 mov r0,r3
 6308 00ec 0121     	 movs r1,#1
 6309 00ee FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1735:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1736:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6310              	 .loc 4 1736 0
 6311 00f2 7B68     	 ldr r3,[r7,#4]
 6312 00f4 DB68     	 ldr r3,[r3,#12]
 6313 00f6 1B68     	 ldr r3,[r3]
 6314 00f8 1846     	 mov r0,r3
 6315 00fa 0121     	 movs r1,#1
 6316 00fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1737:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1738:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6317              	 .loc 4 1738 0
 6318 0100 7B68     	 ldr r3,[r7,#4]
 6319 0102 1B69     	 ldr r3,[r3,#16]
 6320 0104 1B68     	 ldr r3,[r3]
 6321 0106 1846     	 mov r0,r3
 6322 0108 0121     	 movs r1,#1
 6323 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1739:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1740:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1741:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6324              	 .loc 4 1741 0
 6325 010e 7868     	 ldr r0,[r7,#4]
 6326 0110 FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1742:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to asymmetric*/
1743:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6327              	 .loc 4 1743 0
 6328 0114 7B68     	 ldr r3,[r7,#4]
 6329 0116 9B68     	 ldr r3,[r3,#8]
 6330 0118 1B68     	 ldr r3,[r3]
 6331 011a 1846     	 mov r0,r3
 6332 011c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1744:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6333              	 .loc 4 1744 0
 6334 0120 7B68     	 ldr r3,[r7,#4]
 6335 0122 DB68     	 ldr r3,[r3,#12]
 6336 0124 1B68     	 ldr r3,[r3]
 6337 0126 1846     	 mov r0,r3
 6338 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1745:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6339              	 .loc 4 1745 0
 6340 012c 7B68     	 ldr r3,[r7,#4]
 6341 012e 1B69     	 ldr r3,[r3,#16]
 6342 0130 1B68     	 ldr r3,[r3]
 6343 0132 1846     	 mov r0,r3
 6344 0134 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1746:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym7;
 6345              	 .loc 4 1746 0
 6346 0138 7B68     	 ldr r3,[r7,#4]
 6347 013a 724A     	 ldr r2,.L220+4
 6348 013c C3F88820 	 str r2,[r3,#136]
1747:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6349              	 .loc 4 1747 0
 6350 0140 D6E0     	 b .L211
 6351              	.L215:
1748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_SYMM:
1750:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1751:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6352              	 .loc 4 1751 0
 6353 0142 7B68     	 ldr r3,[r7,#4]
 6354 0144 9B68     	 ldr r3,[r3,#8]
 6355 0146 1B68     	 ldr r3,[r3]
 6356 0148 1846     	 mov r0,r3
 6357 014a 0121     	 movs r1,#1
 6358 014c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1752:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1753:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6359              	 .loc 4 1753 0
 6360 0150 7B68     	 ldr r3,[r7,#4]
 6361 0152 DB68     	 ldr r3,[r3,#12]
 6362 0154 1B68     	 ldr r3,[r3]
 6363 0156 1846     	 mov r0,r3
 6364 0158 0121     	 movs r1,#1
 6365 015a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1754:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1755:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6366              	 .loc 4 1755 0
 6367 015e 7B68     	 ldr r3,[r7,#4]
 6368 0160 1B69     	 ldr r3,[r3,#16]
 6369 0162 1B68     	 ldr r3,[r3]
 6370 0164 1846     	 mov r0,r3
 6371 0166 0121     	 movs r1,#1
 6372 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1756:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1757:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1758:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6373              	 .loc 4 1758 0
 6374 016c 7868     	 ldr r0,[r7,#4]
 6375 016e FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1759:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1760:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6376              	 .loc 4 1760 0
 6377 0172 7B68     	 ldr r3,[r7,#4]
 6378 0174 9B68     	 ldr r3,[r3,#8]
 6379 0176 1B68     	 ldr r3,[r3]
 6380 0178 1846     	 mov r0,r3
 6381 017a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1761:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6382              	 .loc 4 1761 0
 6383 017e 7B68     	 ldr r3,[r7,#4]
 6384 0180 DB68     	 ldr r3,[r3,#12]
 6385 0182 1B68     	 ldr r3,[r3]
 6386 0184 1846     	 mov r0,r3
 6387 0186 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1762:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6388              	 .loc 4 1762 0
 6389 018a 7B68     	 ldr r3,[r7,#4]
 6390 018c 1B69     	 ldr r3,[r3,#16]
 6391 018e 1B68     	 ldr r3,[r3]
 6392 0190 1846     	 mov r0,r3
 6393 0192 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1763:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 6394              	 .loc 4 1763 0
 6395 0196 7B68     	 ldr r3,[r7,#4]
 6396 0198 5B4A     	 ldr r2,.L220+8
 6397 019a C3F88820 	 str r2,[r3,#136]
1764:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6398              	 .loc 4 1764 0
 6399 019e A7E0     	 b .L211
 6400              	.L216:
1765:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_ASYMM:
1767:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1768:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6401              	 .loc 4 1768 0
 6402 01a0 7B68     	 ldr r3,[r7,#4]
 6403 01a2 9B68     	 ldr r3,[r3,#8]
 6404 01a4 1B68     	 ldr r3,[r3]
 6405 01a6 1846     	 mov r0,r3
 6406 01a8 0121     	 movs r1,#1
 6407 01aa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1769:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1770:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6408              	 .loc 4 1770 0
 6409 01ae 7B68     	 ldr r3,[r7,#4]
 6410 01b0 DB68     	 ldr r3,[r3,#12]
 6411 01b2 1B68     	 ldr r3,[r3]
 6412 01b4 1846     	 mov r0,r3
 6413 01b6 0121     	 movs r1,#1
 6414 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1771:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1772:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6415              	 .loc 4 1772 0
 6416 01bc 7B68     	 ldr r3,[r7,#4]
 6417 01be 1B69     	 ldr r3,[r3,#16]
 6418 01c0 1B68     	 ldr r3,[r3]
 6419 01c2 1846     	 mov r0,r3
 6420 01c4 0121     	 movs r1,#1
 6421 01c6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1773:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1774:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1775:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6422              	 .loc 4 1775 0
 6423 01ca 7868     	 ldr r0,[r7,#4]
 6424 01cc FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1776:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1777:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6425              	 .loc 4 1777 0
 6426 01d0 7B68     	 ldr r3,[r7,#4]
 6427 01d2 9B68     	 ldr r3,[r3,#8]
 6428 01d4 1B68     	 ldr r3,[r3]
 6429 01d6 1846     	 mov r0,r3
 6430 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1778:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6431              	 .loc 4 1778 0
 6432 01dc 7B68     	 ldr r3,[r7,#4]
 6433 01de DB68     	 ldr r3,[r3,#12]
 6434 01e0 1B68     	 ldr r3,[r3]
 6435 01e2 1846     	 mov r0,r3
 6436 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1779:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6437              	 .loc 4 1779 0
 6438 01e8 7B68     	 ldr r3,[r7,#4]
 6439 01ea 1B69     	 ldr r3,[r3,#16]
 6440 01ec 1B68     	 ldr r3,[r3]
 6441 01ee 1846     	 mov r0,r3
 6442 01f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1780:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 6443              	 .loc 4 1780 0
 6444 01f4 7B68     	 ldr r3,[r7,#4]
 6445 01f6 454A     	 ldr r2,.L220+12
 6446 01f8 C3F88820 	 str r2,[r3,#136]
1781:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6447              	 .loc 4 1781 0
 6448 01fc 78E0     	 b .L211
 6449              	.L217:
1782:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1783:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_3ACTIVE:
1784:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1785:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6450              	 .loc 4 1785 0
 6451 01fe 7B68     	 ldr r3,[r7,#4]
 6452 0200 9B68     	 ldr r3,[r3,#8]
 6453 0202 1B68     	 ldr r3,[r3]
 6454 0204 1846     	 mov r0,r3
 6455 0206 0021     	 movs r1,#0
 6456 0208 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1786:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1787:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6457              	 .loc 4 1787 0
 6458 020c 7B68     	 ldr r3,[r7,#4]
 6459 020e DB68     	 ldr r3,[r3,#12]
 6460 0210 1B68     	 ldr r3,[r3]
 6461 0212 1846     	 mov r0,r3
 6462 0214 0021     	 movs r1,#0
 6463 0216 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1788:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1789:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6464              	 .loc 4 1789 0
 6465 021a 7B68     	 ldr r3,[r7,#4]
 6466 021c 1B69     	 ldr r3,[r3,#16]
 6467 021e 1B68     	 ldr r3,[r3]
 6468 0220 1846     	 mov r0,r3
 6469 0222 0021     	 movs r1,#0
 6470 0224 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1790:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1791:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1792:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6471              	 .loc 4 1792 0
 6472 0228 7868     	 ldr r0,[r7,#4]
 6473 022a FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1793:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_
 6474              	 .loc 4 1793 0
 6475 022e 7B68     	 ldr r3,[r7,#4]
 6476 0230 B3F8C430 	 ldrh r3,[r3,#196]
 6477 0234 1A46     	 mov r2,r3
 6478 0236 5200     	 lsls r2,r2,#1
 6479 0238 1344     	 add r3,r3,r2
 6480 023a 9BB2     	 uxth r3,r3
 6481 023c C3F58043 	 rsb r3,r3,#16384
 6482 0240 9AB2     	 uxth r2,r3
 6483 0242 7B68     	 ldr r3,[r7,#4]
 6484 0244 A3F8C620 	 strh r2,[r3,#198]
1794:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6485              	 .loc 4 1794 0
 6486 0248 7B68     	 ldr r3,[r7,#4]
 6487 024a 9B68     	 ldr r3,[r3,#8]
 6488 024c 1B68     	 ldr r3,[r3]
 6489 024e 1846     	 mov r0,r3
 6490 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1795:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6491              	 .loc 4 1795 0
 6492 0254 7B68     	 ldr r3,[r7,#4]
 6493 0256 DB68     	 ldr r3,[r3,#12]
 6494 0258 1B68     	 ldr r3,[r3]
 6495 025a 1846     	 mov r0,r3
 6496 025c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1796:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6497              	 .loc 4 1796 0
 6498 0260 7B68     	 ldr r3,[r7,#4]
 6499 0262 1B69     	 ldr r3,[r3,#16]
 6500 0264 1B68     	 ldr r3,[r3]
 6501 0266 1846     	 mov r0,r3
 6502 0268 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1797:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 6503              	 .loc 4 1797 0
 6504 026c 7B68     	 ldr r3,[r7,#4]
 6505 026e 284A     	 ldr r2,.L220+16
 6506 0270 C3F88820 	 str r2,[r3,#136]
1798:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6507              	 .loc 4 1798 0
 6508 0274 3CE0     	 b .L211
 6509              	.L218:
1799:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1800:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_4ACTIVE:
1801:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1802:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6510              	 .loc 4 1802 0
 6511 0276 7B68     	 ldr r3,[r7,#4]
 6512 0278 9B68     	 ldr r3,[r3,#8]
 6513 027a 1B68     	 ldr r3,[r3]
 6514 027c 1846     	 mov r0,r3
 6515 027e 0021     	 movs r1,#0
 6516 0280 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1803:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1804:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6517              	 .loc 4 1804 0
 6518 0284 7B68     	 ldr r3,[r7,#4]
 6519 0286 DB68     	 ldr r3,[r3,#12]
 6520 0288 1B68     	 ldr r3,[r3]
 6521 028a 1846     	 mov r0,r3
 6522 028c 0021     	 movs r1,#0
 6523 028e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1805:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1806:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6524              	 .loc 4 1806 0
 6525 0292 7B68     	 ldr r3,[r7,#4]
 6526 0294 1B69     	 ldr r3,[r3,#16]
 6527 0296 1B68     	 ldr r3,[r3]
 6528 0298 1846     	 mov r0,r3
 6529 029a 0021     	 movs r1,#0
 6530 029c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1807:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1809:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6531              	 .loc 4 1809 0
 6532 02a0 7868     	 ldr r0,[r7,#4]
 6533 02a2 FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
1811:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) Handl
 6534              	 .loc 4 1811 0
 6535 02a6 7B68     	 ldr r3,[r7,#4]
 6536 02a8 B3F8C430 	 ldrh r3,[r3,#196]
 6537 02ac 1A46     	 mov r2,r3
 6538 02ae 9203     	 lsls r2,r2,#14
 6539 02b0 D31A     	 subs r3,r2,r3
 6540 02b2 9B00     	 lsls r3,r3,#2
 6541 02b4 9BB2     	 uxth r3,r3
 6542 02b6 03F58043 	 add r3,r3,#16384
 6543 02ba 9AB2     	 uxth r2,r3
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
 6544              	 .loc 4 1810 0
 6545 02bc 7B68     	 ldr r3,[r7,#4]
 6546 02be A3F8C620 	 strh r2,[r3,#198]
1812:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6547              	 .loc 4 1812 0
 6548 02c2 7B68     	 ldr r3,[r7,#4]
 6549 02c4 9B68     	 ldr r3,[r3,#8]
 6550 02c6 1B68     	 ldr r3,[r3]
 6551 02c8 1846     	 mov r0,r3
 6552 02ca FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1813:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6553              	 .loc 4 1813 0
 6554 02ce 7B68     	 ldr r3,[r7,#4]
 6555 02d0 DB68     	 ldr r3,[r3,#12]
 6556 02d2 1B68     	 ldr r3,[r3]
 6557 02d4 1846     	 mov r0,r3
 6558 02d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1814:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6559              	 .loc 4 1814 0
 6560 02da 7B68     	 ldr r3,[r7,#4]
 6561 02dc 1B69     	 ldr r3,[r3,#16]
 6562 02de 1B68     	 ldr r3,[r3]
 6563 02e0 1846     	 mov r0,r3
 6564 02e2 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1815:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 6565              	 .loc 4 1815 0
 6566 02e6 7B68     	 ldr r3,[r7,#4]
 6567 02e8 0A4A     	 ldr r2,.L220+20
 6568 02ea C3F88820 	 str r2,[r3,#136]
1816:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6569              	 .loc 4 1816 0
 6570 02ee 00BF     	 nop
 6571              	.L211:
1817:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1818:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*set the scheme*/
1819:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->svm_config = Scheme;
 6572              	 .loc 4 1819 0
 6573 02f0 7B68     	 ldr r3,[r7,#4]
 6574 02f2 FA78     	 ldrb r2,[r7,#3]
 6575 02f4 83F89220 	 strb r2,[r3,#146]
 6576              	.L209:
1820:../Dave/Generated/PWM_SVM/pwm_svm.c ****   } /* END OF if (false == HandlePtr->enable_optimized_slice) */
1821:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6577              	 .loc 4 1821 0
 6578 02f8 0837     	 adds r7,r7,#8
 6579              	.LCFI247:
 6580              	 .cfi_def_cfa_offset 8
 6581 02fa BD46     	 mov sp,r7
 6582              	.LCFI248:
 6583              	 .cfi_def_cfa_register 13
 6584              	 
 6585 02fc 80BD     	 pop {r7,pc}
 6586              	.L221:
 6587 02fe 00BF     	 .align 2
 6588              	.L220:
 6589 0300 00000000 	 .word PWM_SVM_CalCmpValueSym7
 6590 0304 00000000 	 .word PWM_SVM_CalCmpValueAsym7
 6591 0308 00000000 	 .word PWM_SVM_CalCmpValueSym5
 6592 030c 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 6593 0310 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 6594 0314 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 6595              	 .cfi_endproc
 6596              	.LFE248:
 6598              	 .section .text.PWM_SVM_GetSVMScheme,"ax",%progbits
 6599              	 .align 2
 6600              	 .global PWM_SVM_GetSVMScheme
 6601              	 .thumb
 6602              	 .thumb_func
 6604              	PWM_SVM_GetSVMScheme:
 6605              	.LFB249:
1822:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the SVM scheme*/
1823:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_SVMCONFIG_t PWM_SVM_GetSVMScheme(PWM_SVM_t* const HandlePtr)
1824:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 6606              	 .loc 4 1824 0
 6607              	 .cfi_startproc
 6608              	 
 6609              	 
 6610              	 
 6611 0000 80B4     	 push {r7}
 6612              	.LCFI249:
 6613              	 .cfi_def_cfa_offset 4
 6614              	 .cfi_offset 7,-4
 6615 0002 83B0     	 sub sp,sp,#12
 6616              	.LCFI250:
 6617              	 .cfi_def_cfa_offset 16
 6618 0004 00AF     	 add r7,sp,#0
 6619              	.LCFI251:
 6620              	 .cfi_def_cfa_register 7
 6621 0006 7860     	 str r0,[r7,#4]
1825:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1826:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (HandlePtr->svm_config);
 6622              	 .loc 4 1826 0
 6623 0008 7B68     	 ldr r3,[r7,#4]
 6624 000a 93F89230 	 ldrb r3,[r3,#146]
1827:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6625              	 .loc 4 1827 0
 6626 000e 1846     	 mov r0,r3
 6627 0010 0C37     	 adds r7,r7,#12
 6628              	.LCFI252:
 6629              	 .cfi_def_cfa_offset 4
 6630 0012 BD46     	 mov sp,r7
 6631              	.LCFI253:
 6632              	 .cfi_def_cfa_register 13
 6633              	 
 6634 0014 5DF8047B 	 ldr r7,[sp],#4
 6635              	.LCFI254:
 6636              	 .cfi_restore 7
 6637              	 .cfi_def_cfa_offset 0
 6638 0018 7047     	 bx lr
 6639              	 .cfi_endproc
 6640              	.LFE249:
 6642 001a 00BF     	 .text
 6643              	.Letext0:
 6644              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6645              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6646              	 .file 7 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 6647              	 .file 8 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc4_scu.h"
 6648              	 .file 9 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Dave/Generated/DAVE_Common.h"
 6649              	 .file 10 "../Dave/Generated/PWM_SVM/../GLOBAL_CCU8/global_ccu8.h"
 6650              	 .file 11 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/XMCLib/inc/xmc4_gpio.h"
 6651              	 .file 12 "../Dave/Generated/PWM_SVM/pwm_svm.h"
 6652              	 .file 13 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Include/core_cm4.h"
 6653              	 .file 14 "C:/Users/Mafish/Documents/GitHub/MAB_Driver/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_svm.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:71     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:75     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:119    .text.XMC_CCU8_SLICE_DisableTrap:00000000 $t
    {standard input}:123    .text.XMC_CCU8_SLICE_DisableTrap:00000000 XMC_CCU8_SLICE_DisableTrap
    {standard input}:168    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:172    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:211    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:215    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:255    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 $t
    {standard input}:259    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 XMC_CCU8_SLICE_SetTimerValue
    {standard input}:300    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:304    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:350    .text.XMC_CCU8_SLICE_DisableEvent:00000000 $t
    {standard input}:354    .text.XMC_CCU8_SLICE_DisableEvent:00000000 XMC_CCU8_SLICE_DisableEvent
    {standard input}:401    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:405    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:451    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 $t
    {standard input}:455    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableAsymmetricCompareMode
    {standard input}:496    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 $t
    {standard input}:500    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableSymmetricCompareMode
    {standard input}:541    .text.XMC_SCU_SetCcuTriggerHigh:00000000 $t
    {standard input}:545    .text.XMC_SCU_SetCcuTriggerHigh:00000000 XMC_SCU_SetCcuTriggerHigh
    {standard input}:587    .text.XMC_SCU_SetCcuTriggerHigh:00000020 $d
    {standard input}:592    .text.XMC_SCU_SetCcuTriggerLow:00000000 $t
    {standard input}:596    .text.XMC_SCU_SetCcuTriggerLow:00000000 XMC_SCU_SetCcuTriggerLow
    {standard input}:638    .text.XMC_SCU_SetCcuTriggerLow:00000020 $d
    {standard input}:643    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:647    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:691    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:695    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:738    .text.PWM_SVM_lEnableEvent:00000000 $t
    {standard input}:743    .text.PWM_SVM_lEnableEvent:00000000 PWM_SVM_lEnableEvent
    {standard input}:803    .text.PWM_SVM_InverterDisable:00000000 $t
    {standard input}:808    .text.PWM_SVM_InverterDisable:00000000 PWM_SVM_InverterDisable
    {standard input}:873    .text.PWM_SVM_InverterEnable:00000000 $t
    {standard input}:878    .text.PWM_SVM_InverterEnable:00000000 PWM_SVM_InverterEnable
    {standard input}:943    .text.PWM_SVM_lCurrentTrigSliceInit:00000000 $t
    {standard input}:948    .text.PWM_SVM_lCurrentTrigSliceInit:00000000 PWM_SVM_lCurrentTrigSliceInit
    {standard input}:1149   .ram_code:00000000 $t
    {standard input}:1153   .ram_code:00000000 PWM_SVM_lSymCompValUpdate
    {standard input}:1181   .ram_code:00000020 $d
    {standard input}:1186   .ram_code:00000034 $t
    {standard input}:1355   .text.PWM_SVM_lAsymCompValUpdate:00000000 $t
    {standard input}:1359   .text.PWM_SVM_lAsymCompValUpdate:00000000 PWM_SVM_lAsymCompValUpdate
    {standard input}:1387   .text.PWM_SVM_lAsymCompValUpdate:00000020 $d
    {standard input}:1392   .text.PWM_SVM_lAsymCompValUpdate:00000034 $t
    {standard input}:1698   .ram_code:00000160 PWM_SVM_CalCmpValueSym7
    {standard input}:1794   .ram_code:000001f8 PWM_SVM_CalCmpValueSym5
    {standard input}:1876   .text.PWM_SVM_CalCmpValueAsym7:00000000 $t
    {standard input}:1881   .text.PWM_SVM_CalCmpValueAsym7:00000000 PWM_SVM_CalCmpValueAsym7
    {standard input}:2042   .text.PWM_SVM_CalCmpValueAsym5:00000000 $t
    {standard input}:2047   .text.PWM_SVM_CalCmpValueAsym5:00000000 PWM_SVM_CalCmpValueAsym5
    {standard input}:2169   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 $t
    {standard input}:2174   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 PWM_SVM_Calc3av5segmentCompVal
    {standard input}:2351   .text.PWM_SVM_Calc3av5segmentCompVal:0000016c $d
    {standard input}:2356   .text.PWM_SVM_Calc3av5segmentCompVal:00000180 $t
    {standard input}:2857   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 $t
    {standard input}:2862   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 PWM_SVM_Calc4av7segmentCompVal
    {standard input}:3011   .text.PWM_SVM_Calc4av7segmentCompVal:00000124 $d
    {standard input}:3016   .text.PWM_SVM_Calc4av7segmentCompVal:00000138 $t
    {standard input}:3570   .ram_code:00000278 PWM_SVM_TimecalcUsingLUT
    {standard input}:3764   .ram_code:000003fc $d
    {standard input}:3769   .text.PWM_SVM_GetAppVersion:00000000 $t
    {standard input}:3774   .text.PWM_SVM_GetAppVersion:00000000 PWM_SVM_GetAppVersion
    {standard input}:3834   .text.PWM_SVM_Init:00000000 $t
    {standard input}:3839   .text.PWM_SVM_Init:00000000 PWM_SVM_Init
    {standard input}:4211   .text.PWM_SVM_Start:00000000 $t
    {standard input}:4216   .text.PWM_SVM_Start:00000000 PWM_SVM_Start
    {standard input}:4595   .text.PWM_SVM_Stop:00000000 $t
    {standard input}:4600   .text.PWM_SVM_Stop:00000000 PWM_SVM_Stop
    {standard input}:4756   .ram_code:00000400 $t
    {standard input}:4761   .ram_code:00000400 PWM_SVM_SVMUpdate
    {standard input}:4822   .text.PWM_SVM_SetPWMFrequency:00000000 $t
    {standard input}:4827   .text.PWM_SVM_SetPWMFrequency:00000000 PWM_SVM_SetPWMFrequency
    {standard input}:5024   .text.PWM_SVM_GetPWMFrequency:00000000 $t
    {standard input}:5029   .text.PWM_SVM_GetPWMFrequency:00000000 PWM_SVM_GetPWMFrequency
    {standard input}:5099   .text.PWM_SVM_SetDeadTime:00000000 $t
    {standard input}:5104   .text.PWM_SVM_SetDeadTime:00000000 PWM_SVM_SetDeadTime
    {standard input}:5314   .text.PWM_SVM_SetDeadTime:0000014c $d
    {standard input}:5320   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 $t
    {standard input}:5325   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 PWM_SVM_GetRisingEdgeDeadTime
    {standard input}:5385   .text.PWM_SVM_GetRisingEdgeDeadTime:0000004c $d
    {standard input}:5391   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 $t
    {standard input}:5396   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 PWM_SVM_GetFallingEdgeDeadTime
    {standard input}:5456   .text.PWM_SVM_GetFallingEdgeDeadTime:0000004c $d
    {standard input}:5462   .text.PWM_SVM_SetTmin:00000000 $t
    {standard input}:5467   .text.PWM_SVM_SetTmin:00000000 PWM_SVM_SetTmin
    {standard input}:5537   .text.PWM_SVM_SetTmin:00000054 $d
    {standard input}:5543   .text.PWM_SVM_GetTmin:00000000 $t
    {standard input}:5548   .text.PWM_SVM_GetTmin:00000000 PWM_SVM_GetTmin
    {standard input}:5602   .text.PWM_SVM_GetTmin:00000040 $d
    {standard input}:5608   .text.PWM_SVM_SetSVMScheme:00000000 $t
    {standard input}:5613   .text.PWM_SVM_SetSVMScheme:00000000 PWM_SVM_SetSVMScheme
    {standard input}:5703   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 PWM_SVM_lDynamicSVMSchemeModification
    {standard input}:6174   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 PWM_SVM_lStaticSVMSchemeModification
    {standard input}:5698   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 $t
    {standard input}:5731   .text.PWM_SVM_lDynamicSVMSchemeModification:0000001c $d
    {standard input}:5737   .text.PWM_SVM_lDynamicSVMSchemeModification:00000034 $t
    {standard input}:5945   .text.PWM_SVM_lDynamicSVMSchemeModification:00000198 $d
    {standard input}:5954   .text.PWM_SVM_lCAPeriodValueConfig:00000000 $t
    {standard input}:5959   .text.PWM_SVM_lCAPeriodValueConfig:00000000 PWM_SVM_lCAPeriodValueConfig
    {standard input}:6064   .text.PWM_SVM_lEAPeriodValueConfig:00000000 $t
    {standard input}:6069   .text.PWM_SVM_lEAPeriodValueConfig:00000000 PWM_SVM_lEAPeriodValueConfig
    {standard input}:6169   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 $t
    {standard input}:6208   .text.PWM_SVM_lStaticSVMSchemeModification:00000028 $d
    {standard input}:6214   .text.PWM_SVM_lStaticSVMSchemeModification:00000040 $t
    {standard input}:6589   .text.PWM_SVM_lStaticSVMSchemeModification:00000300 $d
    {standard input}:6599   .text.PWM_SVM_GetSVMScheme:00000000 $t
    {standard input}:6604   .text.PWM_SVM_GetSVMScheme:00000000 PWM_SVM_GetSVMScheme
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_SetTimerCompareMatch
Sinus60_tab
GLOBAL_CCU8_Init
XMC_GPIO_Init
XMC_GPIO_SetHardwareControl
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_ConfigureStatusBitOutput
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_SetDeadTimeValue
XMC_CCU8_SLICE_SetDeadTimePrescaler
XMC_CCU8_SLICE_SetInterruptNode
XMC_CCU8_SLICE_SetTimerCountingMode
